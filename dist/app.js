// Generated by purs bundle 0.12.5
var PS = {};
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];                          
  var Alt = function (Functor0, alt) {
      this.Functor0 = Functor0;
      this.alt = alt;
  };                                                       
  var alt = function (dict) {
      return dict.alt;
  };
  exports["Alt"] = Alt;
  exports["alt"] = alt;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l*k);
      var n = 0;
      for (var i = 0; i < l; i++) {
        var f = fs[i];
        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }
      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var compose = function (dict) {
      return dict.compose;
  };
  var composeFlipped = function (dictSemigroupoid) {
      return function (f) {
          return function (g) {
              return compose(dictSemigroupoid)(g)(f);
          };
      };
  };
  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["composeFlipped"] = composeFlipped;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];                
  var Category = function (Semigroupoid0, identity) {
      this.Semigroupoid0 = Semigroupoid0;
      this.identity = identity;
  };
  var identity = function (dict) {
      return dict.identity;
  };
  var categoryFn = new Category(function () {
      return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
      return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  exports["flip"] = flip;
  exports["const"] = $$const;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];                
  var Functor = function (map) {
      this.map = map;
  };
  var map = function (dict) {
      return dict.map;
  };
  var mapFlipped = function (dictFunctor) {
      return function (fa) {
          return function (f) {
              return map(dictFunctor)(f)(fa);
          };
      };
  };
  var $$void = function (dictFunctor) {
      return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };
  var voidLeft = function (dictFunctor) {
      return function (f) {
          return function (x) {
              return map(dictFunctor)(Data_Function["const"](x))(f);
          };
      };
  };
  var voidRight = function (dictFunctor) {
      return function (x) {
          return map(dictFunctor)(Data_Function["const"](x));
      };
  };
  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  var flap = function (dictFunctor) {
      return function (ff) {
          return function (x) {
              return map(dictFunctor)(function (f) {
                  return f(x);
              })(ff);
          };
      };
  };
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["mapFlipped"] = mapFlipped;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["flap"] = flap;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];                
  var Apply = function (Functor0, apply) {
      this.Functor0 = Functor0;
      this.apply = apply;
  }; 
  var applyArray = new Apply(function () {
      return Data_Functor.functorArray;
  }, $foreign.arrayApply);
  var apply = function (dict) {
      return dict.apply;
  };
  var applySecond = function (dictApply) {
      return function (a) {
          return function (b) {
              return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
          };
      };
  };
  var lift2 = function (dictApply) {
      return function (f) {
          return function (a) {
              return function (b) {
                  return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
              };
          };
      };
  };
  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];                
  var Applicative = function (Apply0, pure) {
      this.Apply0 = Apply0;
      this.pure = pure;
  };
  var pure = function (dict) {
      return dict.pure;
  };
  var unless = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (!v) {
                  return v1;
              };
              if (v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 62, column 1 - line 62, column 65): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var when = function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return pure(dictApplicative)(Data_Unit.unit);
              };
              throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
          };
      };
  };
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["unless"] = unless;
  exports["when"] = when;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];                
  var Bifunctor = function (bimap) {
      this.bimap = bimap;
  };
  var bimap = function (dict) {
      return dict.bimap;
  };
  var rmap = function (dictBifunctor) {
      return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["rmap"] = rmap;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];          
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof Left) {
              return new Left(m.value0);
          };
          if (m instanceof Right) {
              return new Right(f(m.value0));
          };
          throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [ m.constructor.name ]);
      };
  });
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return new Left(v(v2.value0));
              };
              if (v2 instanceof Right) {
                  return new Right(v1(v2.value0));
              };
              throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  });
  var applyEither = new Control_Apply.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Data_Functor.map(functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 82, column 41): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeEither = new Control_Applicative.Applicative(function () {
      return applyEither;
  }, Right.create);
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];                   
  var Plus = function (Alt0, empty) {
      this.Alt0 = Alt0;
      this.empty = empty;
  };       
  var empty = function (dict) {
      return dict.empty;
  };
  exports["Plus"] = Plus;
  exports["empty"] = empty;
})(PS);
(function(exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  "use strict";

  var refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqBooleanImpl = refEq;
  exports.eqIntImpl = refEq;   
  exports.eqCharImpl = refEq;
  exports.eqStringImpl = refEq;

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Symbol"] = $PS["Data.Symbol"] || {};
  var exports = $PS["Data.Symbol"];      
  var SProxy = (function () {
      function SProxy() {

      };
      SProxy.value = new SProxy();
      return SProxy;
  })();
  var IsSymbol = function (reflectSymbol) {
      this.reflectSymbol = reflectSymbol;
  };
  var reflectSymbol = function (dict) {
      return dict.reflectSymbol;
  };
  exports["IsSymbol"] = IsSymbol;
  exports["reflectSymbol"] = reflectSymbol;
  exports["SProxy"] = SProxy;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeHas = function (label) {
    return function (rec) {
      return {}.hasOwnProperty.call(rec, label);
    };
  };

  exports.unsafeGet = function (label) {
    return function (rec) {
      return rec[label];
    };
  };

  exports.unsafeSet = function (label) {
    return function (value) {
      return function (rec) {
        var copy = {};
        for (var key in rec) {
          if ({}.hasOwnProperty.call(rec, key)) {
            copy[key] = rec[key];
          }
        }
        copy[label] = value;
        return copy;
      };
    };
  };

  exports.unsafeDelete = function (label) {
    return function (rec) {
      var copy = {};
      for (var key in rec) {
        if (key !== label && {}.hasOwnProperty.call(rec, key)) {
          copy[key] = rec[key];
        }
      }
      return copy;
    };
  };
})(PS["Record.Unsafe"] = PS["Record.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Record.Unsafe"] = $PS["Record.Unsafe"] || {};
  var exports = $PS["Record.Unsafe"];
  var $foreign = $PS["Record.Unsafe"];
  exports["unsafeHas"] = $foreign.unsafeHas;
  exports["unsafeGet"] = $foreign.unsafeGet;
  exports["unsafeSet"] = $foreign.unsafeSet;
  exports["unsafeDelete"] = $foreign.unsafeDelete;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Type.Data.RowList"] = $PS["Type.Data.RowList"] || {};
  var exports = $PS["Type.Data.RowList"];
  var RLProxy = (function () {
      function RLProxy() {

      };
      RLProxy.value = new RLProxy();
      return RLProxy;
  })();
  exports["RLProxy"] = RLProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var EqRecord = function (eqRecord) {
      this.eqRecord = eqRecord;
  };
  var Eq = function (eq) {
      this.eq = eq;
  }; 
  var eqUnit = new Eq(function (v) {
      return function (v1) {
          return true;
      };
  });
  var eqString = new Eq($foreign.eqStringImpl);
  var eqRowNil = new EqRecord(function (v) {
      return function (v1) {
          return function (v2) {
              return true;
          };
      };
  });
  var eqRecord = function (dict) {
      return dict.eqRecord;
  };
  var eqRec = function (dictRowToList) {
      return function (dictEqRecord) {
          return new Eq(eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value));
      };
  };                                           
  var eqInt = new Eq($foreign.eqIntImpl);
  var eqChar = new Eq($foreign.eqCharImpl);
  var eqBoolean = new Eq($foreign.eqBooleanImpl);
  var eq = function (dict) {
      return dict.eq;
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  }; 
  var eqRowCons = function (dictEqRecord) {
      return function (dictCons) {
          return function (dictIsSymbol) {
              return function (dictEq) {
                  return new EqRecord(function (v) {
                      return function (ra) {
                          return function (rb) {
                              var tail = eqRecord(dictEqRecord)(Type_Data_RowList.RLProxy.value)(ra)(rb);
                              var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                              var get = Record_Unsafe.unsafeGet(key);
                              return eq(dictEq)(get(ra))(get(rb)) && tail;
                          };
                      };
                  });
              };
          };
      };
  };
  var notEq = function (dictEq) {
      return function (x) {
          return function (y) {
              return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
          };
      };
  };
  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["EqRecord"] = EqRecord;
  exports["eqRecord"] = eqRecord;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqUnit"] = eqUnit;
  exports["eqArray"] = eqArray;
  exports["eqRec"] = eqRec;
  exports["eqRowNil"] = eqRowNil;
  exports["eqRowCons"] = eqRowCons;
})(PS);
(function(exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];
  var HeytingAlgebra = function (conj, disj, ff, implies, not, tt) {
      this.conj = conj;
      this.disj = disj;
      this.ff = ff;
      this.implies = implies;
      this.not = not;
      this.tt = tt;
  };
  var tt = function (dict) {
      return dict.tt;
  };
  var not = function (dict) {
      return dict.not;
  };
  var implies = function (dict) {
      return dict.implies;
  };
  var ff = function (dict) {
      return dict.ff;
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
      return function (b) {
          return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
      };
  }, $foreign.boolNot, true);
  var conj = function (dict) {
      return dict.conj;
  };
  var heytingAlgebraFunction = function (dictHeytingAlgebra) {
      return new HeytingAlgebra(function (f) {
          return function (g) {
              return function (a) {
                  return conj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (g) {
              return function (a) {
                  return disj(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (v) {
          return ff(dictHeytingAlgebra);
      }, function (f) {
          return function (g) {
              return function (a) {
                  return implies(dictHeytingAlgebra)(f(a))(g(a));
              };
          };
      }, function (f) {
          return function (a) {
              return not(dictHeytingAlgebra)(f(a));
          };
      }, function (v) {
          return tt(dictHeytingAlgebra);
      });
  };
  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);
(function(exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];                
  var Discard = function (discard) {
      this.discard = discard;
  };
  var Bind = function (Apply0, bind) {
      this.Apply0 = Apply0;
      this.bind = bind;
  };
  var discard = function (dict) {
      return dict.discard;
  }; 
  var bindArray = new Bind(function () {
      return Control_Apply.applyArray;
  }, $foreign.arrayBind);
  var bind = function (dict) {
      return dict.bind;
  };
  var bindFlipped = function (dictBind) {
      return Data_Function.flip(bind(dictBind));
  };
  var composeKleisliFlipped = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bindFlipped(dictBind)(f)(g(a));
              };
          };
      };
  };
  var composeKleisli = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return bind(dictBind)(f(a))(g);
              };
          };
      };
  };
  var discardUnit = new Discard(function (dictBind) {
      return bind(dictBind);
  });
  var join = function (dictBind) {
      return function (m) {
          return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);
(function(exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];
  var Semigroup = function (append) {
      this.append = append;
  }; 
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var append = function (dict) {
      return dict.append;
  };
  var semigroupFn = function (dictSemigroup) {
      return new Semigroup(function (f) {
          return function (g) {
              return function (x) {
                  return append(dictSemigroup)(f(x))(g(x));
              };
          };
      });
  };
  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Monoid = function (Semigroup0, mempty) {
      this.Semigroup0 = Semigroup0;
      this.mempty = mempty;
  };                 
  var monoidString = new Monoid(function () {
      return Data_Semigroup.semigroupString;
  }, "");                    
  var monoidArray = new Monoid(function () {
      return Data_Semigroup.semigroupArray;
  }, [  ]);
  var mempty = function (dict) {
      return dict.mempty;
  };
  var monoidFn = function (dictMonoid) {
      return new Monoid(function () {
          return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
      }, function (v) {
          return mempty(dictMonoid);
      });
  };
  var guard = function (dictMonoid) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return mempty(dictMonoid);
              };
              throw new Error("Failed pattern match at Data.Monoid (line 73, column 1 - line 73, column 49): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["guard"] = guard;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS);
(function(exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g, // eslint-disable-line no-control-regex
      function (c, i) {
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };

  exports.showArrayImpl = function (f) {
    return function (xs) {
      var ss = [];
      for (var i = 0, l = xs.length; i < l; i++) {
        ss[i] = f(xs[i]);
      }
      return "[" + ss.join(",") + "]";
    };
  };

  exports.cons = function (head) {
    return function (tail) {
      return [head].concat(tail);
    };
  };

  exports.join = function (separator) {
    return function (xs) {
      return xs.join(separator);
    };
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var ShowRecordFields = function (showRecordFields) {
      this.showRecordFields = showRecordFields;
  };
  var Show = function (show) {
      this.show = show;
  };
  var showString = new Show($foreign.showStringImpl);
  var showRecordFieldsNil = new ShowRecordFields(function (v) {
      return function (v1) {
          return [  ];
      };
  });
  var showRecordFields = function (dict) {
      return dict.showRecordFields;
  };
  var showRecord = function (dictRowToList) {
      return function (dictShowRecordFields) {
          return new Show(function (record) {
              var v = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
              if (v.length === 0) {
                  return "{}";
              };
              return $foreign.join(" ")([ "{", $foreign.join(", ")(v), "}" ]);
          });
      };
  };
  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);  
  var showBoolean = new Show(function (v) {
      if (v) {
          return "true";
      };
      if (!v) {
          return "false";
      };
      throw new Error("Failed pattern match at Data.Show (line 20, column 1 - line 20, column 37): " + [ v.constructor.name ]);
  });
  var show = function (dict) {
      return dict.show;
  };
  var showArray = function (dictShow) {
      return new Show($foreign.showArrayImpl(show(dictShow)));
  };
  var showRecordFieldsCons = function (dictIsSymbol) {
      return function (dictShowRecordFields) {
          return function (dictShow) {
              return new ShowRecordFields(function (v) {
                  return function (record) {
                      var tail = showRecordFields(dictShowRecordFields)(Type_Data_RowList.RLProxy.value)(record);
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
                      var focus = Record_Unsafe.unsafeGet(key)(record);
                      return $foreign.cons($foreign.join(": ")([ key, show(dictShow)(focus) ]))(tail);
                  };
              });
          };
      };
  };
  exports["Show"] = Show;
  exports["show"] = show;
  exports["ShowRecordFields"] = ShowRecordFields;
  exports["showRecordFields"] = showRecordFields;
  exports["showBoolean"] = showBoolean;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
  exports["showString"] = showString;
  exports["showArray"] = showArray;
  exports["showRecord"] = showRecord;
  exports["showRecordFieldsNil"] = showRecordFieldsNil;
  exports["showRecordFieldsCons"] = showRecordFieldsCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];                
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var showMaybe = function (dictShow) {
      return new Data_Show.Show(function (v) {
          if (v instanceof Just) {
              return "(Just " + (Data_Show.show(dictShow)(v.value0) + ")");
          };
          if (v instanceof Nothing) {
              return "Nothing";
          };
          throw new Error("Failed pattern match at Data.Maybe (line 205, column 1 - line 205, column 47): " + [ v.constructor.name ]);
      });
  };
  var semigroupMaybe = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              if (v instanceof Nothing) {
                  return v1;
              };
              if (v1 instanceof Nothing) {
                  return v;
              };
              if (v instanceof Just && v1 instanceof Just) {
                  return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Maybe (line 174, column 1 - line 174, column 62): " + [ v.constructor.name, v1.constructor.name ]);
          };
      });
  };
  var monoidMaybe = function (dictSemigroup) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMaybe(dictSemigroup);
      }, Nothing.value);
  };
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };
  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };
  var fromJust = function (dictPartial) {
      return function (v) {
          if (v instanceof Just) {
              return v.value0;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [ v.constructor.name ]);
      };
  }; 
  var eqMaybe = function (dictEq) {
      return new Data_Eq.Eq(function (x) {
          return function (y) {
              if (x instanceof Nothing && y instanceof Nothing) {
                  return true;
              };
              if (x instanceof Just && y instanceof Just) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Control_Apply.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Data_Functor.map(functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 67, column 35): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 125, column 33): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;
  exports["eqMaybe"] = eqMaybe;
  exports["showMaybe"] = showMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictHeytingAlgebra) {
      return new Data_Semigroup.Semigroup(function (v) {
          return function (v1) {
              return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
          };
      });
  };
  var monoidDisj = function (dictHeytingAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictHeytingAlgebra);
      }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };
  exports["Disj"] = Disj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];                      
  var Newtype = function (unwrap, wrap) {
      this.unwrap = unwrap;
      this.wrap = wrap;
  };
  var wrap = function (dict) {
      return dict.wrap;
  };
  var unwrap = function (dict) {
      return dict.unwrap;
  };
  var under = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($71) {
                      return unwrap(dictNewtype1)(f(wrap(dictNewtype)($71)));
                  };
              };
          };
      };
  };
  var over = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (v) {
              return function (f) {
                  return function ($78) {
                      return wrap(dictNewtype1)(f(unwrap(dictNewtype)($78)));
                  };
              };
          };
      };
  };                        
  var newtypeDisj = new Newtype(function (v) {
      return v;
  }, Data_Monoid_Disj.Disj);
  var alaF = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (v) {
                      return function (f) {
                          return function ($80) {
                              return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
                          };
                      };
                  };
              };
          };
      };
  };
  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["over"] = over;
  exports["under"] = under;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);
(function(exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];
  var Semiring = function (add, mul, one, zero) {
      this.add = add;
      this.mul = mul;
      this.one = one;
      this.zero = zero;
  };
  var zero = function (dict) {
      return dict.zero;
  };                                                                            
  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);
  var one = function (dict) {
      return dict.one;
  };
  var mul = function (dict) {
      return dict.mul;
  };
  var add = function (dict) {
      return dict.add;
  };
  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Unit = $PS["Data.Unit"];                
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var traverse_ = function (dictApplicative) {
      return function (dictFoldable) {
          return function (f) {
              return foldr(dictFoldable)(function ($195) {
                  return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
              })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
          };
      };
  };
  var for_ = function (dictApplicative) {
      return function (dictFoldable) {
          return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
      };
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var indexl = function (dictFoldable) {
      return function (idx) {
          var go = function (cursor) {
              return function (a) {
                  if (cursor.elem instanceof Data_Maybe.Just) {
                      return cursor;
                  };
                  var $109 = cursor.pos === idx;
                  if ($109) {
                      return {
                          elem: new Data_Maybe.Just(a),
                          pos: cursor.pos
                      };
                  };
                  return {
                      pos: cursor.pos + 1 | 0,
                      elem: cursor.elem
                  };
              };
          };
          return function ($196) {
              return (function (v) {
                  return v.elem;
              })(foldl(dictFoldable)(go)({
                  elem: Data_Maybe.Nothing.value,
                  pos: 0
              })($196));
          };
      };
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false,
                                  acc: x
                              };
                          };
                          return {
                              init: false,
                              acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true,
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  };
  var length = function (dictFoldable) {
      return function (dictSemiring) {
          return foldl(dictFoldable)(function (c) {
              return function (v) {
                  return Data_Semiring.add(dictSemiring)(Data_Semiring.one(dictSemiring))(c);
              };
          })(Data_Semiring.zero(dictSemiring));
      };
  }; 
  var foldableMaybe = new Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return Data_Monoid.mempty(dictMonoid);
              };
              if (v instanceof Data_Maybe.Just) {
                  return f(v.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(z)(v1.value0);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  }, function (v) {
      return function (z) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return z;
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return v(v1.value0)(z);
              };
              throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [ v.constructor.name, z.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldr(dictFoldable)(function (x) {
                  return function (acc) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMapDefaultL = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return foldl(dictFoldable)(function (acc) {
                  return function (x) {
                      return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(x));
                  };
              })(Data_Monoid.mempty(dictMonoid));
          };
      };
  };
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var any = function (dictFoldable) {
      return function (dictHeytingAlgebra) {
          return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($199) {
              return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultL"] = foldMapDefaultL;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["indexl"] = indexl;
  exports["length"] = length;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});
(function(exports) {
  "use strict";

  var unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };                                         
  exports.ordIntImpl = unsafeCompareImpl;   
  exports.ordStringImpl = unsafeCompareImpl;
  exports.ordCharImpl = unsafeCompareImpl;
})(PS["Data.Ord"] = PS["Data.Ord"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];              
  var LT = (function () {
      function LT() {

      };
      LT.value = new LT();
      return LT;
  })();
  var GT = (function () {
      function GT() {

      };
      GT.value = new GT();
      return GT;
  })();
  var EQ = (function () {
      function EQ() {

      };
      EQ.value = new EQ();
      return EQ;
  })();
  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Ord = function (Eq0, compare) {
      this.Eq0 = Eq0;
      this.compare = compare;
  }; 
  var ordUnit = new Ord(function () {
      return Data_Eq.eqUnit;
  }, function (v) {
      return function (v1) {
          return Data_Ordering.EQ.value;
      };
  });
  var ordString = new Ord(function () {
      return Data_Eq.eqString;
  }, $foreign.ordStringImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordInt = new Ord(function () {
      return Data_Eq.eqInt;
  }, $foreign.ordIntImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var ordChar = new Ord(function () {
      return Data_Eq.eqChar;
  }, $foreign.ordCharImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value));
  var compare = function (dict) {
      return dict.compare;
  };
  var comparing = function (dictOrd) {
      return function (f) {
          return function (x) {
              return function (y) {
                  return compare(dictOrd)(f(x))(f(y));
              };
          };
      };
  };
  var greaterThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThan = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.LT) {
                  return true;
              };
              return false;
          };
      };
  };
  var lessThanOrEq = function (dictOrd) {
      return function (a1) {
          return function (a2) {
              var v = compare(dictOrd)(a1)(a2);
              if (v instanceof Data_Ordering.GT) {
                  return false;
              };
              return true;
          };
      };
  };
  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["lessThan"] = lessThan;
  exports["lessThanOrEq"] = lessThanOrEq;
  exports["greaterThan"] = greaterThan;
  exports["comparing"] = comparing;
  exports["ordInt"] = ordInt;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordUnit"] = ordUnit;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];                
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var snd = function (v) {
      return v.value1;
  };
  var functorTuple = new Data_Functor.Functor(function (f) {
      return function (m) {
          return new Tuple(m.value0, f(m.value1));
      };
  });                                                                                                   
  var fst = function (v) {
      return v.value0;
  }; 
  var eqTuple = function (dictEq) {
      return function (dictEq1) {
          return new Data_Eq.Eq(function (x) {
              return function (y) {
                  return Data_Eq.eq(dictEq)(x.value0)(y.value0) && Data_Eq.eq(dictEq1)(x.value1)(y.value1);
              };
          });
      };
  };
  var ordTuple = function (dictOrd) {
      return function (dictOrd1) {
          return new Data_Ord.Ord(function () {
              return eqTuple(dictOrd.Eq0())(dictOrd1.Eq0());
          }, function (x) {
              return function (y) {
                  var v = Data_Ord.compare(dictOrd)(x.value0)(y.value0);
                  if (v instanceof Data_Ordering.LT) {
                      return Data_Ordering.LT.value;
                  };
                  if (v instanceof Data_Ordering.GT) {
                      return Data_Ordering.GT.value;
                  };
                  return Data_Ord.compare(dictOrd1)(x.value1)(y.value1);
              };
          });
      };
  };
  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["eqTuple"] = eqTuple;
  exports["ordTuple"] = ordTuple;
  exports["functorTuple"] = functorTuple;
})(PS);
(function(exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;
              while (true) { // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Unfoldable1 = function (unfoldr1) {
      this.unfoldr1 = unfoldr1;
  };
  var unfoldr1 = function (dict) {
      return dict.unfoldr1;
  };
  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];  
  var Unfoldable = function (Unfoldable10, unfoldr) {
      this.Unfoldable10 = Unfoldable10;
      this.unfoldr = unfoldr;
  };
  var unfoldr = function (dict) {
      return dict.unfoldr;
  };
  var unfoldableArray = new Unfoldable(function () {
      return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];                
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var NonEmptyList = function (x) {
      return x;
  };
  var listMap = function (f) {
      var chunkedRevMap = function ($copy_chunksAcc) {
          return function ($copy_v) {
              var $tco_var_chunksAcc = $copy_chunksAcc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(chunksAcc, v) {
                  if (v instanceof Cons && (v.value1 instanceof Cons && v.value1.value1 instanceof Cons)) {
                      $tco_var_chunksAcc = new Cons(v, chunksAcc);
                      $copy_v = v.value1.value1.value1;
                      return;
                  };
                  var unrolledMap = function (v1) {
                      if (v1 instanceof Cons && (v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil)) {
                          return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
                      };
                      if (v1 instanceof Cons && v1.value1 instanceof Nil) {
                          return new Cons(f(v1.value0), Nil.value);
                      };
                      return Nil.value;
                  };
                  var reverseUnrolledMap = function ($copy_v1) {
                      return function ($copy_acc) {
                          var $tco_var_v1 = $copy_v1;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v1, acc) {
                              if (v1 instanceof Cons && (v1.value0 instanceof Cons && (v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons))) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                                  return;
                              };
                              $tco_done = true;
                              return acc;
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v1, $copy_acc);
                          };
                          return $tco_result;
                      };
                  };
                  $tco_done = true;
                  return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
              };
              return $tco_result;
          };
      };
      return chunkedRevMap(Nil.value);
  };
  var functorList = new Data_Functor.Functor(listMap);                 
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($202) {
                  return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($202));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, function (f) {
      var go = function ($copy_b) {
          return function ($copy_v) {
              var $tco_var_b = $copy_b;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(b, v) {
                  if (v instanceof Nil) {
                      $tco_done = true;
                      return b;
                  };
                  if (v instanceof Cons) {
                      $tco_var_b = f(b)(v.value0);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_b, $copy_v);
              };
              return $tco_result;
          };
      };
      return go;
  }, function (f) {
      return function (b) {
          var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
          return function ($203) {
              return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($203));
          };
      };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
      return function (ys) {
          return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
      };
  });
  var unfoldable1List = new Data_Unfoldable1.Unfoldable1(function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v.value1 instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value1.value0;
                          $copy_memo = new Cons(v.value0, memo);
                          return;
                      };
                      if (v.value1 instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(new Cons(v.value0, memo));
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 133, column 22 - line 135, column 61): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var unfoldableList = new Data_Unfoldable.Unfoldable(function () {
      return unfoldable1List;
  }, function (f) {
      return function (b) {
          var go = function ($copy_source) {
              return function ($copy_memo) {
                  var $tco_var_source = $copy_source;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(source, memo) {
                      var v = f(source);
                      if (v instanceof Data_Maybe.Nothing) {
                          $tco_done = true;
                          return Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value)(memo);
                      };
                      if (v instanceof Data_Maybe.Just) {
                          $tco_var_source = v.value0.value1;
                          $copy_memo = new Cons(v.value0.value0, memo);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.List.Types (line 140, column 22 - line 142, column 52): " + [ v.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_source, $copy_memo);
                  };
                  return $tco_result;
              };
          };
          return go(b)(Nil.value);
      };
  });
  var applyList = new Control_Apply.Apply(function () {
      return functorList;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nil) {
              return Nil.value;
          };
          if (v instanceof Cons) {
              return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 155, column 33): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
      return applyList;
  }, function (a) {
      return new Cons(a, Nil.value);
  });                                              
  var altList = new Control_Alt.Alt(function () {
      return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
      return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["unfoldable1List"] = unfoldable1List;
  exports["unfoldableList"] = unfoldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Plus = $PS["Control.Plus"];                        
  var NonEmpty = (function () {
      function NonEmpty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NonEmpty.create = function (value0) {
          return function (value1) {
              return new NonEmpty(value0, value1);
          };
      };
      return NonEmpty;
  })();
  var singleton = function (dictPlus) {
      return function (a) {
          return new NonEmpty(a, Control_Plus.empty(dictPlus));
      };
  };
  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var singleton = function ($165) {
      return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
  };
  var cons = function (y) {
      return function (v) {
          return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
      };
  };
  exports["singleton"] = singleton;
  exports["cons"] = cons;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {};
  var exports = $PS["Control.Applicative.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Pure = (function () {
      function Pure(value0) {
          this.value0 = value0;
      };
      Pure.create = function (value0) {
          return new Pure(value0);
      };
      return Pure;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var Ap = (function () {
      function Ap(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Ap.create = function (value0) {
          return function (value1) {
              return new Ap(value0, value1);
          };
      };
      return Ap;
  })();
  var mkAp = function (fba) {
      return function (fb) {
          return new Ap(fba, fb);
      };
  };
  var liftFreeAp = Lift.create;
  var goLeft = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_valStack) {
              return function ($copy_nat) {
                  return function ($copy_func) {
                      return function ($copy_count) {
                          var $tco_var_dictApplicative = $copy_dictApplicative;
                          var $tco_var_fStack = $copy_fStack;
                          var $tco_var_valStack = $copy_valStack;
                          var $tco_var_nat = $copy_nat;
                          var $tco_var_func = $copy_func;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                              if (func instanceof Pure) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: Control_Applicative.pure(dictApplicative)(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Lift) {
                                  $tco_done = true;
                                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                      func: nat(func.value0),
                                      count: count
                                  }, fStack), valStack);
                              };
                              if (func instanceof Ap) {
                                  $tco_var_dictApplicative = dictApplicative;
                                  $tco_var_fStack = fStack;
                                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                                  $tco_var_nat = nat;
                                  $tco_var_func = func.value0;
                                  $copy_count = count + 1 | 0;
                                  return;
                              };
                              throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [ func.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
                          };
                          return $tco_result;
                      };
                  };
              };
          };
      };
  };
  var goApply = function ($copy_dictApplicative) {
      return function ($copy_fStack) {
          return function ($copy_vals) {
              return function ($copy_gVal) {
                  var $tco_var_dictApplicative = $copy_dictApplicative;
                  var $tco_var_fStack = $copy_fStack;
                  var $tco_var_vals = $copy_vals;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(dictApplicative, fStack, vals, gVal) {
                      if (fStack instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return new Data_Either.Left(gVal);
                      };
                      if (fStack instanceof Data_List_Types.Cons) {
                          var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
                          var $14 = fStack.value0.count === 1;
                          if ($14) {
                              if (fStack.value1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return new Data_Either.Left(gRes);
                              };
                              $tco_var_dictApplicative = dictApplicative;
                              $tco_var_fStack = fStack.value1;
                              $tco_var_vals = vals;
                              $copy_gVal = gRes;
                              return;
                          };
                          if (vals instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Data_Either.Left(gRes);
                          };
                          if (vals instanceof Data_List_Types.Cons) {
                              $tco_done = true;
                              return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                                  func: gRes,
                                  count: fStack.value0.count - 1 | 0
                              }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [ vals.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [ fStack.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
                  };
                  return $tco_result;
              };
          };
      };
  };
  var functorFreeAp = new Data_Functor.Functor(function (f) {
      return function (x) {
          return mkAp(new Pure(f))(x);
      };
  });
  var foldFreeAp = function (dictApplicative) {
      return function (nat) {
          return function (z) {
              var go = function ($copy_v) {
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(v) {
                      if (v.value1.value0 instanceof Pure) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Lift) {
                          var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));
                          if (v1 instanceof Data_Either.Left) {
                              $tco_done = true;
                              return v1.value0;
                          };
                          if (v1 instanceof Data_Either.Right) {
                              $copy_v = v1.value0;
                              return;
                          };
                          throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [ v1.constructor.name ]);
                      };
                      if (v.value1.value0 instanceof Ap) {
                          var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
                          $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
                          return;
                      };
                      throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 64, column 1): " + [ v.value1.value0.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($copy_v);
                  };
                  return $tco_result;
              };
              return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
          };
      };
  };
  var retractFreeAp = function (dictApplicative) {
      return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };
  var applyFreeAp = new Control_Apply.Apply(function () {
      return functorFreeAp;
  }, function (fba) {
      return function (fb) {
          return mkAp(fba)(fb);
      };
  });
  var applicativeFreeAp = new Control_Applicative.Applicative(function () {
      return applyFreeAp;
  }, Pure.create);
  var hoistFreeAp = function (f) {
      return foldFreeAp(applicativeFreeAp)(function ($37) {
          return liftFreeAp(f($37));
      });
  };
  exports["liftFreeAp"] = liftFreeAp;
  exports["retractFreeAp"] = retractFreeAp;
  exports["foldFreeAp"] = foldFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
  exports["functorFreeAp"] = functorFreeAp;
  exports["applyFreeAp"] = applyFreeAp;
  exports["applicativeFreeAp"] = applicativeFreeAp;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];                
  var Monad = function (Applicative0, Bind1) {
      this.Applicative0 = Applicative0;
      this.Bind1 = Bind1;
  };
  var unlessM = function (dictMonad) {
      return function (mb) {
          return function (m) {
              return Control_Bind.bind(dictMonad.Bind1())(mb)(function (v) {
                  return Control_Applicative.unless(dictMonad.Applicative0())(v)(m);
              });
          };
      };
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
                  return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
                      return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
                  });
              });
          };
      };
  };
  exports["Monad"] = Monad;
  exports["ap"] = ap;
  exports["unlessM"] = unlessM;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                        
  var MonadThrow = function (Monad0, throwError) {
      this.Monad0 = Monad0;
      this.throwError = throwError;
  };
  var MonadError = function (MonadThrow0, catchError) {
      this.MonadThrow0 = MonadThrow0;
      this.catchError = catchError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                                                      
  var catchError = function (dict) {
      return dict.catchError;
  };
  var $$try = function (dictMonadError) {
      return function (a) {
          return catchError(dictMonadError)(Data_Functor.map(((((dictMonadError.MonadThrow0()).Monad0()).Bind1()).Apply0()).Functor0())(Data_Either.Right.create)(a))(function ($21) {
              return Control_Applicative.pure(((dictMonadError.MonadThrow0()).Monad0()).Applicative0())(Data_Either.Left.create($21));
          });
      };
  };
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];                
  var ExceptT = function (x) {
      return x;
  };
  var runExceptT = function (v) {
      return v;
  }; 
  var mapExceptT = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var functorExceptT = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
      });
  };
  var monadExceptT = function (dictMonad) {
      return new Control_Monad.Monad(function () {
          return applicativeExceptT(dictMonad);
      }, function () {
          return bindExceptT(dictMonad);
      });
  };
  var bindExceptT = function (dictMonad) {
      return new Control_Bind.Bind(function () {
          return applyExceptT(dictMonad);
      }, function (v) {
          return function (k) {
              return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
              })(function (a) {
                  var v1 = k(a);
                  return v1;
              }));
          };
      });
  };
  var applyExceptT = function (dictMonad) {
      return new Control_Apply.Apply(function () {
          return functorExceptT(((dictMonad.Bind1()).Apply0()).Functor0());
      }, Control_Monad.ap(monadExceptT(dictMonad)));
  };
  var applicativeExceptT = function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
          return applyExceptT(dictMonad);
      }, function ($98) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
      });
  };
  var monadThrowExceptT = function (dictMonad) {
      return new Control_Monad_Error_Class.MonadThrow(function () {
          return monadExceptT(dictMonad);
      }, function ($102) {
          return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
      });
  };
  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);
(function(exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];                    
  var monadEffect = new Control_Monad.Monad(function () {
      return applicativeEffect;
  }, function () {
      return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
      return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
      return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
      return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];                
  var modify = function (f) {
      return $foreign["modify'"](function (s) {
          var s$prime = f(s);
          return {
              state: s$prime,
              value: s$prime
          };
      });
  };
  var modify_ = function (f) {
      return function (s) {
          return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
      };
  };
  exports["modify"] = modify;
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["modify'"] = $foreign["modify'"];
  exports["write"] = $foreign.write;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];                
  var Loop = (function () {
      function Loop(value0) {
          this.value0 = value0;
      };
      Loop.create = function (value0) {
          return new Loop(value0);
      };
      return Loop;
  })();
  var Done = (function () {
      function Done(value0) {
          this.value0 = value0;
      };
      Done.create = function (value0) {
          return new Done(value0);
      };
      return Done;
  })();
  var MonadRec = function (Monad0, tailRecM) {
      this.Monad0 = Monad0;
      this.tailRecM = tailRecM;
  };
  var tailRecM = function (dict) {
      return dict.tailRecM;
  }; 
  var monadRecEffect = new MonadRec(function () {
      return Effect.monadEffect;
  }, function (f) {
      return function (a) {
          var fromDone = function (v) {
              if (v instanceof Done) {
                  return v.value0;
              };
              throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 111, column 30 - line 111, column 44): " + [ v.constructor.name ]);
          };
          return function __do() {
              var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();
              (function () {
                  while (!(function __do() {
                      var v1 = Effect_Ref.read(v)();
                      if (v1 instanceof Loop) {
                          var v2 = f(v1.value0)();
                          var v3 = Effect_Ref.write(v2)(v)();
                          return false;
                      };
                      if (v1 instanceof Done) {
                          return true;
                      };
                      throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 102, column 22 - line 107, column 28): " + [ v1.constructor.name ]);
                  })()) {

                  };
                  return {};
              })();
              return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(v))();
          };
      };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEffect"] = monadRecEffect;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);
(function(exports) {
  "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Free.Trans"] = $PS["Control.Monad.Free.Trans"] || {};
  var exports = $PS["Control.Monad.Free.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];                      
  var Bound = (function () {
      function Bound(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bound.create = function (value0) {
          return function (value1) {
              return new Bound(value0, value1);
          };
      };
      return Bound;
  })();
  var FreeT = (function () {
      function FreeT(value0) {
          this.value0 = value0;
      };
      FreeT.create = function (value0) {
          return new FreeT(value0);
      };
      return FreeT;
  })();
  var Bind = (function () {
      function Bind(value0) {
          this.value0 = value0;
      };
      Bind.create = function (value0) {
          return new Bind(value0);
      };
      return Bind;
  })();
  var monadTransFreeT = function (dictFunctor) {
      return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
          return function (ma) {
              return new FreeT(function (v) {
                  return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Either.Left.create)(ma);
              });
          };
      });
  };
  var freeT = FreeT.create;
  var bound = function (m) {
      return function (f) {
          return new Bind(Data_Exists.mkExists(new Bound(m, f)));
      };
  };
  var functorFreeT = function (dictFunctor) {
      return function (dictFunctor1) {
          return new Data_Functor.Functor(function (f) {
              return function (v) {
                  if (v instanceof FreeT) {
                      return new FreeT(function (v1) {
                          return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
                      });
                  };
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function ($104) {
                              return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
                          });
                      })(v.value0);
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 57, column 1 - line 57, column 71): " + [ f.constructor.name, v.constructor.name ]);
              };
          });
      };
  };
  var monadFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad.Monad(function () {
              return applicativeFreeT(dictFunctor)(dictMonad);
          }, function () {
              return bindFreeT(dictFunctor)(dictMonad);
          });
      };
  };
  var bindFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Bind.Bind(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (v) {
              return function (f) {
                  if (v instanceof Bind) {
                      return Data_Exists.runExists(function (v1) {
                          return bound(v1.value0)(function (x) {
                              return bound(function (v2) {
                                  return v1.value1(x);
                              })(f);
                          });
                      })(v.value0);
                  };
                  return bound(function (v1) {
                      return v;
                  })(f);
              };
          });
      };
  };
  var applyFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Apply.Apply(function () {
              return functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0());
          }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
      };
  };
  var applicativeFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Applicative.Applicative(function () {
              return applyFreeT(dictFunctor)(dictMonad);
          }, function (a) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
              });
          });
      };
  };
  var liftFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return function (fa) {
              return new FreeT(function (v) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
              });
          };
      };
  };
  var resume = function (dictFunctor) {
      return function (dictMonadRec) {
          var go = function (v) {
              if (v instanceof FreeT) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
              };
              if (v instanceof Bind) {
                  return Data_Exists.runExists(function (v1) {
                      var v2 = v1.value0(Data_Unit.unit);
                      if (v2 instanceof FreeT) {
                          return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                              if (v3 instanceof Data_Either.Left) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                              };
                              if (v3 instanceof Data_Either.Right) {
                                  return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                                      return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                                  })(v3.value0))));
                              };
                              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 20 - line 54, column 67): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v2 instanceof Bind) {
                          return Data_Exists.runExists(function (v3) {
                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                              })));
                          })(v2.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 50, column 5 - line 55, column 98): " + [ v2.constructor.name ]);
                  })(v.value0);
              };
              throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 47, column 3 - line 47, column 75): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  var runFreeT = function (dictFunctor) {
      return function (dictMonadRec) {
          return function (interp) {
              var go = function (v) {
                  if (v instanceof Data_Either.Left) {
                      return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
                  };
                  if (v instanceof Data_Either.Right) {
                      return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 126, column 3 - line 126, column 63): " + [ v.constructor.name ]);
              };
              return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped((dictMonadRec.Monad0()).Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
          };
      };
  };
  var monadRecFreeT = function (dictFunctor) {
      return function (dictMonad) {
          return new Control_Monad_Rec_Class.MonadRec(function () {
              return monadFreeT(dictFunctor)(dictMonad);
          }, function (f) {
              var go = function (s) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
                      if (v instanceof Control_Monad_Rec_Class.Loop) {
                          return go(v.value0);
                      };
                      if (v instanceof Control_Monad_Rec_Class.Done) {
                          return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
                      };
                      throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 80, column 15 - line 82, column 25): " + [ v.constructor.name ]);
                  });
              };
              return go;
          });
      };
  };
  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];
  var Parallel = function (Applicative1, Monad0, parallel, sequential) {
      this.Applicative1 = Applicative1;
      this.Monad0 = Monad0;
      this.parallel = parallel;
      this.sequential = sequential;
  };
  var sequential = function (dict) {
      return dict.sequential;
  };
  var parallel = function (dict) {
      return dict.parallel;
  };
  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];          
  var Identity = function (x) {
      return x;
  };
  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
      return function (m) {
          return f(m);
      };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
      return functorIdentity;
  }, function (v) {
      return function (v1) {
          return v(v1);
      };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
      return applyIdentity;
  }, function (v) {
      return function (f) {
          return f(v);
      };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
      return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
      return applicativeIdentity;
  }, function () {
      return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];
  var Control_Category = $PS["Control.Category"];        
  var Profunctor = function (dimap) {
      this.dimap = dimap;
  };
  var profunctorFn = new Profunctor(function (a2b) {
      return function (c2d) {
          return function (b2c) {
              return function ($9) {
                  return c2d(b2c(a2b($9)));
              };
          };
      };
  });
  var dimap = function (dict) {
      return dict.dimap;
  };
  var rmap = function (dictProfunctor) {
      return function (b2c) {
          return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
      };
  };
  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Coroutine"] = $PS["Control.Coroutine"] || {};
  var exports = $PS["Control.Coroutine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Emit = (function () {
      function Emit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Emit.create = function (value0) {
          return function (value1) {
              return new Emit(value0, value1);
          };
      };
      return Emit;
  })();
  var runProcess = function (dictMonadRec) {
      return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
          return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
      });
  };
  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
      return function (g) {
          return function (v) {
              return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
          };
      };
  });
  var loop = function (dictFunctor) {
      return function (dictMonad) {
          return function (me) {
              return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
                  return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(((dictMonad.Bind1()).Apply0()).Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
              })(Data_Unit.unit);
          };
      };
  };
  var fuseWithL = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (zap) {
                      return function (fs) {
                          return function (gs) {
                              var go = function (v) {
                                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                                      return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                                          return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                                              return Control_Monad_Free_Trans.freeT(function (v3) {
                                                  return go(t);
                                              });
                                          })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                                      });
                                  }));
                              };
                              return Control_Monad_Free_Trans.freeT(function (v) {
                                  return go(new Data_Tuple.Tuple(fs, gs));
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var fuseWith = function (dictFunctor) {
      return function (dictFunctor1) {
          return function (dictFunctor2) {
              return function (dictMonadRec) {
                  return function (dictParallel) {
                      return function (zap) {
                          return function (fs) {
                              return function (gs) {
                                  var go = function (v) {
                                      return Control_Bind.bind((dictMonadRec.Monad0()).Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply((dictParallel.Applicative1()).Apply0())(Data_Functor.map(((dictParallel.Applicative1()).Apply0()).Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                                          if (v1 instanceof Data_Either.Left) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Left(v1.value0));
                                          };
                                          if (v1 instanceof Data_Either.Right) {
                                              return Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                                                  return Control_Monad_Free_Trans.freeT(function (v2) {
                                                      return go(t);
                                                  });
                                              })(v1.value0)));
                                          };
                                          throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [ v1.constructor.name ]);
                                      });
                                  };
                                  return Control_Monad_Free_Trans.freeT(function (v) {
                                      return go(new Data_Tuple.Tuple(fs, gs));
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return function (v) {
              return new Emit(f(v.value0), g(v.value1));
          };
      };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));
  var connect = function (dictMonadRec) {
      return function (dictParallel) {
          return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
              return function (v) {
                  return function (v1) {
                      return f(v.value1)(v1(v.value0));
                  };
              };
          });
      };
  };
  var emit = function (dictMonad) {
      return function (o) {
          return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
      };
  };
  var producer = function (dictMonad) {
      return function (recv) {
          return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
              if (v instanceof Data_Either.Left) {
                  return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(((dictMonad.Bind1()).Apply0()).Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
              };
              if (v instanceof Data_Either.Right) {
                  return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
              };
              throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [ v.constructor.name ]);
          }));
      };
  };
  var pullFrom = function (dictMonadRec) {
      return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
          return function (v) {
              return function (v1) {
                  return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
              };
          };
      });
  };
  var $$await = function (dictMonad) {
      return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };
  exports["loop"] = loop;
  exports["runProcess"] = runProcess;
  exports["fuseWith"] = fuseWith;
  exports["fuseWithL"] = fuseWithL;
  exports["Emit"] = Emit;
  exports["emit"] = emit;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["bifunctorEmit"] = bifunctorEmit;
  exports["functorEmit"] = functorEmit;
  exports["profunctorAwait"] = profunctorAwait;
  exports["functorAwait"] = functorAwait;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];                                                
  var runExcept = function ($0) {
      return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };
  exports["runExcept"] = runExcept;
})(PS);
(function(exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */
  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};

    /*

  An awkward approximation. We elide evidence we would otherwise need in PS for
  efficiency sake.

  data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)

  */  
    var PURE    = "Pure";
    var THROW   = "Throw";
    var CATCH   = "Catch";
    var SYNC    = "Sync";
    var ASYNC   = "Async";
    var BIND    = "Bind";
    var BRACKET = "Bracket";
    var FORK    = "Fork";
    var SEQ     = "Sequential";

    /*

  data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)

  */  
    var MAP   = "Map";
    var APPLY = "Apply";
    var ALT   = "Alt";

    // Various constructors used in interpretation
    var CONS      = "Cons";      // Cons-list, for stacks
    var RESUME    = "Resume";    // Continue indiscriminately
    var RELEASE   = "Release";   // Continue with bracket finalizers
    var FINALIZER = "Finalizer"; // A non-interruptible effect
    var FINALIZED = "Finalized"; // Marker for finalization
    var FORKED    = "Forked";    // Reference to a forked fiber, with resumption stack
    var FIBER     = "Fiber";     // Actual fiber reference
    var THUNK     = "Thunk";     // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1  = _1;
      this._2  = _2;
      this._3  = _3;
    }

    function AffCtr(tag) {
      var fn = function (_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };
      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit    = 1024;
      var size     = 0;
      var ix       = 0;
      var queue    = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;
        while (size !== 0) {
          size--;
          thunk     = queue[ix];
          queue[ix] = void 0;
          ix        = (ix + 1) % limit;
          thunk();
        }
        draining = false;
      }

      return {
        isDraining: function () {
          return draining;
        },
        enqueue: function (cb) {
          var i, tmp;
          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers  = {};
      var fiberId = 0;
      var count   = 0;

      return {
        register: function (fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function (result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function () {
          return count === 0;
        },
        killAll: function (killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills     = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;
                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }
                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers  = {};
            fiberId = 0;
            count   = 0;

            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    }

    // Fiber state machine
    var SUSPENDED   = 0; // Suspended, pending a join.
    var CONTINUE    = 1; // Interpret the next instruction.
    var STEP_BIND   = 2; // Apply the next bind.
    var STEP_RESULT = 3; // Handle potential failure from a result.
    var PENDING     = 4; // An async effect is running.
    var RETURN      = 5; // The current stack has returned.
    var COMPLETED   = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0;

      // The current branch of the state machine.
      var status = SUSPENDED;

      // The current point of interest for the state machine branch.
      var step      = aff;  // Successful step
      var fail      = null; // Failure step
      var interrupt = null; // Asynchronous interrupt

      // Stack of continuations for the current fiber.
      var bhead = null;
      var btail = null;

      // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.
      var attempts = null;

      // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.
      var bracketCount = 0;

      // Each join gets a new id so they can be revoked.
      var joinId  = 0;
      var joins   = null;
      var rethrow = true;

      // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.
      function run(localRunTick) {
        var tmp, result, attempt;
        while (true) {
          tmp       = null;
          result    = null;
          attempt   = null;

          switch (status) {
          case STEP_BIND:
            status = CONTINUE;
            step   = bhead(step);
            if (btail === null) {
              bhead = null;
            } else {
              bhead = btail._1;
              btail = btail._2;
            }
            break;

          case STEP_RESULT:
            if (util.isLeft(step)) {
              status = RETURN;
              fail   = step;
              step   = null;
            } else if (bhead === null) {
              status = RETURN;
            } else {
              status = STEP_BIND;
              step   = util.fromRight(step);
            }
            break;

          case CONTINUE:
            switch (step.tag) {
            case BIND:
              if (bhead) {
                btail = new Aff(CONS, bhead, btail);
              }
              bhead  = step._2;
              status = CONTINUE;
              step   = step._1;
              break;

            case PURE:
              if (bhead === null) {
                status = RETURN;
                step   = util.right(step._1);
              } else {
                status = STEP_BIND;
                step   = step._1;
              }
              break;

            case SYNC:
              status = STEP_RESULT;
              step   = runSync(util.left, util.right, step._1);
              break;

            case ASYNC:
              status = PENDING;
              step   = runAsync(util.left, step._1, function (result) {
                return function () {
                  if (runTick !== localRunTick) {
                    return;
                  }
                  runTick++;
                  Scheduler.enqueue(function () {
                    // It's possible to interrupt the fiber between enqueuing and
                    // resuming, so we need to check that the runTick is still
                    // valid.
                    if (runTick !== localRunTick + 1) {
                      return;
                    }
                    status = STEP_RESULT;
                    step   = result;
                    run(runTick);
                  });
                };
              });
              return;

            case THROW:
              status = RETURN;
              fail   = util.left(step._1);
              step   = null;
              break;

            // Enqueue the Catch so that we can call the error handler later on
            // in case of an exception.
            case CATCH:
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead    = null;
              btail    = null;
              status   = CONTINUE;
              step     = step._1;
              break;

            // Enqueue the Bracket so that we can call the appropriate handlers
            // after resource acquisition.
            case BRACKET:
              bracketCount++;
              if (bhead === null) {
                attempts = new Aff(CONS, step, attempts, interrupt);
              } else {
                attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
              }
              bhead  = null;
              btail  = null;
              status = CONTINUE;
              step   = step._1;
              break;

            case FORK:
              status = STEP_RESULT;
              tmp    = Fiber(util, supervisor, step._2);
              if (supervisor) {
                supervisor.register(tmp);
              }
              if (step._1) {
                tmp.run();
              }
              step = util.right(tmp);
              break;

            case SEQ:
              status = CONTINUE;
              step   = sequential(util, supervisor, step._1);
              break;
            }
            break;

          case RETURN:
            bhead = null;
            btail = null;
            // If the current stack has returned, and we have no other stacks to
            // resume or finalizers to run, the fiber has halted and we can
            // invoke all join callbacks. Otherwise we need to resume.
            if (attempts === null) {
              status = COMPLETED;
              step   = interrupt || fail || step;
            } else {
              // The interrupt status for the enqueued item.
              tmp      = attempts._3;
              attempt  = attempts._1;
              attempts = attempts._2;

              switch (attempt.tag) {
              // We cannot recover from an unmasked interrupt. Otherwise we should
              // continue stepping, or run the exception handler if an exception
              // was raised.
              case CATCH:
                // We should compare the interrupt status as well because we
                // only want it to apply if there has been an interrupt since
                // enqueuing the catch.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  status = RETURN;
                } else if (fail) {
                  status = CONTINUE;
                  step   = attempt._2(util.fromLeft(fail));
                  fail   = null;
                }
                break;

              // We cannot resume from an unmasked interrupt or exception.
              case RESUME:
                // As with Catch, we only want to ignore in the case of an
                // interrupt since enqueing the item.
                if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                  status = RETURN;
                } else {
                  bhead  = attempt._1;
                  btail  = attempt._2;
                  status = STEP_BIND;
                  step   = util.fromRight(step);
                }
                break;

              // If we have a bracket, we should enqueue the handlers,
              // and continue with the success branch only if the fiber has
              // not been interrupted. If the bracket acquisition failed, we
              // should not run either.
              case BRACKET:
                bracketCount--;
                if (fail === null) {
                  result   = util.fromRight(step);
                  // We need to enqueue the Release with the same interrupt
                  // status as the Bracket that is initiating it.
                  attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp);
                  // We should only coninue as long as the interrupt status has not changed or
                  // we are currently within a non-interruptable finalizer.
                  if (interrupt === tmp || bracketCount > 0) {
                    status = CONTINUE;
                    step   = attempt._3(result);
                  }
                }
                break;

              // Enqueue the appropriate handler. We increase the bracket count
              // because it should not be cancelled.
              case RELEASE:
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                // It has only been killed if the interrupt status has changed
                // since we enqueued the item, and the bracket count is 0. If the
                // bracket count is non-zero then we are in a masked state so it's
                // impossible to be killed.
                if (interrupt && interrupt !== tmp && bracketCount === 0) {
                  step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                } else if (fail) {
                  step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                } else {
                  step = attempt._1.completed(util.fromRight(step))(attempt._2);
                }
                fail = null;
                bracketCount++;
                break;

              case FINALIZER:
                bracketCount++;
                attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                status   = CONTINUE;
                step     = attempt._1;
                break;

              case FINALIZED:
                bracketCount--;
                status = RETURN;
                step   = attempt._1;
                fail   = attempt._2;
                break;
              }
            }
            break;

          case COMPLETED:
            for (var k in joins) {
              if (joins.hasOwnProperty(k)) {
                rethrow = rethrow && joins[k].rethrow;
                runEff(joins[k].handler(step));
              }
            }
            joins = null;
            // If we have an interrupt and a fail, then the thread threw while
            // running finalizers. This should always rethrow in a fresh stack.
            if (interrupt && fail) {
              setTimeout(function () {
                throw util.fromLeft(fail);
              }, 0);
            // If we have an unhandled exception, and no other fiber has joined
            // then we need to throw the exception in a fresh stack.
            } else if (util.isLeft(step) && rethrow) {
              setTimeout(function () {
                // Guard on reathrow because a completely synchronous fiber can
                // still have an observer which was added after-the-fact.
                if (rethrow) {
                  throw util.fromLeft(step);
                }
              }, 0);
            }
            return;
          case SUSPENDED:
            status = CONTINUE;
            break;
          case PENDING: return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid    = joinId++;
          joins      = joins || {};
          joins[jid] = join;

          return function() {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function (/* unused */) {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
          case SUSPENDED:
            interrupt = util.left(error);
            status    = COMPLETED;
            step      = interrupt;
            run(runTick);
            break;
          case PENDING:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              if (status === PENDING) {
                attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
              }
              status   = RETURN;
              step     = null;
              fail     = null;
              run(++runTick);
            }
            break;
          default:
            if (interrupt === null) {
              interrupt = util.left(error);
            }
            if (bracketCount === 0) {
              status = RETURN;
              step   = null;
              fail   = null;
            }
          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();
          if (status === SUSPENDED) {
            run(runTick);
          }
          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function () {
          return status === SUSPENDED;
        },
        run: function () {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                run(runTick);
              });
            } else {
              run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId   = 0;
      var fibers    = {};

      // Table of currently running cancelers, as a product of `Alt` behavior.
      var killId    = 0;
      var kills     = {};

      // Error used for early cancelation on Alt branches.
      var early     = new Error("[ParAff] Early exit");

      // Error used to kill the entire tree.
      var interrupt = null;

      // The root pointer of the tree.
      var root      = EMPTY;

      // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.
      function kill(error, par, cb) {
        var step  = par;
        var head  = null;
        var tail  = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
          case FORKED:
            if (step._3 === EMPTY) {
              tmp = fibers[step._1];
              kills[count++] = tmp.kill(error, function (result) {
                return function () {
                  count--;
                  if (count === 0) {
                    cb(result)();
                  }
                };
              });
            }
            // Terminal case.
            if (head === null) {
              break loop;
            }
            // Go down the right side of the tree.
            step = head._2;
            if (tail === null) {
              head = null;
            } else {
              head = tail._1;
              tail = tail._2;
            }
            break;
          case MAP:
            step = step._2;
            break;
          case APPLY:
          case ALT:
            if (head) {
              tail = new Aff(CONS, head, tail);
            }
            head = step;
            step = step._1;
            break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;
          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      }

      // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.
      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null;

          // We should never continue if the entire tree has been interrupted.
          if (interrupt !== null) {
            return;
          }

          // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.
          if (head === null) {
            cb(fail || step)();
            return;
          }

          // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?
          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
          case MAP:
            if (fail === null) {
              head._3 = util.right(head._1(util.fromRight(step)));
              step    = head._3;
            } else {
              head._3 = fail;
            }
            break;
          case APPLY:
            lhs = head._1._3;
            rhs = head._2._3;
            // If we have a failure we should kill the other side because we
            // can't possible yield a result anymore.
            if (fail) {
              head._3 = fail;
              tmp     = true;
              kid     = killId++;

              kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(fail, null, null);
                  } else {
                    join(fail, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            } else if (lhs === EMPTY || rhs === EMPTY) {
              // We can only proceed if both sides have resolved.
              return;
            } else {
              step    = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
              head._3 = step;
            }
            break;
          case ALT:
            lhs = head._1._3;
            rhs = head._2._3;
            // We can only proceed if both have resolved or we have a success
            if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
              return;
            }
            // If both sides resolve with an error, we should continue with the
            // first error
            if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
              fail    = step === lhs ? rhs : lhs;
              step    = null;
              head._3 = fail;
            } else {
              head._3 = step;
              tmp     = true;
              kid     = killId++;
              // Once a side has resolved, we need to cancel the side that is still
              // pending before we can continue.
              kills[kid] = kill(early, step === lhs ? head._2 : head._1, function (/* unused */) {
                return function () {
                  delete kills[kid];
                  if (tmp) {
                    tmp = false;
                  } else if (tail === null) {
                    join(step, null, null);
                  } else {
                    join(step, tail._1, tail._2);
                  }
                };
              });

              if (tmp) {
                tmp = false;
                return;
              }
            }
            break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      }

      // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.
      function run() {
        var status = CONTINUE;
        var step   = par;
        var head   = null;
        var tail   = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
          case CONTINUE:
            switch (step.tag) {
            case MAP:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(MAP, step._1, EMPTY, EMPTY);
              step = step._2;
              break;
            case APPLY:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(APPLY, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }
              head = new Aff(ALT, EMPTY, step._2, EMPTY);
              step = step._1;
              break;
            default:
              // When we hit a leaf value, we suspend the stack in the `FORKED`.
              // When the fiber resolves, it can bubble back up the tree.
              fid    = fiberId++;
              status = RETURN;
              tmp    = step;
              step   = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
              tmp    = Fiber(util, supervisor, tmp);
              tmp.onComplete({
                rethrow: false,
                handler: resolve(step)
              })();
              fibers[fid] = tmp;
              if (supervisor) {
                supervisor.register(tmp);
              }
            }
            break;
          case RETURN:
            // Terminal case, we are back at the root.
            if (head === null) {
              break loop;
            }
            // If we are done with the right side, we need to continue down the
            // left. Otherwise we should continue up the stack.
            if (head._1 === EMPTY) {
              head._1 = step;
              status  = CONTINUE;
              step    = head._2;
              head._2 = EMPTY;
            } else {
              head._2 = step;
              step    = head;
              if (tail === null) {
                head  = null;
              } else {
                head  = tail._1;
                tail  = tail._2;
              }
            }
          }
        }

        // Keep a reference to the tree root so it can be cancelled.
        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      }

      // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.
      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;
        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];
            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);

        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }
              return nonCanceler;
            };
          });
        };
      }

      run();

      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY       = EMPTY;
    Aff.Pure        = AffCtr(PURE);
    Aff.Throw       = AffCtr(THROW);
    Aff.Catch       = AffCtr(CATCH);
    Aff.Sync        = AffCtr(SYNC);
    Aff.Async       = AffCtr(ASYNC);
    Aff.Bind        = AffCtr(BIND);
    Aff.Bracket     = AffCtr(BRACKET);
    Aff.Fork        = AffCtr(FORK);
    Aff.Seq         = AffCtr(SEQ);
    Aff.ParMap      = AffCtr(MAP);
    Aff.ParApply    = AffCtr(APPLY);
    Aff.ParAlt      = AffCtr(ALT);
    Aff.Fiber       = Fiber;
    Aff.Supervisor  = Supervisor;
    Aff.Scheduler   = Scheduler;
    Aff.nonCanceler = nonCanceler;

    return Aff;
  }();

  exports._pure = Aff.Pure;

  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports.generalBracket = function (acquire) {
    return function (options) {
      return function (k) {
        return Aff.Bracket(acquire, options, k);
      };
    };
  };

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];         
  var MonadEffect = function (Monad0, liftEffect) {
      this.Monad0 = Monad0;
      this.liftEffect = liftEffect;
  };                                                         
  var liftEffect = function (dict) {
      return dict.liftEffect;
  };
  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);
(function(exports) {
  "use strict";

  // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});
(function(exports) {
  "use strict";

  // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];
  var unsafeCrashWith = function (msg) {
      return $foreign.unsafePartial(function (dictPartial) {
          return Partial.crashWith(dictPartial)(msg);
      });
  };
  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Canceler = function (x) {
      return x;
  };
  var suspendAff = $foreign["_fork"](false);
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var forkAff = $foreign["_fork"](true);
  var ffiUtil = (function () {
      var unsafeFromRight = function (v) {
          if (v instanceof Data_Either.Right) {
              return v.value0;
          };
          if (v instanceof Data_Either.Left) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 31): " + [ v.constructor.name ]);
      };
      var unsafeFromLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return v.value0;
          };
          if (v instanceof Data_Either.Right) {
              return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
          };
          throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 399, column 3): " + [ v.constructor.name ]);
      };
      var isLeft = function (v) {
          if (v instanceof Data_Either.Left) {
              return true;
          };
          if (v instanceof Data_Either.Right) {
              return false;
          };
          throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [ v.constructor.name ]);
      };
      return {
          isLeft: isLeft,
          fromLeft: unsafeFromLeft,
          fromRight: unsafeFromRight,
          left: Data_Either.Left.create,
          right: Data_Either.Right.create
      };
  })();
  var makeFiber = function (aff) {
      return $foreign["_makeFiber"](ffiUtil, aff);
  };
  var launchAff = function (aff) {
      return function __do() {
          var v = makeFiber(aff)();
          v.run();
          return v;
      };
  };
  var launchAff_ = function ($49) {
      return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
  };                                 
  var delay = function (v) {
      return $foreign["_delay"](Data_Either.Right.create, v);
  };
  var bracket = function (acquire) {
      return function (completed) {
          return $foreign.generalBracket(acquire)({
              killed: Data_Function["const"](completed),
              failed: Data_Function["const"](completed),
              completed: Data_Function["const"](completed)
          });
      };
  };
  var applyParAff = new Control_Apply.Apply(function () {
      return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
      return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
      return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
      return applyAff;
  }, $foreign["_pure"]);
  var $$finally = function (fin) {
      return function (a) {
          return bracket(Control_Applicative.pure(applicativeAff)(Data_Unit.unit))(Data_Function["const"](fin))(Data_Function["const"](a));
      };
  };
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
      return monadAff;
  }, $foreign["_liftEffect"]);
  var effectCanceler = function ($50) {
      return Canceler(Data_Function["const"](Effect_Class.liftEffect(monadEffectAff)($50)));
  };
  var joinFiber = function (v) {
      return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
      });
  };
  var functorFiber = new Data_Functor.Functor(function (f) {
      return function (t) {
          return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
      };
  });
  var killFiber = function (e) {
      return function (v) {
          return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
              if (v1) {
                  return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
              };
              return $foreign.makeAff(function (k) {
                  return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
              });
          });
      };
  };
  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
      return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadThrowAff;
  }, $foreign["_catchError"]);                                  
  var runAff = function (k) {
      return function (aff) {
          return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
              return Effect_Class.liftEffect(monadEffectAff)(k($52));
          })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
      };
  };
  var runAff_ = function (k) {
      return function (aff) {
          return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
      };
  };
  var parallelAff = new Control_Parallel_Class.Parallel(function () {
      return applicativeParAff;
  }, function () {
      return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
      return applyParAff;
  }, function ($54) {
      return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
      return monadAff;
  }, function (k) {
      var go = function (a) {
          return Control_Bind.bind(bindAff)(k(a))(function (v) {
              if (v instanceof Control_Monad_Rec_Class.Done) {
                  return Control_Applicative.pure(applicativeAff)(v.value0);
              };
              if (v instanceof Control_Monad_Rec_Class.Loop) {
                  return go(v.value0);
              };
              throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [ v.constructor.name ]);
          });
      };
      return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["Canceler"] = Canceler;
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["runAff"] = runAff;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["delay"] = delay;
  exports["finally"] = $$finally;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["bracket"] = bracket;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["makeAff"] = $foreign.makeAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {};
  var exports = $PS["Control.Monad.Fork.Class"];
  var Effect_Aff = $PS["Effect.Aff"];
  var MonadFork = function (Functor1, Monad0, fork, join, suspend) {
      this.Functor1 = Functor1;
      this.Monad0 = Monad0;
      this.fork = fork;
      this.join = join;
      this.suspend = suspend;
  };
  var suspend = function (dict) {
      return dict.suspend;
  };
  var monadForkAff = new MonadFork(function () {
      return Effect_Aff.functorFiber;
  }, function () {
      return Effect_Aff.monadAff;
  }, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);
  var join = function (dict) {
      return dict.join;
  };
  var fork = function (dict) {
      return dict.fork;
  };
  exports["fork"] = fork;
  exports["join"] = join;
  exports["suspend"] = suspend;
  exports["MonadFork"] = MonadFork;
  exports["monadForkAff"] = monadForkAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                  
  var uncons = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just({
              head: v.value0,
              tail: v.value1
          });
      };
      throw new Error("Failed pattern match at Data.List (line 259, column 1 - line 259, column 66): " + [ v.constructor.name ]);
  };
  var toUnfoldable = function (dictUnfoldable) {
      return Data_Unfoldable.unfoldr(dictUnfoldable)(function (xs) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (rec) {
              return new Data_Tuple.Tuple(rec.head, rec.tail);
          })(uncons(xs));
      });
  };
  var tail = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value1);
      };
      throw new Error("Failed pattern match at Data.List (line 245, column 1 - line 245, column 43): " + [ v.constructor.name ]);
  };
  var reverse = (function () {
      var go = function ($copy_acc) {
          return function ($copy_v) {
              var $tco_var_acc = $copy_acc;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(acc, v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return acc;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
                      $copy_v = v.value1;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [ acc.constructor.name, v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_acc, $copy_v);
              };
              return $tco_result;
          };
      };
      return go(Data_List_Types.Nil.value);
  })();
  var $$null = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };
  var head = function (v) {
      if (v instanceof Data_List_Types.Nil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof Data_List_Types.Cons) {
          return new Data_Maybe.Just(v.value0);
      };
      throw new Error("Failed pattern match at Data.List (line 230, column 1 - line 230, column 22): " + [ v.constructor.name ]);
  };
  exports["toUnfoldable"] = toUnfoldable;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["tail"] = tail;
  exports["uncons"] = uncons;
  exports["reverse"] = reverse;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatQueue = (function () {
      function CatQueue(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatQueue.create = function (value0) {
          return function (value1) {
              return new CatQueue(value0, value1);
          };
      };
      return CatQueue;
  })();
  var uncons = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
          };
          if (v.value0 instanceof Data_List_Types.Nil) {
              $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
              return;
          };
          if (v.value0 instanceof Data_List_Types.Cons) {
              $tco_done = true;
              return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
          };
          throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [ v.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var snoc = function (v) {
      return function (a) {
          return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
      };
  };
  var $$null = function (v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
          return true;
      };
      return false;
  };                                                                                                
  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];                            
  var CatNil = (function () {
      function CatNil() {

      };
      CatNil.value = new CatNil();
      return CatNil;
  })();
  var CatCons = (function () {
      function CatCons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CatCons.create = function (value0) {
          return function (value1) {
              return new CatCons(value0, value1);
          };
      };
      return CatCons;
  })();
  var link = function (v) {
      return function (v1) {
          if (v instanceof CatNil) {
              return v1;
          };
          if (v1 instanceof CatNil) {
              return v;
          };
          if (v instanceof CatCons) {
              return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
          };
          throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [ v.constructor.name, v1.constructor.name ]);
      };
  };
  var foldr = function (k) {
      return function (b) {
          return function (q) {
              var foldl = function ($copy_v) {
                  return function ($copy_c) {
                      return function ($copy_v1) {
                          var $tco_var_v = $copy_v;
                          var $tco_var_c = $copy_c;
                          var $tco_done = false;
                          var $tco_result;
                          function $tco_loop(v, c, v1) {
                              if (v1 instanceof Data_List_Types.Nil) {
                                  $tco_done = true;
                                  return c;
                              };
                              if (v1 instanceof Data_List_Types.Cons) {
                                  $tco_var_v = v;
                                  $tco_var_c = v(c)(v1.value0);
                                  $copy_v1 = v1.value1;
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [ v.constructor.name, c.constructor.name, v1.constructor.name ]);
                          };
                          while (!$tco_done) {
                              $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
                          };
                          return $tco_result;
                      };
                  };
              };
              var go = function ($copy_xs) {
                  return function ($copy_ys) {
                      var $tco_var_xs = $copy_xs;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(xs, ys) {
                          var v = Data_CatQueue.uncons(xs);
                          if (v instanceof Data_Maybe.Nothing) {
                              $tco_done = true;
                              return foldl(function (x) {
                                  return function (i) {
                                      return i(x);
                                  };
                              })(b)(ys);
                          };
                          if (v instanceof Data_Maybe.Just) {
                              $tco_var_xs = v.value0.value1;
                              $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                              return;
                          };
                          throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [ v.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_xs, $copy_ys);
                      };
                      return $tco_result;
                  };
              };
              return go(q)(Data_List_Types.Nil.value);
          };
      };
  };
  var uncons = function (v) {
      if (v instanceof CatNil) {
          return Data_Maybe.Nothing.value;
      };
      if (v instanceof CatCons) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, (function () {
              var $44 = Data_CatQueue["null"](v.value1);
              if ($44) {
                  return CatNil.value;
              };
              return foldr(link)(CatNil.value)(v.value1);
          })()));
      };
      throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [ v.constructor.name ]);
  };
  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);
  var snoc = function (cat) {
      return function (a) {
          return append(cat)(new CatCons(a, Data_CatQueue.empty));
      };
  };
  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["append"] = append;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Free = (function () {
      function Free(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Free.create = function (value0) {
          return function (value1) {
              return new Free(value0, value1);
          };
      };
      return Free;
  })();
  var Return = (function () {
      function Return(value0) {
          this.value0 = value0;
      };
      Return.create = function (value0) {
          return new Return(value0);
      };
      return Return;
  })();
  var Bind = (function () {
      function Bind(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Bind.create = function (value0) {
          return function (value1) {
              return new Bind(value0, value1);
          };
      };
      return Bind;
  })();
  var toView = function ($copy_v) {
      var $tco_done = false;
      var $tco_result;
      function $tco_loop(v) {
          var runExpF = function (v2) {
              return v2;
          };
          var concatF = function (v2) {
              return function (r) {
                  return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
              };
          };
          if (v.value0 instanceof Return) {
              var v2 = Data_CatList.uncons(v.value1);
              if (v2 instanceof Data_Maybe.Nothing) {
                  $tco_done = true;
                  return new Return(v.value0.value0);
              };
              if (v2 instanceof Data_Maybe.Just) {
                  $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
                  return;
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [ v2.constructor.name ]);
          };
          if (v.value0 instanceof Bind) {
              $tco_done = true;
              return new Bind(v.value0.value0, function (a) {
                  return concatF(v.value0.value1(a))(v.value1);
              });
          };
          throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [ v.value0.constructor.name ]);
      };
      while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
      };
      return $tco_result;
  };
  var fromView = function (f) {
      return new Free(f, Data_CatList.empty);
  };
  var freeMonad = new Control_Monad.Monad(function () {
      return freeApplicative;
  }, function () {
      return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
      return function (f) {
          return Control_Bind.bindFlipped(freeBind)(function ($120) {
              return Control_Applicative.pure(freeApplicative)(k($120));
          })(f);
      };
  });
  var freeBind = new Control_Bind.Bind(function () {
      return freeApply;
  }, function (v) {
      return function (k) {
          return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
      };
  });
  var freeApply = new Control_Apply.Apply(function () {
      return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
      return freeApply;
  }, function ($121) {
      return fromView(Return.create($121));
  });
  var liftF = function (f) {
      return fromView(new Bind(f, function ($122) {
          return Control_Applicative.pure(freeApplicative)($122);
      }));
  };
  var foldFree = function (dictMonadRec) {
      return function (k) {
          var go = function (f) {
              var v = toView(f);
              if (v instanceof Return) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure((dictMonadRec.Monad0()).Applicative0())(v.value0));
              };
              if (v instanceof Bind) {
                  return Data_Functor.map((((dictMonadRec.Monad0()).Bind1()).Apply0()).Functor0())(function ($129) {
                      return Control_Monad_Rec_Class.Loop.create(v.value1($129));
                  })(k(v.value0));
              };
              throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [ v.constructor.name ]);
          };
          return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
      };
  };
  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS);
(function(exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.pure_ = function (a) {
    return function () {
      return a;
    };
  };

  exports.bind_ = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  var monadST = new Control_Monad.Monad(function () {
      return applicativeST;
  }, function () {
      return bindST;
  });
  var bindST = new Control_Bind.Bind(function () {
      return applyST;
  }, $foreign.bind_);
  var applyST = new Control_Apply.Apply(function () {
      return functorST;
  }, Control_Monad.ap(monadST));
  var applicativeST = new Control_Applicative.Applicative(function () {
      return applyST;
  }, $foreign.pure_);
  exports["functorST"] = functorST;
  exports["applyST"] = applyST;
  exports["applicativeST"] = applicativeST;
  exports["bindST"] = bindST;
  exports["monadST"] = monadST;
  exports["foreach"] = $foreign.foreach;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];                
  var MonadState = function (Monad0, state) {
      this.Monad0 = Monad0;
      this.state = state;
  };
  var state = function (dict) {
      return dict.state;
  };
  var modify_ = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
          });
      };
  };
  var modify = function (dictMonadState) {
      return function (f) {
          return state(dictMonadState)(function (s) {
              var s$prime = f(s);
              return new Data_Tuple.Tuple(s$prime, s$prime);
          });
      };
  };
  var get = function (dictMonadState) {
      return state(dictMonadState)(function (s) {
          return new Data_Tuple.Tuple(s, s);
      });
  };
  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["modify"] = modify;
  exports["modify_"] = modify_;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];                      
  var parTraverse_ = function (dictParallel) {
      return function (dictFoldable) {
          return function (f) {
              return function ($17) {
                  return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
                      return Control_Parallel_Class.parallel(dictParallel)(f($18));
                  })($17));
              };
          };
      };
  };
  var parSequence_ = function (dictParallel) {
      return function (dictFoldable) {
          return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
      };
  };
  exports["parTraverse_"] = parTraverse_;
  exports["parSequence_"] = parSequence_;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["DOM.HTML.Indexed.InputType"] = $PS["DOM.HTML.Indexed.InputType"] || {};
  var exports = $PS["DOM.HTML.Indexed.InputType"];
  var InputButton = (function () {
      function InputButton() {

      };
      InputButton.value = new InputButton();
      return InputButton;
  })();
  var InputCheckbox = (function () {
      function InputCheckbox() {

      };
      InputCheckbox.value = new InputCheckbox();
      return InputCheckbox;
  })();
  var InputColor = (function () {
      function InputColor() {

      };
      InputColor.value = new InputColor();
      return InputColor;
  })();
  var InputDate = (function () {
      function InputDate() {

      };
      InputDate.value = new InputDate();
      return InputDate;
  })();
  var InputDatetimeLocal = (function () {
      function InputDatetimeLocal() {

      };
      InputDatetimeLocal.value = new InputDatetimeLocal();
      return InputDatetimeLocal;
  })();
  var InputEmail = (function () {
      function InputEmail() {

      };
      InputEmail.value = new InputEmail();
      return InputEmail;
  })();
  var InputFile = (function () {
      function InputFile() {

      };
      InputFile.value = new InputFile();
      return InputFile;
  })();
  var InputHidden = (function () {
      function InputHidden() {

      };
      InputHidden.value = new InputHidden();
      return InputHidden;
  })();
  var InputImage = (function () {
      function InputImage() {

      };
      InputImage.value = new InputImage();
      return InputImage;
  })();
  var InputMonth = (function () {
      function InputMonth() {

      };
      InputMonth.value = new InputMonth();
      return InputMonth;
  })();
  var InputNumber = (function () {
      function InputNumber() {

      };
      InputNumber.value = new InputNumber();
      return InputNumber;
  })();
  var InputPassword = (function () {
      function InputPassword() {

      };
      InputPassword.value = new InputPassword();
      return InputPassword;
  })();
  var InputRadio = (function () {
      function InputRadio() {

      };
      InputRadio.value = new InputRadio();
      return InputRadio;
  })();
  var InputRange = (function () {
      function InputRange() {

      };
      InputRange.value = new InputRange();
      return InputRange;
  })();
  var InputReset = (function () {
      function InputReset() {

      };
      InputReset.value = new InputReset();
      return InputReset;
  })();
  var InputSearch = (function () {
      function InputSearch() {

      };
      InputSearch.value = new InputSearch();
      return InputSearch;
  })();
  var InputSubmit = (function () {
      function InputSubmit() {

      };
      InputSubmit.value = new InputSubmit();
      return InputSubmit;
  })();
  var InputTel = (function () {
      function InputTel() {

      };
      InputTel.value = new InputTel();
      return InputTel;
  })();
  var InputText = (function () {
      function InputText() {

      };
      InputText.value = new InputText();
      return InputText;
  })();
  var InputTime = (function () {
      function InputTime() {

      };
      InputTime.value = new InputTime();
      return InputTime;
  })();
  var InputUrl = (function () {
      function InputUrl() {

      };
      InputUrl.value = new InputUrl();
      return InputUrl;
  })();
  var InputWeek = (function () {
      function InputWeek() {

      };
      InputWeek.value = new InputWeek();
      return InputWeek;
  })();
  var renderInputType = function (v) {
      if (v instanceof InputButton) {
          return "button";
      };
      if (v instanceof InputCheckbox) {
          return "checkbox";
      };
      if (v instanceof InputColor) {
          return "color";
      };
      if (v instanceof InputDate) {
          return "date";
      };
      if (v instanceof InputDatetimeLocal) {
          return "datetime-local";
      };
      if (v instanceof InputEmail) {
          return "email";
      };
      if (v instanceof InputFile) {
          return "file";
      };
      if (v instanceof InputHidden) {
          return "hidden";
      };
      if (v instanceof InputImage) {
          return "image";
      };
      if (v instanceof InputMonth) {
          return "month";
      };
      if (v instanceof InputNumber) {
          return "number";
      };
      if (v instanceof InputPassword) {
          return "password";
      };
      if (v instanceof InputRadio) {
          return "radio";
      };
      if (v instanceof InputRange) {
          return "range";
      };
      if (v instanceof InputReset) {
          return "reset";
      };
      if (v instanceof InputSearch) {
          return "search";
      };
      if (v instanceof InputSubmit) {
          return "submit";
      };
      if (v instanceof InputTel) {
          return "tel";
      };
      if (v instanceof InputText) {
          return "text";
      };
      if (v instanceof InputTime) {
          return "time";
      };
      if (v instanceof InputUrl) {
          return "url";
      };
      if (v instanceof InputWeek) {
          return "week";
      };
      throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 16): " + [ v.constructor.name ]);
  };
  exports["InputButton"] = InputButton;
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputColor"] = InputColor;
  exports["InputDate"] = InputDate;
  exports["InputDatetimeLocal"] = InputDatetimeLocal;
  exports["InputEmail"] = InputEmail;
  exports["InputFile"] = InputFile;
  exports["InputHidden"] = InputHidden;
  exports["InputImage"] = InputImage;
  exports["InputMonth"] = InputMonth;
  exports["InputNumber"] = InputNumber;
  exports["InputPassword"] = InputPassword;
  exports["InputRadio"] = InputRadio;
  exports["InputRange"] = InputRange;
  exports["InputReset"] = InputReset;
  exports["InputSearch"] = InputSearch;
  exports["InputSubmit"] = InputSubmit;
  exports["InputTel"] = InputTel;
  exports["InputText"] = InputText;
  exports["InputTime"] = InputTime;
  exports["InputUrl"] = InputUrl;
  exports["InputWeek"] = InputWeek;
  exports["renderInputType"] = renderInputType;
})(PS);
(function(exports) {
  "use strict";

  //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start, n = 0;
      while (i !== end) {
        result[n++] = i;
        i += step;
      }
      result[n] = i;
      return result;
    };
  };                                                                                                 

  exports.fromFoldableImpl = (function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }
    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;
      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }
      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  })();

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  exports.snoc = function (l) {
    return function (e) {
      var l1 = l.slice();
      l1.push(e);
      return l1;
    };
  };

  //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing :  just(xs[i]);
        };
      };
    };
  };

  exports.findIndexImpl = function (just) {
    return function (nothing) {
      return function (f) {
        return function (xs) {
          for (var i = 0, l = xs.length; i < l; i++) {
            if (f(xs[i])) return just(i);
          }
          return nothing;
        };
      };
    };
  };

  exports._deleteAt = function (just) {
    return function (nothing) {
      return function (i) {
        return function (l) {
          if (i < 0 || i >= l.length) return nothing;
          var l1 = l.slice();
          l1.splice(i, 1);
          return just(l1);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);
        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }
        return result;
      };
    };
  };

  //------------------------------------------------------------------------------
  // Partial ---------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.unsafeIndexImpl = function (xs) {
    return function (n) {
      return xs[n];
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                                          
  var unsafeIndex = function (dictPartial) {
      return $foreign.unsafeIndexImpl;
  }; 
  var toUnfoldable = function (dictUnfoldable) {
      return function (xs) {
          var len = $foreign.length(xs);
          var f = function (i) {
              if (i < len) {
                  return new Data_Maybe.Just(new Data_Tuple.Tuple(unsafeIndex()(xs)(i), i + 1 | 0));
              };
              if (Data_Boolean.otherwise) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Data.Array (line 143, column 3 - line 145, column 26): " + [ i.constructor.name ]);
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(f)(0);
      };
  }; 
  var sortBy = function (comp) {
      return function (xs) {
          var comp$prime = function (x) {
              return function (y) {
                  var v = comp(x)(y);
                  if (v instanceof Data_Ordering.GT) {
                      return 1;
                  };
                  if (v instanceof Data_Ordering.EQ) {
                      return 0;
                  };
                  if (v instanceof Data_Ordering.LT) {
                      return -1 | 0;
                  };
                  throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 707, column 1): " + [ v.constructor.name ]);
              };
          };
          return $foreign.sortImpl(comp$prime)(xs);
      };
  };
  var sortWith = function (dictOrd) {
      return function (f) {
          return sortBy(Data_Ord.comparing(dictOrd)(f));
      };
  };
  var singleton = function (a) {
      return [ a ];
  };
  var mapWithIndex = function (f) {
      return function (xs) {
          return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
      };
  };
  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromFoldable = function (dictFoldable) {
      return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };
  var findIndex = $foreign.findIndexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteAt = $foreign["_deleteAt"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var deleteBy = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.length === 0) {
                  return [  ];
              };
              return Data_Maybe.maybe(v2)(function (i) {
                  return Data_Maybe.fromJust()(deleteAt(i)(v2));
              })(findIndex(v(v1))(v2));
          };
      };
  };
  var $$delete = function (dictEq) {
      return deleteBy(Data_Eq.eq(dictEq));
  };
  var difference = function (dictEq) {
      return Data_Foldable.foldr(Data_Foldable.foldableArray)($$delete(dictEq));
  };
  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($117) {
          return Data_Maybe.maybe([  ])(singleton)(f($117));
      });
  };
  var catMaybes = mapMaybe(Control_Category.identity(Control_Category.categoryFn));
  exports["fromFoldable"] = fromFoldable;
  exports["toUnfoldable"] = toUnfoldable;
  exports["singleton"] = singleton;
  exports["index"] = index;
  exports["findIndex"] = findIndex;
  exports["deleteAt"] = deleteAt;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["catMaybes"] = catMaybes;
  exports["mapWithIndex"] = mapWithIndex;
  exports["sortBy"] = sortBy;
  exports["sortWith"] = sortWith;
  exports["deleteBy"] = deleteBy;
  exports["difference"] = difference;
  exports["unsafeIndex"] = unsafeIndex;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["snoc"] = $foreign.snoc;
  exports["filter"] = $foreign.filter;
})(PS);
(function(exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;

  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];                  
  var Bounded = function (Ord0, bottom, top) {
      this.Ord0 = Ord0;
      this.bottom = bottom;
      this.top = top;
  };
  var top = function (dict) {
      return dict.top;
  };                                            
  var boundedInt = new Bounded(function () {
      return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
      return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);
  var bottom = function (dict) {
      return dict.bottom;
  };
  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Ring = function (Semiring0, sub) {
      this.Semiring0 = Semiring0;
      this.sub = sub;
  };
  var sub = function (dict) {
      return dict.sub;
  };                  
  var ringInt = new Ring(function () {
      return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];
  var CommutativeRing = function (Ring0) {
      this.Ring0 = Ring0;
  }; 
  var commutativeRingInt = new CommutativeRing(function () {
      return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Const"] = $PS["Data.Const"] || {};
  var exports = $PS["Data.Const"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];                                      
  var Const = function (x) {
      return x;
  };
  var newtypeConst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Const);
  var functorConst = new Data_Functor.Functor(function (f) {
      return function (m) {
          return m;
      };
  });
  var applyConst = function (dictSemigroup) {
      return new Control_Apply.Apply(function () {
          return functorConst;
      }, function (v) {
          return function (v1) {
              return Data_Semigroup.append(dictSemigroup)(v)(v1);
          };
      });
  };
  var applicativeConst = function (dictMonoid) {
      return new Control_Applicative.Applicative(function () {
          return applyConst(dictMonoid.Semigroup0());
      }, function (v) {
          return Data_Monoid.mempty(dictMonoid);
      });
  };
  exports["Const"] = Const;
  exports["newtypeConst"] = newtypeConst;
  exports["functorConst"] = functorConst;
  exports["applyConst"] = applyConst;
  exports["applicativeConst"] = applicativeConst;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {};
  var exports = $PS["Data.Coyoneda"];
  var Control_Category = $PS["Control.Category"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];                        
  var CoyonedaF = (function () {
      function CoyonedaF(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      CoyonedaF.create = function (value0) {
          return function (value1) {
              return new CoyonedaF(value0, value1);
          };
      };
      return CoyonedaF;
  })();
  var Coyoneda = function (x) {
      return x;
  };
  var unCoyoneda = function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return f(v1.value0)(v1.value1);
          })(v);
      };
  };
  var coyoneda = function (k) {
      return function (fi) {
          return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
      };
  };
  var functorCoyoneda = new Data_Functor.Functor(function (f) {
      return function (v) {
          return Data_Exists.runExists(function (v1) {
              return coyoneda(function ($84) {
                  return f(v1.value0($84));
              })(v1.value1);
          })(v);
      };
  });
  var liftCoyoneda = coyoneda(Control_Category.identity(Control_Category.categoryFn));
  exports["Coyoneda"] = Coyoneda;
  exports["coyoneda"] = coyoneda;
  exports["unCoyoneda"] = unCoyoneda;
  exports["liftCoyoneda"] = liftCoyoneda;
  exports["functorCoyoneda"] = functorCoyoneda;
})(PS);
(function(exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Enum = function (Ord0, pred, succ) {
      this.Ord0 = Ord0;
      this.pred = pred;
      this.succ = succ;
  };
  var BoundedEnum = function (Bounded0, Enum1, cardinality, fromEnum, toEnum) {
      this.Bounded0 = Bounded0;
      this.Enum1 = Enum1;
      this.cardinality = cardinality;
      this.fromEnum = fromEnum;
      this.toEnum = toEnum;
  };
  var toEnum = function (dict) {
      return dict.toEnum;
  };
  var succ = function (dict) {
      return dict.succ;
  }; 
  var pred = function (dict) {
      return dict.pred;
  };              
  var fromEnum = function (dict) {
      return dict.fromEnum;
  };
  var toEnumWithDefaults = function (dictBoundedEnum) {
      return function (low) {
          return function (high) {
              return function (x) {
                  var v = toEnum(dictBoundedEnum)(x);
                  if (v instanceof Data_Maybe.Just) {
                      return v.value0;
                  };
                  if (v instanceof Data_Maybe.Nothing) {
                      var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));
                      if ($54) {
                          return low;
                      };
                      return high;
                  };
                  throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var defaultSucc = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) + 1 | 0);
          };
      };
  };
  var defaultPred = function (toEnum$prime) {
      return function (fromEnum$prime) {
          return function (a) {
              return toEnum$prime(fromEnum$prime(a) - 1 | 0);
          };
      };
  };
  var charToEnum = function (v) {
      if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
          return new Data_Maybe.Just($foreign.fromCharCode(v));
      };
      return Data_Maybe.Nothing.value;
  };
  var enumChar = new Enum(function () {
      return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));
  var cardinality = function (dict) {
      return dict.cardinality;
  }; 
  var boundedEnumChar = new BoundedEnum(function () {
      return Data_Bounded.boundedChar;
  }, function () {
      return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["cardinality"] = cardinality;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["enumChar"] = enumChar;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);
(function(exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  };

  // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.
  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return ((x % yy) + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];  
  var EuclideanRing = function (CommutativeRing0, degree, div, mod) {
      this.CommutativeRing0 = CommutativeRing0;
      this.degree = degree;
      this.div = div;
      this.mod = mod;
  };
  var mod = function (dict) {
      return dict.mod;
  }; 
  var euclideanRingInt = new EuclideanRing(function () {
      return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);
  var div = function (dict) {
      return dict.div;
  };
  var degree = function (dict) {
      return dict.degree;
  };
  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.FoldableWithIndex"] = $PS["Data.FoldableWithIndex"] || {};
  var exports = $PS["Data.FoldableWithIndex"];
  var FoldableWithIndex = function (Foldable0, foldMapWithIndex, foldlWithIndex, foldrWithIndex) {
      this.Foldable0 = Foldable0;
      this.foldMapWithIndex = foldMapWithIndex;
      this.foldlWithIndex = foldlWithIndex;
      this.foldrWithIndex = foldrWithIndex;
  };
  var foldrWithIndex = function (dict) {
      return dict.foldrWithIndex;
  };
  var foldlWithIndex = function (dict) {
      return dict.foldlWithIndex;
  };
  var foldMapWithIndex = function (dict) {
      return dict.foldMapWithIndex;
  };
  exports["FoldableWithIndex"] = FoldableWithIndex;
  exports["foldrWithIndex"] = foldrWithIndex;
  exports["foldlWithIndex"] = foldlWithIndex;
  exports["foldMapWithIndex"] = foldMapWithIndex;
})(PS);
(function(exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Functor.Variant"] = $PS["Data.Functor.Variant"] || {};
  var exports = $PS["Data.Functor.Variant"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var onMatch = function (dictRowToList) {
      return function (dictVariantFMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return function (k) {
                      return function (v) {
                          if (Record_Unsafe.unsafeHas(v.type)(r)) {
                              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                          };
                          return k(v);
                      };
                  };
              };
          };
      };
  };
  var inj = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictFunctor) {
              return function (p) {
                  return function (value) {
                      return {
                          type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                          value: value,
                          map: Data_Functor.map(dictFunctor)
                      };
                  };
              };
          };
      };
  };
  var case_ = function (r) {
      return Partial_Unsafe.unsafeCrashWith("Data.Functor.Variant: pattern match failure [" + (r.type + "]"));
  }; 
  var match = function (dictRowToList) {
      return function (dictVariantFMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return onMatch(dictRowToList)(dictVariantFMatchCases)(dictUnion)(r)(case_);
              };
          };
      };
  };
  exports["inj"] = inj;
  exports["onMatch"] = onMatch;
  exports["case_"] = case_;
  exports["match"] = match;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Generic.Rep"] = $PS["Data.Generic.Rep"] || {};
  var exports = $PS["Data.Generic.Rep"];             
  var Inl = (function () {
      function Inl(value0) {
          this.value0 = value0;
      };
      Inl.create = function (value0) {
          return new Inl(value0);
      };
      return Inl;
  })();
  var Inr = (function () {
      function Inr(value0) {
          this.value0 = value0;
      };
      Inr.create = function (value0) {
          return new Inr(value0);
      };
      return Inr;
  })();
  var NoArguments = (function () {
      function NoArguments() {

      };
      NoArguments.value = new NoArguments();
      return NoArguments;
  })();
  var Generic = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  }; 
  var from = function (dict) {
      return dict.from;
  };
  exports["Generic"] = Generic;
  exports["to"] = to;
  exports["from"] = from;
  exports["NoArguments"] = NoArguments;
  exports["Inl"] = Inl;
  exports["Inr"] = Inr;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Generic.Rep.Show"] = $PS["Data.Generic.Rep.Show"] || {};
  var exports = $PS["Data.Generic.Rep.Show"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];                
  var GenericShowArgs = function (genericShowArgs) {
      this.genericShowArgs = genericShowArgs;
  };
  var GenericShow = function (genericShow$prime) {
      this["genericShow'"] = genericShow$prime;
  };
  var genericShowArgsNoArguments = new GenericShowArgs(function (v) {
      return [  ];
  });
  var genericShowArgs = function (dict) {
      return dict.genericShowArgs;
  };
  var genericShowConstructor = function (dictGenericShowArgs) {
      return function (dictIsSymbol) {
          return new GenericShow(function (v) {
              var ctor = Data_Symbol.reflectSymbol(dictIsSymbol)(Data_Symbol.SProxy.value);
              var v1 = genericShowArgs(dictGenericShowArgs)(v);
              if (v1.length === 0) {
                  return ctor;
              };
              return "(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ ctor ])(v1)) + ")");
          });
      };
  };
  var genericShow$prime = function (dict) {
      return dict["genericShow'"];
  }; 
  var genericShowSum = function (dictGenericShow) {
      return function (dictGenericShow1) {
          return new GenericShow(function (v) {
              if (v instanceof Data_Generic_Rep.Inl) {
                  return genericShow$prime(dictGenericShow)(v.value0);
              };
              if (v instanceof Data_Generic_Rep.Inr) {
                  return genericShow$prime(dictGenericShow1)(v.value0);
              };
              throw new Error("Failed pattern match at Data.Generic.Rep.Show (line 26, column 1 - line 26, column 83): " + [ v.constructor.name ]);
          });
      };
  };
  var genericShow = function (dictGeneric) {
      return function (dictGenericShow) {
          return function (x) {
              return genericShow$prime(dictGenericShow)(Data_Generic_Rep.from(dictGeneric)(x));
          };
      };
  };
  exports["GenericShow"] = GenericShow;
  exports["genericShow"] = genericShow;
  exports["GenericShowArgs"] = GenericShowArgs;
  exports["genericShowArgs"] = genericShowArgs;
  exports["genericShowArgsNoArguments"] = genericShowArgsNoArguments;
  exports["genericShowSum"] = genericShowSum;
  exports["genericShowConstructor"] = genericShowConstructor;
})(PS);
(function(exports) {
  "use strict";

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;
        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }
        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");

        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromString = fromStringAs(10);
  exports["fromString"] = fromString;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Internal.Wander"] = $PS["Data.Lens.Internal.Wander"] || {};
  var exports = $PS["Data.Lens.Internal.Wander"];                            
  var Wander = function (Choice1, Strong0, wander) {
      this.Choice1 = Choice1;
      this.Strong0 = Strong0;
      this.wander = wander;
  }; 
  var wander = function (dict) {
      return dict.wander;
  };
  exports["wander"] = wander;
  exports["Wander"] = Wander;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];                 
  var Choice = function (Profunctor0, left, right) {
      this.Profunctor0 = Profunctor0;
      this.left = left;
      this.right = right;
  };
  var right = function (dict) {
      return dict.right;
  };
  var left = function (dict) {
      return dict.left;
  };
  exports["left"] = left;
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];       
  var Strong = function (Profunctor0, first, second) {
      this.Profunctor0 = Profunctor0;
      this.first = first;
      this.second = second;
  };                                            
  var second = function (dict) {
      return dict.second;
  };
  var first = function (dict) {
      return dict.first;
  };
  exports["first"] = first;
  exports["second"] = second;
  exports["Strong"] = Strong;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Const = $PS["Data.Const"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Lens_Internal_Wander = $PS["Data.Lens.Internal.Wander"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];                
  var Forget = function (x) {
      return x;
  };
  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
      return function (v) {
          return function (v1) {
              return function ($27) {
                  return v1(f($27));
              };
          };
      };
  });
  var strongForget = new Data_Profunctor_Strong.Strong(function () {
      return profunctorForget;
  }, function (v) {
      return function ($28) {
          return v(Data_Tuple.fst($28));
      };
  }, function (v) {
      return function ($29) {
          return v(Data_Tuple.snd($29));
      };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Forget);
  var choiceForget = function (dictMonoid) {
      return new Data_Profunctor_Choice.Choice(function () {
          return profunctorForget;
      }, function (v) {
          return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
      }, function (v) {
          return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
      });
  };
  var wanderForget = function (dictMonoid) {
      return new Data_Lens_Internal_Wander.Wander(function () {
          return choiceForget(dictMonoid);
      }, function () {
          return strongForget;
      }, function (f) {
          return function (v) {
              return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Const.newtypeConst)(Data_Const.newtypeConst)(Data_Const.Const)(f(Data_Const.applicativeConst(dictMonoid)))(v);
          };
      });
  };
  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["choiceForget"] = choiceForget;
  exports["strongForget"] = strongForget;
  exports["wanderForget"] = wanderForget;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];      
  var First = function (x) {
      return x;
  };
  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          if (v instanceof Data_Maybe.Just) {
              return v;
          };
          return v1;
      };
  });                                  
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
      return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
      return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Fold"] = $PS["Data.Lens.Fold"] || {};
  var exports = $PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Newtype = $PS["Data.Newtype"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);
  var preview = function (p) {
      return function ($64) {
          return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
              return Data_Maybe_First.First(Data_Maybe.Just.create($65));
          })($64));
      };
  };
  exports["preview"] = preview;
  exports["foldMapOf"] = foldMapOf;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Getter"] = $PS["Data.Lens.Getter"] || {};
  var exports = $PS["Data.Lens.Getter"];
  var Control_Category = $PS["Control.Category"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Newtype = $PS["Data.Newtype"];                                    
  var view = function (l) {
      return Data_Newtype.unwrap(Data_Lens_Internal_Forget.newtypeForget)(l(Control_Category.identity(Control_Category.categoryFn)));
  };
  exports["view"] = view;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Iso"] = $PS["Data.Lens.Iso"] || {};
  var exports = $PS["Data.Lens.Iso"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var iso = function (f) {
      return function (g) {
          return function (dictProfunctor) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
              };
          };
      };
  };
  exports["iso"] = iso;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Iso.Newtype"] = $PS["Data.Lens.Iso.Newtype"] || {};
  var exports = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Newtype = $PS["Data.Newtype"];                
  var _Newtype = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (dictProfunctor) {
              return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
          };
      };
  };
  exports["_Newtype"] = _Newtype;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Lens"] = $PS["Data.Lens.Lens"] || {};
  var exports = $PS["Data.Lens.Lens"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Tuple = $PS["Data.Tuple"];
  var lens$prime = function (to) {
      return function (dictStrong) {
          return function (pab) {
              return Data_Profunctor.dimap(dictStrong.Profunctor0())(to)(function (v) {
                  return v.value1(v.value0);
              })(Data_Profunctor_Strong.first(dictStrong)(pab));
          };
      };
  };
  var lens = function (get) {
      return function (set) {
          return function (dictStrong) {
              return lens$prime(function (s) {
                  return new Data_Tuple.Tuple(get(s), function (b) {
                      return set(s)(b);
                  });
              })(dictStrong);
          };
      };
  };
  exports["lens"] = lens;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Prism"] = $PS["Data.Lens.Prism"] || {};
  var exports = $PS["Data.Lens.Prism"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];                                                                                         
  var prism = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return function (pab) {
                  return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
              };
          };
      };
  };
  var prism$prime = function (to) {
      return function (fro) {
          return function (dictChoice) {
              return prism(to)(function (s) {
                  return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
              })(dictChoice);
          };
      };
  };
  exports["prism'"] = prism$prime;
  exports["prism"] = prism;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Record"] = $PS["Record"] || {};
  var exports = $PS["Record"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var set = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (b) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(b)(r);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (a) {
                      return function (r) {
                          return Record_Unsafe.unsafeSet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r);
                      };
                  };
              };
          };
      };
  };
  var get = function (dictIsSymbol) {
      return function (dictCons) {
          return function (l) {
              return function (r) {
                  return Record_Unsafe.unsafeGet(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
              };
          };
      };
  };
  var $$delete = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (r) {
                      return Record_Unsafe.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r);
                  };
              };
          };
      };
  };
  var rename = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictCons) {
              return function (dictLacks) {
                  return function (dictCons1) {
                      return function (dictLacks1) {
                          return function (prev) {
                              return function (next) {
                                  return function (record) {
                                      return insert(dictIsSymbol1)(dictLacks1)(dictCons1)(next)(get(dictIsSymbol)(dictCons)(prev)(record))($$delete(dictIsSymbol)(dictLacks)(dictCons)(prev)(record));
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["get"] = get;
  exports["set"] = set;
  exports["insert"] = insert;
  exports["delete"] = $$delete;
  exports["rename"] = rename;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Lens.Record"] = $PS["Data.Lens.Record"] || {};
  var exports = $PS["Data.Lens.Record"];
  var Data_Function = $PS["Data.Function"];
  var Data_Lens_Lens = $PS["Data.Lens.Lens"];
  var Record = $PS["Record"];                
  var prop = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCons1) {
              return function (l) {
                  return function (dictStrong) {
                      return Data_Lens_Lens.lens(Record.get(dictIsSymbol)(dictCons)(l))(Data_Function.flip(Record.set(dictIsSymbol)(dictCons)(dictCons1)(l)))(dictStrong);
                  };
              };
          };
      };
  };
  exports["prop"] = prop;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];                                                          
  var Traversable = function (Foldable1, Functor0, sequence, traverse) {
      this.Foldable1 = Foldable1;
      this.Functor0 = Functor0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  }; 
  var traversableMaybe = new Traversable(function () {
      return Data_Foldable.foldableMaybe;
  }, function () {
      return Data_Maybe.functorMaybe;
  }, function (dictApplicative) {
      return function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
          };
          if (v instanceof Data_Maybe.Just) {
              return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 86, column 47): " + [ v.constructor.name ]);
      };
  }, function (dictApplicative) {
      return function (v) {
          return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(Data_Maybe.Just.create)(v(v1.value0));
              };
              throw new Error("Failed pattern match at Data.Traversable (line 86, column 1 - line 86, column 47): " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["traversableMaybe"] = traversableMaybe;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];                
  var Leaf = (function () {
      function Leaf() {

      };
      Leaf.value = new Leaf();
      return Leaf;
  })();
  var Two = (function () {
      function Two(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Two.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Two(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Two;
  })();
  var Three = (function () {
      function Three(value0, value1, value2, value3, value4, value5, value6) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
          this.value6 = value6;
      };
      Three.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return function (value6) {
                                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                              };
                          };
                      };
                  };
              };
          };
      };
      return Three;
  })();
  var TwoLeft = (function () {
      function TwoLeft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoLeft(value0, value1, value2);
              };
          };
      };
      return TwoLeft;
  })();
  var TwoRight = (function () {
      function TwoRight(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      TwoRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new TwoRight(value0, value1, value2);
              };
          };
      };
      return TwoRight;
  })();
  var ThreeLeft = (function () {
      function ThreeLeft(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeLeft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeLeft(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeLeft;
  })();
  var ThreeMiddle = (function () {
      function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeMiddle.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeMiddle;
  })();
  var ThreeRight = (function () {
      function ThreeRight(value0, value1, value2, value3, value4, value5) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
          this.value5 = value5;
      };
      ThreeRight.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return function (value5) {
                              return new ThreeRight(value0, value1, value2, value3, value4, value5);
                          };
                      };
                  };
              };
          };
      };
      return ThreeRight;
  })();
  var KickUp = (function () {
      function KickUp(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      KickUp.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new KickUp(value0, value1, value2, value3);
                  };
              };
          };
      };
      return KickUp;
  })();
  var values = function (v) {
      if (v instanceof Leaf) {
          return Data_List_Types.Nil.value;
      };
      if (v instanceof Two) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
      };
      if (v instanceof Three) {
          return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
      };
      throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [ v.constructor.name ]);
  };
  var singleton = function (k) {
      return function (v) {
          return new Two(Leaf.value, k, v, Leaf.value);
      };
  };
  var toUnfoldable = function (dictUnfoldable) {
      return function (m) {
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof Leaf) {
                          $copy_v = v.value1;
                          return;
                      };
                      if (v.value0 instanceof Two && (v.value0.value0 instanceof Leaf && v.value0.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), v.value1));
                      };
                      if (v.value0 instanceof Two && v.value0.value0 instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Just.create(new Data_Tuple.Tuple(new Data_Tuple.Tuple(v.value0.value1, v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                      };
                      if (v.value0 instanceof Two) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, v.value1)));
                          return;
                      };
                      if (v.value0 instanceof Three) {
                          $copy_v = new Data_List_Types.Cons(v.value0.value0, new Data_List_Types.Cons(singleton(v.value0.value1)(v.value0.value2), new Data_List_Types.Cons(v.value0.value3, new Data_List_Types.Cons(singleton(v.value0.value4)(v.value0.value5), new Data_List_Types.Cons(v.value0.value6, v.value1)))));
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 577, column 18 - line 586, column 71): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 576, column 3 - line 576, column 19): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return Data_Unfoldable.unfoldr(dictUnfoldable)(go)(new Data_List_Types.Cons(m, Data_List_Types.Nil.value));
      };
  };
  var lookup = function (dictOrd) {
      return function (k) {
          var comp = Data_Ord.compare(dictOrd);
          var go = function ($copy_v) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(v) {
                  if (v instanceof Leaf) {
                      $tco_done = true;
                      return Data_Maybe.Nothing.value;
                  };
                  if (v instanceof Two) {
                      var v2 = comp(k)(v.value1);
                      if (v2 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      if (v2 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  if (v instanceof Three) {
                      var v3 = comp(k)(v.value1);
                      if (v3 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value2);
                      };
                      var v4 = comp(k)(v.value4);
                      if (v4 instanceof Data_Ordering.EQ) {
                          $tco_done = true;
                          return new Data_Maybe.Just(v.value5);
                      };
                      if (v3 instanceof Data_Ordering.LT) {
                          $copy_v = v.value0;
                          return;
                      };
                      if (v4 instanceof Data_Ordering.GT) {
                          $copy_v = v.value6;
                          return;
                      };
                      $copy_v = v.value3;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [ v.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_v);
              };
              return $tco_result;
          };
          return go;
      };
  };
  var member = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
          };
      };
  };
  var functorMap = new Data_Functor.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Leaf) {
              return Leaf.value;
          };
          if (v1 instanceof Two) {
              return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
          };
          if (v1 instanceof Three) {
              return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
          };
          throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 96, column 39): " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var fromZipper = function ($copy_dictOrd) {
      return function ($copy_v) {
          return function ($copy_tree) {
              var $tco_var_dictOrd = $copy_dictOrd;
              var $tco_var_v = $copy_v;
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(dictOrd, v, tree) {
                  if (v instanceof Data_List_Types.Nil) {
                      $tco_done = true;
                      return tree;
                  };
                  if (v instanceof Data_List_Types.Cons) {
                      if (v.value0 instanceof TwoLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
                          return;
                      };
                      if (v.value0 instanceof TwoRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
                          return;
                      };
                      if (v.value0 instanceof ThreeLeft) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeMiddle) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
                          return;
                      };
                      if (v.value0 instanceof ThreeRight) {
                          $tco_var_dictOrd = dictOrd;
                          $tco_var_v = v.value1;
                          $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [ v.value0.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [ v.constructor.name, tree.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
              };
              return $tco_result;
          };
      };
  };
  var insert = function (dictOrd) {
      return function (k) {
          return function (v) {
              var up = function ($copy_v1) {
                  return function ($copy_v2) {
                      var $tco_var_v1 = $copy_v1;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(v1, v2) {
                          if (v1 instanceof Data_List_Types.Nil) {
                              $tco_done = true;
                              return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
                          };
                          if (v1 instanceof Data_List_Types.Cons) {
                              if (v1.value0 instanceof TwoLeft) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                              };
                              if (v1.value0 instanceof TwoRight) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                              };
                              if (v1.value0 instanceof ThreeLeft) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeMiddle) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                                  return;
                              };
                              if (v1.value0 instanceof ThreeRight) {
                                  $tco_var_v1 = v1.value1;
                                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                                  return;
                              };
                              throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [ v1.value0.constructor.name, v2.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [ v1.constructor.name, v2.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_v1, $copy_v2);
                      };
                      return $tco_result;
                  };
              };
              var comp = Data_Ord.compare(dictOrd);
              var down = function ($copy_ctx) {
                  return function ($copy_v1) {
                      var $tco_var_ctx = $copy_ctx;
                      var $tco_done = false;
                      var $tco_result;
                      function $tco_loop(ctx, v1) {
                          if (v1 instanceof Leaf) {
                              $tco_done = true;
                              return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
                          };
                          if (v1 instanceof Two) {
                              var v2 = comp(k)(v1.value1);
                              if (v2 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                              };
                              if (v2 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                              $copy_v1 = v1.value3;
                              return;
                          };
                          if (v1 instanceof Three) {
                              var v3 = comp(k)(v1.value1);
                              if (v3 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                              };
                              var v4 = comp(k)(v1.value4);
                              if (v4 instanceof Data_Ordering.EQ) {
                                  $tco_done = true;
                                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                              };
                              if (v3 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value0;
                                  return;
                              };
                              if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                                  $copy_v1 = v1.value3;
                                  return;
                              };
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                              $copy_v1 = v1.value6;
                              return;
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ ctx.constructor.name, v1.constructor.name ]);
                      };
                      while (!$tco_done) {
                          $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
                      };
                      return $tco_result;
                  };
              };
              return down(Data_List_Types.Nil.value);
          };
      };
  };
  var pop = function (dictOrd) {
      return function (k) {
          var up = function ($copy_ctxs) {
              return function ($copy_tree) {
                  var $tco_var_ctxs = $copy_ctxs;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctxs, tree) {
                      if (ctxs instanceof Data_List_Types.Nil) {
                          $tco_done = true;
                          return tree;
                      };
                      if (ctxs instanceof Data_List_Types.Cons) {
                          if (ctxs.value0 instanceof TwoLeft && (ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoRight && (ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf)) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                              $tco_var_ctxs = ctxs.value1;
                              $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                              return;
                          };
                          if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
                          };
                          if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && (ctxs.value0.value2 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeRight && (ctxs.value0.value0 instanceof Leaf && (ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf))) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
                          };
                          if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
                          };
                          if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                              $tco_done = true;
                              return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ ctxs.value0.constructor.name, tree.constructor.name ]);
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ ctxs.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
                  };
                  return $tco_result;
              };
          };
          var removeMaxNode = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Two && (m.value0 instanceof Leaf && m.value3 instanceof Leaf)) {
                          $tco_done = true;
                          return up(ctx)(Leaf.value);
                      };
                      if (m instanceof Two) {
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three && (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf))) {
                          $tco_done = true;
                          return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
                      };
                      if (m instanceof Three) {
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          var maxNode = function ($copy_m) {
              var $tco_done = false;
              var $tco_result;
              function $tco_loop(m) {
                  if (m instanceof Two && m.value3 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value1,
                          value: m.value2
                      };
                  };
                  if (m instanceof Two) {
                      $copy_m = m.value3;
                      return;
                  };
                  if (m instanceof Three && m.value6 instanceof Leaf) {
                      $tco_done = true;
                      return {
                          key: m.value4,
                          value: m.value5
                      };
                  };
                  if (m instanceof Three) {
                      $copy_m = m.value6;
                      return;
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [ m.constructor.name ]);
              };
              while (!$tco_done) {
                  $tco_result = $tco_loop($copy_m);
              };
              return $tco_result;
          };
          var comp = Data_Ord.compare(dictOrd);
          var down = function ($copy_ctx) {
              return function ($copy_m) {
                  var $tco_var_ctx = $copy_ctx;
                  var $tco_done = false;
                  var $tco_result;
                  function $tco_loop(ctx, m) {
                      if (m instanceof Leaf) {
                          $tco_done = true;
                          return Data_Maybe.Nothing.value;
                      };
                      if (m instanceof Two) {
                          var v = comp(k)(m.value1);
                          if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
                          $copy_m = m.value3;
                          return;
                      };
                      if (m instanceof Three) {
                          var leaves = (function () {
                              if (m.value0 instanceof Leaf && (m.value3 instanceof Leaf && m.value6 instanceof Leaf)) {
                                  return true;
                              };
                              return false;
                          })();
                          var v = comp(k)(m.value4);
                          var v3 = comp(k)(m.value1);
                          if (leaves && v3 instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
                          };
                          if (leaves && v instanceof Data_Ordering.EQ) {
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
                          };
                          if (v3 instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value0);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
                          };
                          if (v instanceof Data_Ordering.EQ) {
                              var max = maxNode(m.value3);
                              $tco_done = true;
                              return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
                          };
                          if (v3 instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value0;
                              return;
                          };
                          if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                              $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                              $copy_m = m.value3;
                              return;
                          };
                          $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
                          $copy_m = m.value6;
                          return;
                      };
                      throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [ m.constructor.name ]);
                  };
                  while (!$tco_done) {
                      $tco_result = $tco_loop($tco_var_ctx, $copy_m);
                  };
                  return $tco_result;
              };
          };
          return down(Data_List_Types.Nil.value);
      };
  };
  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
          };
      };
  });
  var traversableMap = new Data_Traversable.Traversable(function () {
      return foldableMap;
  }, function () {
      return functorMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableMap)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              if (v instanceof Leaf) {
                  return Control_Applicative.pure(dictApplicative)(Leaf.value);
              };
              if (v instanceof Two) {
                  return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Two.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3));
              };
              if (v instanceof Three) {
                  return Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Control_Apply.apply(dictApplicative.Apply0())(Data_Functor.map((dictApplicative.Apply0()).Functor0())(Three.create)(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value0)))(Control_Applicative.pure(dictApplicative)(v.value1)))(f(v.value2)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value3)))(Control_Applicative.pure(dictApplicative)(v.value4)))(f(v.value5)))(Data_Traversable.traverse(traversableMap)(dictApplicative)(f)(v.value6));
              };
              throw new Error("Failed pattern match at Data.Map.Internal (line 119, column 1 - line 119, column 47): " + [ f.constructor.name, v.constructor.name ]);
          };
      };
  });
  var foldSubmap = function (dictOrd) {
      return function (dictMonoid) {
          return function (kmin) {
              return function (kmax) {
                  return function (f) {
                      var tooSmall = (function () {
                          if (kmin instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.lessThan(dictOrd)(k)(kmin.value0);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Nothing) {
                              return Data_Function["const"](false);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 319, column 7 - line 323, column 22): " + [ kmin.constructor.name ]);
                      })();
                      var tooLarge = (function () {
                          if (kmax instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.greaterThan(dictOrd)(k)(kmax.value0);
                              };
                          };
                          if (kmax instanceof Data_Maybe.Nothing) {
                              return Data_Function["const"](false);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 326, column 7 - line 330, column 22): " + [ kmax.constructor.name ]);
                      })();
                      var inBounds = (function () {
                          if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k) && Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Just && kmax instanceof Data_Maybe.Nothing) {
                              return function (k) {
                                  return Data_Ord.lessThanOrEq(dictOrd)(kmin.value0)(k);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Just) {
                              return function (k) {
                                  return Data_Ord.lessThanOrEq(dictOrd)(k)(kmax.value0);
                              };
                          };
                          if (kmin instanceof Data_Maybe.Nothing && kmax instanceof Data_Maybe.Nothing) {
                              return Data_Function["const"](true);
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 333, column 7 - line 341, column 21): " + [ kmin.constructor.name, kmax.constructor.name ]);
                      })();
                      var go = function (v) {
                          if (v instanceof Leaf) {
                              return Data_Monoid.mempty(dictMonoid);
                          };
                          if (v instanceof Two) {
                              return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $633 = tooSmall(v.value1);
                                  if ($633) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value0);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $634 = inBounds(v.value1);
                                  if ($634) {
                                      return f(v.value1)(v.value2);
                                  };
                                  return Data_Monoid.mempty(dictMonoid);
                              })())((function () {
                                  var $635 = tooLarge(v.value1);
                                  if ($635) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value3);
                              })()));
                          };
                          if (v instanceof Three) {
                              return Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $640 = tooSmall(v.value1);
                                  if ($640) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value0);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $641 = inBounds(v.value1);
                                  if ($641) {
                                      return f(v.value1)(v.value2);
                                  };
                                  return Data_Monoid.mempty(dictMonoid);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $642 = tooSmall(v.value4) || tooLarge(v.value1);
                                  if ($642) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value3);
                              })())(Data_Semigroup.append(dictMonoid.Semigroup0())((function () {
                                  var $643 = inBounds(v.value4);
                                  if ($643) {
                                      return f(v.value4)(v.value5);
                                  };
                                  return Data_Monoid.mempty(dictMonoid);
                              })())((function () {
                                  var $644 = tooLarge(v.value4);
                                  if ($644) {
                                      return Data_Monoid.mempty(dictMonoid);
                                  };
                                  return go(v.value6);
                              })()))));
                          };
                          throw new Error("Failed pattern match at Data.Map.Internal (line 359, column 10 - line 371, column 54): " + [ v.constructor.name ]);
                      };
                      return go;
                  };
              };
          };
      };
  };
  var empty = Leaf.value;
  var $$delete = function (dictOrd) {
      return function (k) {
          return function (m) {
              return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
          };
      };
  };
  var asList = Control_Category.identity(Control_Category.categoryFn);
  var foldableWithIndexMap = new Data_FoldableWithIndex.FoldableWithIndex(function () {
      return foldableMap;
  }, function (dictMonoid) {
      return function (f) {
          return function (m) {
              return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(Data_Tuple.uncurry(f))(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldl(Data_List_Types.foldableList)(function ($760) {
                  return Data_Tuple.uncurry(Data_Function.flip(f)($760));
              })(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List_Types.foldableList)(Data_Tuple.uncurry(f))(z)(asList(toUnfoldable(Data_List_Types.unfoldableList)(m)));
          };
      };
  });
  var alter = function (dictOrd) {
      return function (f) {
          return function (k) {
              return function (m) {
                  var v = f(lookup(dictOrd)(k)(m));
                  if (v instanceof Data_Maybe.Nothing) {
                      return $$delete(dictOrd)(k)(m);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return insert(dictOrd)(k)(v.value0)(m);
                  };
                  throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [ v.constructor.name ]);
              };
          };
      };
  };
  var unionWith = function (dictOrd) {
      return function (f) {
          return function (m1) {
              return function (m2) {
                  var go = function (m) {
                      return function (v) {
                          return alter(dictOrd)(function ($763) {
                              return Data_Maybe.Just.create(Data_Maybe.maybe(v.value1)(f(v.value1))($763));
                          })(v.value0)(m);
                      };
                  };
                  return Data_Foldable.foldl(Data_List_Types.foldableList)(go)(m2)(toUnfoldable(Data_List_Types.unfoldableList)(m1));
              };
          };
      };
  };
  var union = function (dictOrd) {
      return unionWith(dictOrd)(Data_Function["const"]);
  };
  var semigroupMap = function (dictOrd) {
      return new Data_Semigroup.Semigroup(union(dictOrd));
  };
  var monoidMap = function (dictOrd) {
      return new Data_Monoid.Monoid(function () {
          return semigroupMap(dictOrd);
      }, empty);
  };
  exports["empty"] = empty;
  exports["singleton"] = singleton;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["foldSubmap"] = foldSubmap;
  exports["toUnfoldable"] = toUnfoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["values"] = values;
  exports["union"] = union;
  exports["unionWith"] = unionWith;
  exports["semigroupMap"] = semigroupMap;
  exports["monoidMap"] = monoidMap;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
  exports["foldableWithIndexMap"] = foldableWithIndexMap;
  exports["traversableMap"] = traversableMap;
})(PS);
(function(exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS);
(function(exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator =
    typeof Symbol !== "undefined" &&
    Symbol != null &&
    typeof Symbol.iterator !== "undefined" &&
    typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt
      ? function (str) { return str.codePointAt(0); }
      : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();
          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }
          return accum;
        };
      }
      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }
      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});
(function(exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];                                                         
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var stripPrefix = function (v) {
      return function (str) {
          var v1 = indexOf(v)(str);
          if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
              return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
          };
          return Data_Maybe.Nothing.value;
      };
  };
  var contains = function (pat) {
      return function ($16) {
          return Data_Maybe.isJust(indexOf(pat)($16));
      };
  };
  exports["stripPrefix"] = stripPrefix;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);
(function(exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var unsurrogate = function (lead) {
      return function (trail) {
          return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
      };
  }; 
  var isTrail = function (cu) {
      return 56320 <= cu && cu <= 57343;
  };
  var isLead = function (cu) {
      return 55296 <= cu && cu <= 56319;
  };
  var uncons = function (s) {
      var v = Data_String_CodeUnits.length(s);
      if (v === 0) {
          return Data_Maybe.Nothing.value;
      };
      if (v === 1) {
          return new Data_Maybe.Just({
              head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
              tail: ""
          });
      };
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $21 = isLead(cu0) && isTrail(cu1);
      if ($21) {
          return new Data_Maybe.Just({
              head: unsurrogate(cu0)(cu1),
              tail: Data_String_CodeUnits.drop(2)(s)
          });
      };
      return new Data_Maybe.Just({
          head: cu0,
          tail: Data_String_CodeUnits.drop(1)(s)
      });
  };
  var unconsButWithTuple = function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
          return new Data_Tuple.Tuple(v.head, v.tail);
      })(uncons(s));
  };
  var toCodePointArrayFallback = function (s) {
      return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };
  var unsafeCodePointAt0Fallback = function (s) {
      var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
      var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;
      if ($25) {
          var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
          var $26 = isTrail(cu1);
          if ($26) {
              return unsurrogate(cu0)(cu1);
          };
          return cu0;
      };
      return cu0;
  };
  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);
  var length = function ($52) {
      return Data_Array.length(toCodePointArray($52));
  };
  var indexOf = function (p) {
      return function (s) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
              return length(Data_String_CodeUnits.take(i)(s));
          })(Data_String_CodeUnits.indexOf(p)(s));
      };
  };
  var fromCharCode = function ($53) {
      return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($53));
  };
  var singletonFallback = function (v) {
      if (v <= 65535) {
          return fromCharCode(v);
      };
      var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
      var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
      return fromCharCode(lead) + fromCharCode(trail);
  };                                                                          
  var singleton = $foreign["_singleton"](singletonFallback);
  var takeFallback = function (n) {
      return function (v) {
          if (n < 1) {
              return "";
          };
          var v1 = uncons(v);
          if (v1 instanceof Data_Maybe.Just) {
              return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
          };
          return v;
      };
  };
  var take = $foreign["_take"](takeFallback);
  var splitAt = function (i) {
      return function (s) {
          var before = take(i)(s);
          return {
              before: before,
              after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
          };
      };
  }; 
  var drop = function (n) {
      return function (s) {
          return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
      };
  };
  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];                 
  var $$null = function (s) {
      return s === "";
  };
  exports["null"] = $$null;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Time.Duration"] = $PS["Data.Time.Duration"] || {};
  var exports = $PS["Data.Time.Duration"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var semigroupMilliseconds = new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
          return v + v1;
      };
  });     
  var monoidMilliseconds = new Data_Monoid.Monoid(function () {
      return semigroupMilliseconds;
  }, 0.0);
  exports["semigroupMilliseconds"] = semigroupMilliseconds;
  exports["monoidMilliseconds"] = monoidMilliseconds;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Variant"] = $PS["Data.Variant"] || {};
  var exports = $PS["Data.Variant"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var onMatch = function (dictRowToList) {
      return function (dictVariantMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return function (k) {
                      return function (v) {
                          if (Record_Unsafe.unsafeHas(v.type)(r)) {
                              return Record_Unsafe.unsafeGet(v.type)(r)(v.value);
                          };
                          return k(v);
                      };
                  };
              };
          };
      };
  };
  var inj = function (dictCons) {
      return function (dictIsSymbol) {
          return function (p) {
              return function (value) {
                  return {
                      type: Data_Symbol.reflectSymbol(dictIsSymbol)(p),
                      value: value
                  };
              };
          };
      };
  };
  var expand = function (dictUnion) {
      return Unsafe_Coerce.unsafeCoerce;
  };
  var case_ = function (r) {
      return Partial_Unsafe.unsafeCrashWith("Data.Variant: pattern match failure [" + (r.type + "]"));
  };
  var match = function (dictRowToList) {
      return function (dictVariantMatchCases) {
          return function (dictUnion) {
              return function (r) {
                  return onMatch(dictRowToList)(dictVariantMatchCases)(dictUnion)(r)(case_);
              };
          };
      };
  };
  exports["inj"] = inj;
  exports["onMatch"] = onMatch;
  exports["case_"] = case_;
  exports["match"] = match;
  exports["expand"] = expand;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Variant.Internal"] = $PS["Data.Variant.Internal"] || {};
  var exports = $PS["Data.Variant.Internal"];
  var VariantMatchCases = {};
  var VariantFMatchCases = {};
  var variantMatchNil = VariantMatchCases;
  var variantMatchCons = function (dictVariantMatchCases) {
      return function (dictCons) {
          return function (dictTypeEquals) {
              return VariantMatchCases;
          };
      };
  };
  var variantFMatchNil = VariantFMatchCases;
  var variantFMatchCons = function (dictVariantFMatchCases) {
      return function (dictCons) {
          return function (dictTypeEquals) {
              return VariantFMatchCases;
          };
      };
  };
  exports["VariantMatchCases"] = VariantMatchCases;
  exports["VariantFMatchCases"] = VariantFMatchCases;
  exports["variantMatchCons"] = variantMatchCons;
  exports["variantMatchNil"] = variantMatchNil;
  exports["variantFMatchCons"] = variantFMatchCons;
  exports["variantFMatchNil"] = variantFMatchNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Data.Void"] = $PS["Data.Void"] || {};
  var exports = $PS["Data.Void"];
  var absurd = function (a) {
      var spin = function ($copy_v) {
          var $tco_result;
          function $tco_loop(v) {
              $copy_v = v;
              return;
          };
          while (!false) {
              $tco_result = $tco_loop($copy_v);
          };
          return $tco_result;
      };
      return spin(a);
  };
  exports["absurd"] = absurd;
})(PS);
(function(exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {

    function MutableQueue () {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell (queue, value) {
      this.queue = queue;
      this.value = value;
      this.next  = null;
      this.prev  = null;
    }

    function AVar (value) {
      this.draining = false;
      this.error    = null;
      this.value    = value;
      this.takes    = new MutableQueue();
      this.reads    = new MutableQueue();
      this.puts     = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast (queue, value) {
      var cell = new MutableCell(queue, value);
      switch (queue.size) {
      case 0:
        queue.head = cell;
        break;
      case 1:
        cell.prev = queue.head;
        queue.head.next = cell;
        queue.last = cell;
        break;
      default:
        cell.prev = queue.last;
        queue.last.next = cell;
        queue.last = cell;
      }
      queue.size++;
      return cell;
    }

    function takeLast (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.last;
        queue.head.next = null;
        queue.last = null;
        break;
      default:
        cell = queue.last;
        queue.last = cell.prev;
        queue.last.next = null;
      }
      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead (queue) {
      var cell;
      switch (queue.size) {
      case 0:
        return null;
      case 1:
        cell = queue.head;
        queue.head = null;
        break;
      case 2:
        cell = queue.head;
        queue.last.prev = null;
        queue.head = queue.last;
        queue.last = null;
        break;
      default:
        cell = queue.head;
        queue.head = cell.next;
        queue.head.prev = null;
      }
      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell (cell) {
      if (cell.queue === null) {
        return;
      }
      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }
      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }
      if (cell.prev) {
        cell.prev.next = cell.next;
      }
      if (cell.next) {
        cell.next.prev = cell.prev;
      }
      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next  = null;
      cell.prev  = null;
    }

    function drainVar (util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;

      avar.draining = true;

      while (1) { // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);
          while (p = takeHead(ps)) { // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }
          while (r = takeHead(rs)) { // eslint-disable-line no-cond-assign
            runEff(r(value));
          }
          while (t = takeHead(ts)) { // eslint-disable-line no-cond-assign
            runEff(t(value));
          }
          break;
        }

        // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.
        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts);
          // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.
          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }
          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        }

        // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.
        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }
      avar.draining = false;
    }

    AVar.EMPTY      = EMPTY;
    AVar.putLast    = putLast;
    AVar.takeLast   = takeLast;
    AVar.takeHead   = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar   = drainVar;

    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, { cb: cb, value: value });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.AVar"] = $PS["Effect.AVar"] || {};
  var exports = $PS["Effect.AVar"];
  var $foreign = $PS["Effect.AVar"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];                
  var Killed = (function () {
      function Killed(value0) {
          this.value0 = value0;
      };
      Killed.create = function (value0) {
          return new Killed(value0);
      };
      return Killed;
  })();
  var Filled = (function () {
      function Filled(value0) {
          this.value0 = value0;
      };
      Filled.create = function (value0) {
          return new Filled(value0);
      };
      return Filled;
  })();
  var Empty = (function () {
      function Empty() {

      };
      Empty.value = new Empty();
      return Empty;
  })();
  var ffiUtil = {
      left: Data_Either.Left.create,
      right: Data_Either.Right.create,
      nothing: Data_Maybe.Nothing.value,
      just: Data_Maybe.Just.create,
      killed: Killed.create,
      filled: Filled.create,
      empty: Empty.value
  };
  var kill = function (err) {
      return function (avar) {
          return $foreign["_killVar"](ffiUtil, err, avar);
      };
  };
  var put = function (value) {
      return function (avar) {
          return function (cb) {
              return $foreign["_putVar"](ffiUtil, value, avar, cb);
          };
      };
  };
  var take = function (avar) {
      return function (cb) {
          return $foreign["_takeVar"](ffiUtil, avar, cb);
      };
  };
  exports["Killed"] = Killed;
  exports["Filled"] = Filled;
  exports["Empty"] = Empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
  exports["empty"] = $foreign.empty;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Aff.AVar"] = $PS["Effect.Aff.AVar"] || {};
  var exports = $PS["Effect.Aff.AVar"];
  var Effect_AVar = $PS["Effect.AVar"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var take = function (avar) {
      return Effect_Aff.makeAff(function (k) {
          return function __do() {
              var v = Effect_AVar.take(avar)(k)();
              return Effect_Aff.effectCanceler(v);
          };
      });
  };
  var put = function (value) {
      return function (avar) {
          return Effect_Aff.makeAff(function (k) {
              return function __do() {
                  var v = Effect_AVar.put(value)(avar)(k)();
                  return Effect_Aff.effectCanceler(v);
              };
          });
      };
  };
  var kill = function (error) {
      return function ($11) {
          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.kill(error)($11));
      };
  };
  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect_Aff = $PS["Effect.Aff"];                
  var MonadAff = function (MonadEffect0, liftAff) {
      this.MonadEffect0 = MonadEffect0;
      this.liftAff = liftAff;
  };
  var monadAffAff = new MonadAff(function () {
      return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));
  var liftAff = function (dict) {
      return dict.liftAff;
  };
  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
})(PS);
(function(exports) {
  "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  var Data_Show = $PS["Data.Show"];
  var logShow = function (dictShow) {
      return function (a) {
          return $foreign.log(Data_Show.show(dictShow)(a));
      };
  };
  exports["logShow"] = logShow;
  exports["warn"] = $foreign.warn;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Class.Console"] = $PS["Effect.Class.Console"] || {};
  var exports = $PS["Effect.Class.Console"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var logShow = function (dictMonadEffect) {
      return function (dictShow) {
          return function ($18) {
              return Effect_Class.liftEffect(dictMonadEffect)(Effect_Console.logShow(dictShow)($18));
          };
      };
  };
  exports["logShow"] = logShow;
})(PS);
(function(exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];
  var $$throw = function ($1) {
      return $foreign.throwException($foreign.error($1));
  };
  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Data.FormFieldResult"] = $PS["Formless.Data.FormFieldResult"] || {};
  var exports = $PS["Formless.Data.FormFieldResult"];
  var Data_Either = $PS["Data.Either"];
  var Data_Lens_Prism = $PS["Data.Lens.Prism"];
  var Data_Maybe = $PS["Data.Maybe"];                  
  var NotValidated = (function () {
      function NotValidated() {

      };
      NotValidated.value = new NotValidated();
      return NotValidated;
  })();
  var Validating = (function () {
      function Validating() {

      };
      Validating.value = new Validating();
      return Validating;
  })();
  var $$Error = (function () {
      function $$Error(value0) {
          this.value0 = value0;
      };
      $$Error.create = function (value0) {
          return new $$Error(value0);
      };
      return $$Error;
  })();
  var Success = (function () {
      function Success(value0) {
          this.value0 = value0;
      };
      Success.create = function (value0) {
          return new Success(value0);
      };
      return Success;
  })();
  var toMaybe = function (v) {
      if (v instanceof Success) {
          return new Data_Maybe.Just(v.value0);
      };
      return Data_Maybe.Nothing.value;
  }; 
  var fromEither = function (v) {
      if (v instanceof Data_Either.Left) {
          return new $$Error(v.value0);
      };
      if (v instanceof Data_Either.Right) {
          return new Success(v.value0);
      };
      throw new Error("Failed pattern match at Formless.Data.FormFieldResult (line 44, column 14 - line 46, column 23): " + [ v.constructor.name ]);
  };
  var _Error = function (dictChoice) {
      return Data_Lens_Prism["prism'"]($$Error.create)(function (v) {
          if (v instanceof $$Error) {
              return new Data_Maybe.Just(v.value0);
          };
          return Data_Maybe.Nothing.value;
      })(dictChoice);
  };
  exports["NotValidated"] = NotValidated;
  exports["Validating"] = Validating;
  exports["Error"] = $$Error;
  exports["Success"] = Success;
  exports["fromEither"] = fromEither;
  exports["toMaybe"] = toMaybe;
  exports["_Error"] = _Error;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Validation"] = $PS["Formless.Validation"] || {};
  var exports = $PS["Formless.Validation"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];                                  
  var Validation = function (x) {
      return x;
  };
  var newtypeValidation = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Validation);
  var runValidation = function (dictMonad) {
      return Data_Newtype.unwrap(newtypeValidation);
  };
  var semigroupoidValidation = function (dictMonad) {
      return new Control_Semigroupoid.Semigroupoid(function (v1) {
          return function (v0) {
              return function (form) {
                  return function (i) {
                      return Control_Bind.bind(dictMonad.Bind1())(Data_Newtype.unwrap(newtypeValidation)(v0)(form)(i))(function (v) {
                          return Data_Either.either(function ($49) {
                              return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($49));
                          })(Data_Newtype.unwrap(newtypeValidation)(v1)(form))(v);
                      });
                  };
              };
          };
      });
  };
  var hoistFn_ = function (dictMonad) {
      return function (f) {
          return Validation(Data_Function["const"](function ($50) {
              return Control_Applicative.pure(dictMonad.Applicative0())(Control_Applicative.pure(Data_Either.applicativeEither)(f($50)));
          }));
      };
  };
  var noValidation = function (dictMonad) {
      return hoistFn_(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };
  var hoistFnE_ = function (dictMonad) {
      return function (f) {
          return Validation(Data_Function["const"](function ($52) {
              return Control_Applicative.pure(dictMonad.Applicative0())(f($52));
          }));
      };
  };
  var hoistFnE = function (dictMonad) {
      return function (f) {
          return Validation(function (form) {
              return function ($53) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(f(form)($53));
              };
          });
      };
  };
  var functorValidation = function (dictFunctor) {
      return new Data_Functor.Functor(function (f) {
          return function (m) {
              return Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f))))(m);
          };
      });
  };
  exports["Validation"] = Validation;
  exports["runValidation"] = runValidation;
  exports["hoistFn_"] = hoistFn_;
  exports["hoistFnE"] = hoistFnE;
  exports["hoistFnE_"] = hoistFnE_;
  exports["noValidation"] = noValidation;
  exports["newtypeValidation"] = newtypeValidation;
  exports["functorValidation"] = functorValidation;
  exports["semigroupoidValidation"] = semigroupoidValidation;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.App.Validation"] = $PS["Example.App.Validation"] || {};
  var exports = $PS["Example.App.Validation"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Lens_Fold = $PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Validation = $PS["Formless.Validation"];
  var EmptyField = (function () {
      function EmptyField() {

      };
      EmptyField.value = new EmptyField();
      return EmptyField;
  })();
  var InvalidEmail = (function () {
      function InvalidEmail() {

      };
      InvalidEmail.value = new InvalidEmail();
      return InvalidEmail;
  })();
  var EmailInUse = (function () {
      function EmailInUse() {

      };
      EmailInUse.value = new EmailInUse();
      return EmailInUse;
  })();
  var TooShort = (function () {
      function TooShort(value0) {
          this.value0 = value0;
      };
      TooShort.create = function (value0) {
          return new TooShort(value0);
      };
      return TooShort;
  })();
  var TooLong = (function () {
      function TooLong(value0) {
          this.value0 = value0;
      };
      TooLong.create = function (value0) {
          return new TooLong(value0);
      };
      return TooLong;
  })();
  var InvalidInt = (function () {
      function InvalidInt(value0) {
          this.value0 = value0;
      };
      InvalidInt.create = function (value0) {
          return new InvalidInt(value0);
      };
      return InvalidInt;
  })();
  var NotEqual = (function () {
      function NotEqual(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      NotEqual.create = function (value0) {
          return function (value1) {
              return new NotEqual(value0, value1);
          };
      };
      return NotEqual;
  })();
  var NotEnoughMoney = (function () {
      function NotEnoughMoney() {

      };
      NotEnoughMoney.value = new NotEnoughMoney();
      return NotEnoughMoney;
  })();
  var ToText = function (toText) {
      this.toText = toText;
  };
  var toTextString = new ToText(Control_Category.identity(Control_Category.categoryFn));
  var toTextFieldError = new ToText(function (v) {
      if (v instanceof EmptyField) {
          return "This field is required.";
      };
      if (v instanceof InvalidEmail) {
          return "That email is not valid.";
      };
      if (v instanceof EmailInUse) {
          return "That email is already being used.";
      };
      if (v instanceof TooShort) {
          return "You must enter at least " + (Data_Show.show(Data_Show.showInt)(v.value0) + " characters.");
      };
      if (v instanceof TooLong) {
          return "You must enter less than " + (Data_Show.show(Data_Show.showInt)(v.value0) + " characters.");
      };
      if (v instanceof InvalidInt) {
          return "Could not parse \"" + (v.value0 + "\" to a valid integer.");
      };
      if (v instanceof NotEqual) {
          return "This field contains \"" + (v.value1 + ("\" but must be equal to \"" + (v.value0 + "\" to validate.")));
      };
      if (v instanceof NotEnoughMoney) {
          return "You don't have that much money.";
      };
      throw new Error("Failed pattern match at Example.App.Validation (line 34, column 1 - line 34, column 47): " + [ v.constructor.name ]);
  });
  var toText = function (dict) {
      return dict.toText;
  };
  var strIsInt = function (dictMonad) {
      return Formless_Validation.hoistFnE_(dictMonad)(function (str) {
          return Data_Maybe.maybe(Data_Either.Left.create(new InvalidInt(str)))(Data_Either.Right.create)(Data_Int.fromString(str));
      });
  };                                  
  var showError = function (dictToText) {
      return function ($86) {
          return Data_Functor.map(Data_Maybe.functorMaybe)(toText(dictToText))(Data_Lens_Fold.preview(Formless_Data_FormFieldResult["_Error"](Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)))($86));
      };
  };
  var showEmail = Data_Show.showString;
  var nonEmptyStr = function (dictMonad) {
      return Formless_Validation.hoistFnE_(dictMonad)(function (str) {
          var $32 = Data_String_Common["null"](str);
          if ($32) {
              return new Data_Either.Left(EmptyField.value);
          };
          return new Data_Either.Right(str);
      });
  };
  var nonEmptyArray = function (dictMonad) {
      return Formless_Validation.hoistFnE_(dictMonad)(function (arr) {
          var $33 = Data_Foldable.length(Data_Foldable.foldableArray)(Data_Semiring.semiringInt)(arr) > 0;
          if ($33) {
              return new Data_Either.Right(arr);
          };
          return new Data_Either.Left(EmptyField.value);
      });
  };        
  var minLength = function (dictMonad) {
      return function (n) {
          return Formless_Validation.hoistFnE_(dictMonad)(function (str) {
              var n$prime = Data_String_CodePoints.length(str);
              var $36 = n$prime < n;
              if ($36) {
                  return new Data_Either.Left(new TooShort(n));
              };
              return new Data_Either.Right(str);
          });
      };
  };           
  var exists = function (dictMonad) {
      return Formless_Validation.hoistFnE_(dictMonad)(Data_Maybe.maybe(new Data_Either.Left(EmptyField.value))(Data_Either.Right.create));
  };
  var eqEmail = Data_Eq.eqString;
  var enoughMoney = function (dictMonadAff) {
      return function (v) {
          return function (i) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.delay(5000.0)))(function (v1) {
                  return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())((function () {
                      var $82 = i > 1000;
                      if ($82) {
                          return new Data_Either.Left(NotEnoughMoney.value);
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(i);
                  })());
              });
          };
      };
  };
  var emailIsUsed = function (dictMonadAff) {
      return function (v) {
          return function (v1) {
              return Control_Bind.bind(((dictMonadAff.MonadEffect0()).Monad0()).Bind1())(Effect_Aff_Class.liftAff(dictMonadAff)(Effect_Aff.delay(1000.0)))(function (v2) {
                  return Control_Applicative.pure(((dictMonadAff.MonadEffect0()).Monad0()).Applicative0())((function () {
                      var $84 = Data_String_CodeUnits.contains("t")(v1);
                      if ($84) {
                          return new Data_Either.Left(EmailInUse.value);
                      };
                      return Control_Applicative.pure(Data_Either.applicativeEither)(v1);
                  })());
              });
          };
      };
  };
  var emailFormat = function (dictMonad) {
      return Formless_Validation.hoistFnE_(dictMonad)(function (str) {
          var $85 = Data_String_CodeUnits.contains("@")(str);
          if ($85) {
              return Control_Applicative.pure(Data_Either.applicativeEither)(str);
          };
          return new Data_Either.Left(InvalidEmail.value);
      });
  };
  exports["toText"] = toText;
  exports["EmptyField"] = EmptyField;
  exports["InvalidEmail"] = InvalidEmail;
  exports["EmailInUse"] = EmailInUse;
  exports["TooShort"] = TooShort;
  exports["TooLong"] = TooLong;
  exports["InvalidInt"] = InvalidInt;
  exports["NotEqual"] = NotEqual;
  exports["NotEnoughMoney"] = NotEnoughMoney;
  exports["showError"] = showError;
  exports["ToText"] = ToText;
  exports["emailFormat"] = emailFormat;
  exports["minLength"] = minLength;
  exports["exists"] = exists;
  exports["strIsInt"] = strIsInt;
  exports["nonEmptyArray"] = nonEmptyArray;
  exports["nonEmptyStr"] = nonEmptyStr;
  exports["emailIsUsed"] = emailIsUsed;
  exports["enoughMoney"] = enoughMoney;
  exports["toTextFieldError"] = toTextFieldError;
  exports["eqEmail"] = eqEmail;
  exports["showEmail"] = showEmail;
  exports["toTextString"] = toTextString;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Class.Initial"] = $PS["Formless.Class.Initial"] || {};
  var exports = $PS["Formless.Class.Initial"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];              
  var Initial = function (initial) {
      this.initial = initial;
  };                                                                        
  var initialString = new Initial(Data_Monoid.mempty(Data_Monoid.monoidString));
  var initialMaybe = new Initial(Data_Maybe.Nothing.value);
  var initialBoolean = new Initial(false);
  var initialArray = new Initial(Data_Monoid.mempty(Data_Monoid.monoidArray));
  var initial = function (dict) {
      return dict.initial;
  };
  exports["initial"] = initial;
  exports["Initial"] = Initial;
  exports["initialBoolean"] = initialBoolean;
  exports["initialString"] = initialString;
  exports["initialMaybe"] = initialMaybe;
  exports["initialArray"] = initialArray;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Types.Form"] = $PS["Formless.Types.Form"] || {};
  var exports = $PS["Formless.Types.Form"];
  var Data_Newtype = $PS["Data.Newtype"];                                                  
  var U = (function () {
      function U() {

      };
      U.value = new U();
      return U;
  })();
  var OutputField = function (x) {
      return x;
  };
  var InputFunction = function (x) {
      return x;
  };
  var InputField = function (x) {
      return x;
  };
  var FormProxy = (function () {
      function FormProxy() {

      };
      FormProxy.value = new FormProxy();
      return FormProxy;
  })();
  var FormField = function (x) {
      return x;
  };
  var newtypeOutputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OutputField);
  var newtypeInputFunction = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InputFunction);
  var newtypeInputField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InputField);
  var newtypeFormField = new Data_Newtype.Newtype(function (n) {
      return n;
  }, FormField);
  var eqInputField = function (dictEq) {
      return dictEq;
  };
  exports["FormProxy"] = FormProxy;
  exports["InputField"] = InputField;
  exports["OutputField"] = OutputField;
  exports["U"] = U;
  exports["InputFunction"] = InputFunction;
  exports["FormField"] = FormField;
  exports["newtypeInputField"] = newtypeInputField;
  exports["eqInputField"] = eqInputField;
  exports["newtypeOutputField"] = newtypeOutputField;
  exports["newtypeInputFunction"] = newtypeInputFunction;
  exports["newtypeFormField"] = newtypeFormField;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Action"] = $PS["Formless.Action"] || {};
  var exports = $PS["Formless.Action"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];                
  var validateAll = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "validateAll";
  }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
  var validate = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                      return "validate";
                  }))(Data_Symbol.SProxy.value)(Data_Newtype.wrap(dictNewtype)(Data_Variant.inj(dictCons)(dictIsSymbol)(sym)(Formless_Types_Form.U.value)));
              };
          };
      };
  };
  var submit = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "submit";
  }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
  var setValidate = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (i) {
                      return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                          return "modifyValidate";
                      }))(Data_Symbol.SProxy.value)(new Data_Tuple.Tuple(Data_Maybe.Nothing.value, Data_Newtype.wrap(dictNewtype)(Data_Variant.inj(dictCons)(dictIsSymbol)(sym)(Data_Newtype.wrap(Formless_Types_Form.newtypeInputFunction)(Data_Function["const"](i))))));
                  };
              };
          };
      };
  };
  var set = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (i) {
                      return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                          return "modify";
                      }))(Data_Symbol.SProxy.value)(Data_Newtype.wrap(dictNewtype)(Data_Variant.inj(dictCons)(dictIsSymbol)(sym)(Data_Newtype.wrap(Formless_Types_Form.newtypeInputFunction)(Data_Function["const"](i)))));
                  };
              };
          };
      };
  };
  var resetAll = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "resetAll";
  }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
  var reset = function (dictIsSymbol) {
      return function (dictInitial) {
          return function (dictNewtype) {
              return function (dictCons) {
                  return function (sym) {
                      return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                          return "reset";
                      }))(Data_Symbol.SProxy.value)(Data_Newtype.wrap(dictNewtype)(Data_Variant.inj(dictCons)(dictIsSymbol)(sym)(Data_Newtype.wrap(Formless_Types_Form.newtypeInputFunction)(Data_Function["const"](Formless_Class_Initial.initial(dictInitial))))));
                  };
              };
          };
      };
  };
  var modify = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (f) {
                      return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                          return "modify";
                      }))(Data_Symbol.SProxy.value)(Data_Newtype.wrap(dictNewtype)(Data_Variant.inj(dictCons)(dictIsSymbol)(sym)(Data_Newtype.wrap(Formless_Types_Form.newtypeInputFunction)(f))));
                  };
              };
          };
      };
  };
  var loadForm = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "loadForm";
  }))(Data_Symbol.SProxy.value);
  var injAction = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
      return "userAction";
  }))(Data_Symbol.SProxy.value);
  var asyncSetValidate = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (ms) {
                  return function (sym) {
                      return function (i) {
                          return Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                              return "modifyValidate";
                          }))(Data_Symbol.SProxy.value)(new Data_Tuple.Tuple(new Data_Maybe.Just(ms), Data_Newtype.wrap(dictNewtype)(Data_Variant.inj(dictCons)(dictIsSymbol)(sym)(Data_Newtype.wrap(Formless_Types_Form.newtypeInputFunction)(Data_Function["const"](i))))));
                      };
                  };
              };
          };
      };
  };
  exports["injAction"] = injAction;
  exports["set"] = set;
  exports["modify"] = modify;
  exports["validate"] = validate;
  exports["setValidate"] = setValidate;
  exports["asyncSetValidate"] = asyncSetValidate;
  exports["reset"] = reset;
  exports["validateAll"] = validateAll;
  exports["resetAll"] = resetAll;
  exports["submit"] = submit;
  exports["loadForm"] = loadForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Retrieve"] = $PS["Formless.Retrieve"] || {};
  var exports = $PS["Formless.Retrieve"];
  var Data_Lens_Fold = $PS["Data.Lens.Fold"];
  var Data_Lens_Getter = $PS["Data.Lens.Getter"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Record = $PS["Data.Lens.Record"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var _Field = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($84) {
                          return Data_Lens_Iso_Newtype["_Newtype"](dictNewtype)(dictNewtype)(dictStrong.Profunctor0())(Data_Lens_Record.prop(dictIsSymbol)(dictCons)(dictCons)(sym)(dictStrong)(Data_Lens_Iso_Newtype["_Newtype"](Formless_Types_Form.newtypeFormField)(Formless_Types_Form.newtypeFormField)(dictStrong.Profunctor0())($84)));
                      };
                  };
              };
          };
      };
  };
  var _FieldInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($85) {
                          return _Field(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictStrong)(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                              return "input";
                          }))()()(Data_Symbol.SProxy.value)(dictStrong)($85));
                      };
                  };
              };
          };
      };
  };
  var getInput = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(_FieldInput(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  var _FieldResult = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictStrong) {
                      return function ($86) {
                          return _Field(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictStrong)(Data_Lens_Record.prop(new Data_Symbol.IsSymbol(function () {
                              return "result";
                          }))()()(Data_Symbol.SProxy.value)(dictStrong)($86));
                      };
                  };
              };
          };
      };
  };
  var _FieldError = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return function (dictWander) {
                      return function ($87) {
                          return _FieldResult(dictIsSymbol)(dictNewtype)(dictCons)(sym)(dictWander.Strong0())(Formless_Data_FormFieldResult["_Error"](dictWander.Choice1())($87));
                      };
                  };
              };
          };
      };
  };
  var getError = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Fold.preview(_FieldError(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Lens_Internal_Forget.wanderForget(Data_Maybe_First.monoidFirst)));
              };
          };
      };
  };
  var getResult = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(_FieldResult(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  var getField = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictCons) {
              return function (sym) {
                  return Data_Lens_Getter.view(_Field(dictIsSymbol)(dictNewtype)(dictCons)(sym)(Data_Lens_Internal_Forget.strongForget));
              };
          };
      };
  };
  exports["getField"] = getField;
  exports["getInput"] = getInput;
  exports["getResult"] = getResult;
  exports["getError"] = getError;
  exports["_Field"] = _Field;
  exports["_FieldInput"] = _FieldInput;
  exports["_FieldResult"] = _FieldResult;
  exports["_FieldError"] = _FieldError;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return typeof value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var fail = function ($107) {
      return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
          };
          if (Data_Boolean.otherwise) {
              return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
          };
          throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [ tag.constructor.name, value.constructor.name ]);
      };
  };
  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS);
(function(exports) {
  "use strict";

  exports._copyST = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f();
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;
          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }
          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports.toArrayWithKey = toArrayWithKey;

  exports.keys = Object.keys || toArrayWithKey(function (k) {
    return function () { return k; };
  });
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});
(function(exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var toUnfoldable = function (dictUnfoldable) {
      return function ($45) {
          return Data_Array.toUnfoldable(dictUnfoldable)($foreign.toArrayWithKey(Data_Tuple.Tuple.create)($45));
      };
  };                                                             
  var thawST = $foreign["_copyST"];
  var singleton = function (k) {
      return function (v) {
          return $foreign.runST(Control_Bind.bindFlipped(Control_Monad_ST_Internal.bindST)(Foreign_Object_ST.poke(k)(v))(Foreign_Object_ST["new"]));
      };
  };
  var mutate = function (f) {
      return function (m) {
          return $foreign.runST(function __do() {
              var v = thawST(m)();
              var v1 = f(v)();
              return v;
          });
      };
  };
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var fromFoldable = function (dictFoldable) {
      return function (l) {
          return $foreign.runST(function __do() {
              var v = Foreign_Object_ST["new"]();
              Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
                  return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v1.value0)(v1.value1)(v));
              })();
              return v;
          });
      };
  };
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign["_foldM"](Control_Bind.bind(dictMonad.Bind1()))(f)(Control_Applicative.pure(dictMonad.Applicative0())(z));
          };
      };
  };
  var semigroupObject = function (dictSemigroup) {
      return new Data_Semigroup.Semigroup(function (m1) {
          return function (m2) {
              return mutate(function (s1) {
                  return foldM(Control_Monad_ST_Internal.monadST)(function (s2) {
                      return function (k) {
                          return function (v2) {
                              return Foreign_Object_ST.poke(k)($foreign["_lookup"](v2, function (v1) {
                                  return Data_Semigroup.append(dictSemigroup)(v1)(v2);
                              }, k, m2))(s2);
                          };
                      };
                  })(s1)(m1);
              })(m2);
          };
      });
  };
  var monoidObject = function (dictSemigroup) {
      return new Data_Monoid.Monoid(function () {
          return semigroupObject(dictSemigroup);
      }, $foreign.empty);
  };
  exports["singleton"] = singleton;
  exports["lookup"] = lookup;
  exports["toUnfoldable"] = toUnfoldable;
  exports["fromFoldable"] = fromFoldable;
  exports["foldM"] = foldM;
  exports["thawST"] = thawST;
  exports["semigroupObject"] = semigroupObject;
  exports["monoidObject"] = monoidObject;
  exports["empty"] = $foreign.empty;
  exports["keys"] = $foreign.keys;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var Step = (function () {
      function Step(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Step.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Step(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Step;
  })();
  var unStep = Unsafe_Coerce.unsafeCoerce;
  var step = function (v, a) {
      return v.value2(v.value1, a);
  };
  var mkStep = Unsafe_Coerce.unsafeCoerce;
  var halt = function (v) {
      return v.value3(v.value1);
  };
  var extract = unStep(function (v) {
      return v.value0;
  });
  exports["Step"] = Step;
  exports["mkStep"] = mkStep;
  exports["unStep"] = unStep;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
      obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];
    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }
    return b;
  };

  exports.forEachE = function (a, f) {
    for (var i = 0; i < a.length; i++) {
      f(a[i]);
    }
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);
    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i  = 0;
    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }
      i++;
    }
    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }
    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};
    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }
    for (var k in o1) {
      if (k in o2) {
        continue;
      }
      f2(k, o1[k]);
    }
    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name)
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;
    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forEachE"] = $foreign.forEachE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);
(function(exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];                
  var Created = (function () {
      function Created(value0) {
          this.value0 = value0;
      };
      Created.create = function (value0) {
          return new Created(value0);
      };
      return Created;
  })();
  var Removed = (function () {
      function Removed(value0) {
          this.value0 = value0;
      };
      Removed.create = function (value0) {
          return new Removed(value0);
      };
      return Removed;
  })();
  var Attribute = (function () {
      function Attribute(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Attribute.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Attribute(value0, value1, value2);
              };
          };
      };
      return Attribute;
  })();
  var Property = (function () {
      function Property(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Property.create = function (value0) {
          return function (value1) {
              return new Property(value0, value1);
          };
      };
      return Property;
  })();
  var Handler = (function () {
      function Handler(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Handler.create = function (value0) {
          return function (value1) {
              return new Handler(value0, value1);
          };
      };
      return Handler;
  })();
  var Ref = (function () {
      function Ref(value0) {
          this.value0 = value0;
      };
      Ref.create = function (value0) {
          return new Ref(value0);
      };
      return Ref;
  })();
  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;
  var removeProperty = function (key, el) {
      var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));
      if (v === "string") {
          return Halogen_VDom_Util.unsafeSetAny(key, "", el);
      };
      if (key === "rowSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      if (key === "colSpan") {
          return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
      };
      return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };
  var propToStrKey = function (v) {
      if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
          return "attr/" + (v.value0.value0 + (":" + v.value1));
      };
      if (v instanceof Attribute) {
          return "attr/:" + v.value1;
      };
      if (v instanceof Property) {
          return "prop/" + v.value0;
      };
      if (v instanceof Handler) {
          return "handler/" + v.value0;
      };
      if (v instanceof Ref) {
          return "ref";
      };
      throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 182, column 16 - line 189, column 1): " + [ v.constructor.name ]);
  };
  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var buildProp = function (emit) {
      return function (el) {
          var removeProp = function (prevEvents) {
              return function (v, v1) {
                  if (v1 instanceof Attribute) {
                      return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
                  };
                  if (v1 instanceof Property) {
                      return removeProperty(v1.value0, el);
                  };
                  if (v1 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
                      return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
                  };
                  if (v1 instanceof Ref) {
                      return Data_Unit.unit;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 169, column 5 - line 179, column 18): " + [ v1.constructor.name ]);
              };
          };
          var mbEmit = function (v) {
              if (v instanceof Data_Maybe.Just) {
                  return emit(v.value0)();
              };
              return Data_Unit.unit;
          };
          var haltProp = function (state) {
              var v = Foreign_Object.lookup("ref")(state.props);
              if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
                  return mbEmit(v.value0.value0(new Removed(el)));
              };
              return Data_Unit.unit;
          };
          var diffProp = function (prevEvents, events) {
              return function (v, v1, v11, v2) {
                  if (v11 instanceof Attribute && v2 instanceof Attribute) {
                      var $61 = v11.value2 === v2.value2;
                      if ($61) {
                          return v2;
                      };
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v11 instanceof Property && v2 instanceof Property) {
                      var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);
                      if (v4) {
                          return v2;
                      };
                      if (v2.value0 === "value") {
                          var elVal = unsafeGetProperty("value", el);
                          var $70 = Halogen_VDom_Util.refEq(elVal, v2.value1);
                          if ($70) {
                              return v2;
                          };
                          setProperty(v2.value0, v2.value1, el);
                          return v2;
                      };
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v11 instanceof Handler && v2 instanceof Handler) {
                      var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
                      Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
                      return v2;
                  };
                  return v2;
              };
          };
          var applyProp = function (events) {
              return function (v, v1, v2) {
                  if (v2 instanceof Attribute) {
                      Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
                      return v2;
                  };
                  if (v2 instanceof Property) {
                      setProperty(v2.value0, v2.value1, el);
                      return v2;
                  };
                  if (v2 instanceof Handler) {
                      var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);
                      if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
                          Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
                          return v2;
                      };
                      var v4 = Effect_Ref["new"](v2.value1)();
                      var v5 = Web_Event_EventTarget.eventListener(function (ev) {
                          return function __do() {
                              var v5 = Effect_Ref.read(v4)();
                              return mbEmit(v5(ev));
                          };
                      })();
                      Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(v5, v4), events);
                      Halogen_VDom_Util.addEventListener(v2.value0, v5, el);
                      return v2;
                  };
                  if (v2 instanceof Ref) {
                      mbEmit(v2.value0(new Created(el)));
                      return v2;
                  };
                  throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 113, column 5 - line 135, column 15): " + [ v2.constructor.name ]);
              };
          };
          var patchProp = function (state, ps2) {
              var v = Halogen_VDom_Util.newMutMap();
              var onThis = removeProp(state.events);
              var onThese = diffProp(state.events, v);
              var onThat = applyProp(v);
              var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(state.props, ps2, propToStrKey, onThese, onThis, onThat);
              var nextState = {
                  events: Halogen_VDom_Util.unsafeFreeze(v),
                  props: v1
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, nextState, patchProp, haltProp));
          };
          var renderProp = function (ps1) {
              var v = Halogen_VDom_Util.newMutMap();
              var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v));
              var state = {
                  events: Halogen_VDom_Util.unsafeFreeze(v),
                  props: v1
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Data_Unit.unit, state, patchProp, haltProp));
          };
          return renderProp;
      };
  };
  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["buildProp"] = buildProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Text = (function () {
      function Text(value0) {
          this.value0 = value0;
      };
      Text.create = function (value0) {
          return new Text(value0);
      };
      return Text;
  })();
  var Elem = (function () {
      function Elem(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Elem.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Elem(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Elem;
  })();
  var Keyed = (function () {
      function Keyed(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Keyed.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Keyed(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Keyed;
  })();
  var Widget = (function () {
      function Widget(value0) {
          this.value0 = value0;
      };
      Widget.create = function (value0) {
          return new Widget(value0);
      };
      return Widget;
  })();
  var Grafted = (function () {
      function Grafted(value0) {
          this.value0 = value0;
      };
      Grafted.create = function (value0) {
          return new Grafted(value0);
      };
      return Grafted;
  })();
  var Graft = (function () {
      function Graft(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      Graft.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new Graft(value0, value1, value2);
              };
          };
      };
      return Graft;
  })();
  var unGraft = function (f) {
      return function ($58) {
          return f($58);
      };
  };           
  var graft = Unsafe_Coerce.unsafeCoerce;
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
      return function (g) {
          return unGraft(function (v) {
              return graft(new Graft(function ($60) {
                  return f(v.value0($60));
              }, function ($61) {
                  return g(v.value1($61));
              }, v.value2));
          });
      };
  });
  var runGraft = unGraft(function (v) {
      var go = function (v2) {
          if (v2 instanceof Text) {
              return new Text(v2.value0);
          };
          if (v2 instanceof Elem) {
              return new Elem(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value3));
          };
          if (v2 instanceof Keyed) {
              return new Keyed(v2.value0, v2.value1, v.value0(v2.value2), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value3));
          };
          if (v2 instanceof Widget) {
              return new Widget(v.value1(v2.value0));
          };
          if (v2 instanceof Grafted) {
              return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.Types (line 86, column 7 - line 86, column 27): " + [ v2.constructor.name ]);
      };
      return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["Graft"] = Graft;
  exports["graft"] = graft;
  exports["unGraft"] = unGraft;
  exports["runGraft"] = runGraft;
  exports["bifunctorGraft"] = bifunctorGraft;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {};
  var exports = $PS["Halogen.HTML.Core"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var HTML = function (x) {
      return x;
  };
  var ClassName = function (x) {
      return x;
  };
  var IsProp = function (toPropValue) {
      this.toPropValue = toPropValue;
  };
  var widget = function ($30) {
      return HTML(Halogen_VDom_Types.Widget.create($30));
  };
  var toPropValue = function (dict) {
      return dict.toPropValue;
  };
  var text = function ($31) {
      return HTML(Halogen_VDom_Types.Text.create($31));
  };                                                      
  var ref = function (f) {
      return Halogen_VDom_DOM_Prop.Ref.create(function ($32) {
          return f((function (v) {
              if (v instanceof Halogen_VDom_DOM_Prop.Created) {
                  return new Data_Maybe.Just(v.value0);
              };
              if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
                  return Data_Maybe.Nothing.value;
              };
              throw new Error("Failed pattern match at Halogen.HTML.Core (line 104, column 21 - line 106, column 23): " + [ v.constructor.name ]);
          })($32));
      });
  };
  var prop = function (dictIsProp) {
      return function (v) {
          return function ($33) {
              return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($33));
          };
      };
  };           
  var newtypeHTML = new Data_Newtype.Newtype(function (n) {
      return n;
  }, HTML);
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ClassName);
  var isPropString = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var isPropInt = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var isPropInputType = new IsProp(function ($45) {
      return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($45));
  });
  var isPropBoolean = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var handler = Halogen_VDom_DOM_Prop.Handler.create;
  var element = function (ns) {
      return function (name) {
          return function (props) {
              return function (children) {
                  return new Halogen_VDom_Types.Elem(ns, name, props, children);
              };
          };
      };
  };
  exports["HTML"] = HTML;
  exports["widget"] = widget;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["handler"] = handler;
  exports["ref"] = ref;
  exports["IsProp"] = IsProp;
  exports["toPropValue"] = toPropValue;
  exports["ClassName"] = ClassName;
  exports["newtypeHTML"] = newtypeHTML;
  exports["isPropString"] = isPropString;
  exports["isPropInt"] = isPropInt;
  exports["isPropBoolean"] = isPropBoolean;
  exports["isPropInputType"] = isPropInputType;
  exports["newtypeClassName"] = newtypeClassName;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {};
  var exports = $PS["Halogen.HTML.Elements"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var h1 = element("h1");
  var h2 = element("h2");
  var h2_ = h2([  ]);
  var input = function (props) {
      return element("input")(props)([  ]);
  };                   
  var label = element("label");
  var li = element("li");
  var li_ = li([  ]);        
  var p = element("p");
  var p_ = p([  ]);          
  var section = element("section");
  var span = element("span");
  var textarea = function (es) {
      return element("textarea")(es)([  ]);
  };               
  var ul = element("ul");
  var div = element("div");
  var div_ = div([  ]);
  var button = element("button");
  var br = function (props) {
      return element("br")(props)([  ]);
  };
  var br_ = br([  ]);    
  var a = element("a");
  exports["element"] = element;
  exports["a"] = a;
  exports["br"] = br;
  exports["br_"] = br_;
  exports["button"] = button;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["h1"] = h1;
  exports["h2"] = h2;
  exports["h2_"] = h2_;
  exports["input"] = input;
  exports["label"] = label;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["section"] = section;
  exports["span"] = span;
  exports["textarea"] = textarea;
  exports["ul"] = ul;
})(PS);
(function(exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];
  var unsafeReadProp = function (k) {
      return function (value) {
          return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
      };
  };
  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Query.Input"] = $PS["Halogen.Query.Input"] || {};
  var exports = $PS["Halogen.Query.Input"];
  var RefUpdate = (function () {
      function RefUpdate(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RefUpdate.create = function (value0) {
          return function (value1) {
              return new RefUpdate(value0, value1);
          };
      };
      return RefUpdate;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();
  exports["RefUpdate"] = RefUpdate;
  exports["Action"] = Action;
})(PS);
(function(exports) {
  "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };

  exports.preventDefault = function (e) {
    return function () {
      return e.preventDefault();
    };
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];
  var currentTarget = function ($6) {
      return Data_Nullable.toMaybe($foreign["_currentTarget"]($6));
  };
  exports["currentTarget"] = currentTarget;
  exports["preventDefault"] = $foreign.preventDefault;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  var change = "change";
  var blur = "blur";
  exports["blur"] = blur;
  exports["change"] = change;
  exports["domcontentloaded"] = domcontentloaded;
  exports["input"] = input;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.UIEvent.FocusEvent.EventTypes"] = $PS["Web.UIEvent.FocusEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.FocusEvent.EventTypes"];
  var focus = "focus";
  exports["focus"] = focus;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent.EventTypes"] = $PS["Web.UIEvent.KeyboardEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var keydown = "keydown";
  exports["keydown"] = keydown;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseover = "mouseover";  
  var mousedown = "mousedown";
  var click = "click";
  exports["click"] = click;
  exports["mousedown"] = mousedown;
  exports["mouseover"] = mouseover;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {};
  var exports = $PS["Halogen.HTML.Events"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_UIEvent_FocusEvent_EventTypes = $PS["Web.UIEvent.FocusEvent.EventTypes"];
  var Web_UIEvent_KeyboardEvent_EventTypes = $PS["Web.UIEvent.KeyboardEvent.EventTypes"];
  var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;
  var keyHandler = Unsafe_Coerce.unsafeCoerce;
  var handler = function (et) {
      return function ($0) {
          return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_Input.Action.create))($0));
      };
  };                             
  var onChange = handler(Web_HTML_Event_EventTypes.change);
  var onClick = function ($1) {
      return handler(Web_UIEvent_MouseEvent_EventTypes.click)(mouseHandler($1));
  };                                                         
  var onKeyDown = function ($3) {
      return handler(Web_UIEvent_KeyboardEvent_EventTypes.keydown)(keyHandler($3));
  };                                                   
  var onMouseDown = function ($5) {
      return handler(Web_UIEvent_MouseEvent_EventTypes.mousedown)(mouseHandler($5));
  };
  var onMouseOver = function ($10) {
      return handler(Web_UIEvent_MouseEvent_EventTypes.mouseover)(mouseHandler($10));
  };
  var focusHandler = Unsafe_Coerce.unsafeCoerce;
  var onBlur = function ($19) {
      return handler(Web_HTML_Event_EventTypes.blur)(focusHandler($19));
  };
  var onFocus = function ($20) {
      return handler(Web_UIEvent_FocusEvent_EventTypes.focus)(focusHandler($20));
  };
  var addForeignPropHandler = function (key) {
      return function (prop) {
          return function (reader) {
              return function (f) {
                  var go = function (a) {
                      return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
                  };
                  return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
                      return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
                  }));
              };
          };
      };
  };                                                                                                       
  var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
  exports["handler"] = handler;
  exports["onChange"] = onChange;
  exports["onClick"] = onClick;
  exports["onMouseDown"] = onMouseDown;
  exports["onMouseOver"] = onMouseOver;
  exports["onKeyDown"] = onKeyDown;
  exports["onBlur"] = onBlur;
  exports["onFocus"] = onFocus;
  exports["onValueInput"] = onValueInput;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {};
  var exports = $PS["Halogen.HTML.Properties"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var ref = (function () {
      var go = function (p) {
          return function (mel) {
              return new Data_Maybe.Just(new Halogen_Query_Input.RefUpdate(p, mel));
          };
      };
      return function ($11) {
          return Halogen_HTML_Core.ref(go($11));
      };
  })();
  var prop = function (dictIsProp) {
      return Halogen_HTML_Core.prop(dictIsProp);
  };                                                         
  var tabIndex = prop(Halogen_HTML_Core.isPropInt)("tabIndex");
  var type_ = function (dictIsProp) {
      return prop(dictIsProp)("type");
  };
  var value = prop(Halogen_HTML_Core.isPropString)("value");  
  var placeholder = prop(Halogen_HTML_Core.isPropString)("placeholder");
  var name = prop(Halogen_HTML_Core.isPropString)("name");
  var href = prop(Halogen_HTML_Core.isPropString)("href");        
  var disabled = prop(Halogen_HTML_Core.isPropBoolean)("disabled");
  var class_ = function ($14) {
      return prop(Halogen_HTML_Core.isPropString)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($14));
  };
  var checked = prop(Halogen_HTML_Core.isPropBoolean)("checked");
  exports["prop"] = prop;
  exports["ref"] = ref;
  exports["class_"] = class_;
  exports["href"] = href;
  exports["name"] = name;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["disabled"] = disabled;
  exports["checked"] = checked;
  exports["placeholder"] = placeholder;
  exports["tabIndex"] = tabIndex;
})(PS);
(function(exports) {
  "use strict";

  exports.copyRecord = function(rec) {
    var copy = {};
    for (var key in rec) {
      if ({}.hasOwnProperty.call(rec, key)) {
        copy[key] = rec[key];
      }
    }
    return copy;
  };

  exports.unsafeInsert = function(l) {
    return function(a) {
      return function(rec) {
        rec[l] = a;
        return rec;
      };
    };
  };

  exports.unsafeModify = function(l) {
    return function (f) {
      return function(rec) {
        rec[l] = f(rec[l]);
        return rec;
      };
    };
  };

  exports.unsafeDelete = function(l) {
    return function(rec) {
      delete rec[l];
      return rec;
    };
  };
})(PS["Record.Builder"] = PS["Record.Builder"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Record.Builder"] = $PS["Record.Builder"] || {};
  var exports = $PS["Record.Builder"];
  var $foreign = $PS["Record.Builder"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var semigroupoidBuilder = Control_Semigroupoid.semigroupoidFn;
  var modify = function (dictCons) {
      return function (dictCons1) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (f) {
                      return function (r1) {
                          return $foreign.unsafeModify(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(f)(r1);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictLacks) {
          return function (dictIsSymbol) {
              return function (l) {
                  return function (a) {
                      return function (r1) {
                          return $foreign.unsafeInsert(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(a)(r1);
                      };
                  };
              };
          };
      };
  };
  var $$delete = function (dictIsSymbol) {
      return function (dictLacks) {
          return function (dictCons) {
              return function (l) {
                  return function (r2) {
                      return $foreign.unsafeDelete(Data_Symbol.reflectSymbol(dictIsSymbol)(l))(r2);
                  };
              };
          };
      };
  };
  var categoryBuilder = Control_Category.categoryFn;
  var build = function (v) {
      return function (r1) {
          return v($foreign.copyRecord(r1));
      };
  };
  exports["build"] = build;
  exports["insert"] = insert;
  exports["modify"] = modify;
  exports["delete"] = $$delete;
  exports["semigroupoidBuilder"] = semigroupoidBuilder;
  exports["categoryBuilder"] = categoryBuilder;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.App.UI.Element"] = $PS["Example.App.UI.Element"] || {};
  var exports = $PS["Example.App.UI.Element"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Record_Builder = $PS["Record.Builder"];                
  var resultToHelp = function (dictToText) {
      return function (str) {
          return function (v) {
              if (v instanceof Formless_Data_FormFieldResult.NotValidated) {
                  return new Data_Either.Right(str);
              };
              if (v instanceof Formless_Data_FormFieldResult.Validating) {
                  return new Data_Either.Right("validating...");
              };
              return Data_Maybe.maybe(new Data_Either.Right(str))(Data_Either.Left.create)(Example_App_Validation.showError(dictToText)(v));
          };
      };
  };
  var p_ = function (str) {
      return Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text(str) ]);
  };
  var formlessField = function (dictIsSymbol) {
      return function (dictToText) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (dictCons) {
                      return function (dictCons1) {
                          return function (fieldType) {
                              return function (config) {
                                  return function (state) {
                                      var props = [ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(dictIsSymbol)(dictNewtype)(dictCons)(config.sym)(state.form)), Halogen_HTML_Events.onValueInput(function ($12) {
                                          return Data_Maybe.Just.create(Formless_Action.setValidate(dictIsSymbol)(dictNewtype1)(dictCons1)(config.sym)($12));
                                      }) ];
                                      var help$prime = Data_Maybe.maybe(new Data_Either.Right(config.help))(function ($13) {
                                          return Data_Either.Left.create(Example_App_Validation.toText(dictToText)($13));
                                      })(Formless_Retrieve.getError(dictIsSymbol)(dictNewtype)(dictCons)(config.sym)(state.form));
                                      var config$prime = Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
                                          return "sym";
                                      }))()()(Data_Symbol.SProxy.value))(Record_Builder.modify()()(new Data_Symbol.IsSymbol(function () {
                                          return "help";
                                      }))(Data_Symbol.SProxy.value)(Data_Function["const"](help$prime)));
                                      return fieldType(Record_Builder.build(config$prime)(config))(props);
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var class_ = function ($14) {
      return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($14));
  };
  var content_ = Halogen_HTML_Elements.div([ class_("content") ]);
  var field = function (config) {
      return function (contents) {
          var help_ = function (str) {
              return Halogen_HTML_Elements.p([ class_("help") ])([ Halogen_HTML_Core.text(str) ]);
          };
          var helpError_ = function (str) {
              return Halogen_HTML_Elements.p([ class_("help is-danger") ])([ Halogen_HTML_Core.text(str) ]);
          };
          return Halogen_HTML_Elements.div([ class_("field") ])([ Halogen_HTML_Elements.div([ class_("label") ])([ Halogen_HTML_Core.text(config.label) ]), Halogen_HTML_Elements.div([ class_("control") ])(contents), (function () {
              if (config.help instanceof Data_Either.Left) {
                  return helpError_(config.help.value0);
              };
              if (config.help instanceof Data_Either.Right) {
                  return help_(config.help.value0);
              };
              throw new Error("Failed pattern match at Example.App.UI.Element (line 101, column 7 - line 103, column 31): " + [ config.help.constructor.name ]);
          })() ]);
      };
  };
  var formContent_ = function (content) {
      return Halogen_HTML_Elements.div([ class_("content") ])([ Halogen_HTML_Elements.div([ class_("column has-background-white-bis") ])(content) ]);
  };
  var grouped_ = function (array) {
      var wrap = function (x) {
          return Halogen_HTML_Elements.p([ class_("control") ])([ x ]);
      };
      return Halogen_HTML_Elements.div([ class_("field is-grouped") ])(Data_Functor.map(Data_Functor.functorArray)(wrap)(array));
  };
  var h1_ = Halogen_HTML_Elements.h1([ class_("title") ]);
  var h2_ = Halogen_HTML_Elements.h2([ class_("subtitle is-size-4 has-text-grey") ]);
  var input = function (config) {
      return function (props) {
          return field({
              label: config.label,
              help: config.help
          })([ Halogen_HTML_Elements.input(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputText.value), Data_Either.either(Data_Function["const"](class_("input is-danger")))(Data_Function["const"](class_("input")))(config.help), Halogen_HTML_Properties.placeholder(config.placeholder) ])(props)) ]);
      };
  };
  var section_ = function (content) {
      return Halogen_HTML_Elements.section([ class_("section columns") ])([ Halogen_HTML_Elements.div([ class_("column is-11-tablet is-three-fifths-desktop") ])(content) ]);
  };
  var textarea = function (config) {
      return function (props) {
          return field({
              label: config.label,
              help: config.help
          })([ Halogen_HTML_Elements.textarea(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Data_Either.either(Data_Function["const"](class_("textarea is-danger")))(Data_Function["const"](class_("textarea")))(config.help), Halogen_HTML_Properties.placeholder(config.placeholder) ])(props)) ]);
      };
  };
  var buttonPrimary = function (props) {
      return Halogen_HTML_Elements.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ class_("button is-link") ])(props));
  };
  var button = function (props) {
      return Halogen_HTML_Elements.button(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ class_("button is-light") ])(props));
  };
  var a = function (props) {
      return Halogen_HTML_Elements.a(Data_Semigroup.append(Data_Semigroup.semigroupArray)([ class_("has-text-blue") ])(props));
  };
  exports["class_"] = class_;
  exports["h1_"] = h1_;
  exports["h2_"] = h2_;
  exports["p_"] = p_;
  exports["a"] = a;
  exports["section_"] = section_;
  exports["formContent_"] = formContent_;
  exports["content_"] = content_;
  exports["button"] = button;
  exports["buttonPrimary"] = buttonPrimary;
  exports["grouped_"] = grouped_;
  exports["field"] = field;
  exports["resultToHelp"] = resultToHelp;
  exports["input"] = input;
  exports["textarea"] = textarea;
  exports["formlessField"] = formlessField;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Data.OrdBox"] = $PS["Halogen.Data.OrdBox"] || {};
  var exports = $PS["Halogen.Data.OrdBox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];                
  var OrdBox = (function () {
      function OrdBox(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      OrdBox.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new OrdBox(value0, value1, value2);
              };
          };
      };
      return OrdBox;
  })();
  var unOrdBox = function (v) {
      return v.value2;
  };
  var mkOrdBox = function (dictOrd) {
      return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };
  var eqOrdBox = new Data_Eq.Eq(function (v) {
      return function (v1) {
          return v.value0(v.value2)(v1.value2);
      };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
      return eqOrdBox;
  }, function (v) {
      return function (v1) {
          return v.value1(v.value2)(v1.value2);
      };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["unOrdBox"] = unOrdBox;
  exports["eqOrdBox"] = eqOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Data.Slot"] = $PS["Halogen.Data.Slot"] || {};
  var exports = $PS["Halogen.Data.Slot"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var slots = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (v) {
                      var key = Data_Symbol.reflectSymbol(dictIsSymbol)(sym);
                      var go = function (v1) {
                          return function (val) {
                              if (key === v1.value0) {
                                  return Data_Map_Internal.singleton(Halogen_Data_OrdBox.unOrdBox(v1.value1))(val);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Data_Monoid.mempty(Data_Map_Internal.monoidMap(dictOrd));
                              };
                              throw new Error("Failed pattern match at Halogen.Data.Slot (line 101, column 3 - line 103, column 25): " + [ v1.constructor.name, val.constructor.name ]);
                          };
                      };
                      return Data_Map_Internal.foldSubmap(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(Data_Map_Internal.monoidMap(dictOrd))(Data_Maybe.Nothing.value)(Data_Maybe.Nothing.value)(go)(v);
                  };
              };
          };
      };
  };
  var pop = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.pop(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var lookup = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (v) {
                          return Data_Map_Internal.lookup(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(v);
                      };
                  };
              };
          };
      };
  };
  var insert = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (sym) {
                  return function (key) {
                      return function (val) {
                          return function (v) {
                              return Data_Map_Internal.insert(Data_Tuple.ordTuple(Data_Ord.ordString)(Halogen_Data_OrdBox.ordOrdBox))(new Data_Tuple.Tuple(Data_Symbol.reflectSymbol(dictIsSymbol)(sym), Halogen_Data_OrdBox.mkOrdBox(dictOrd)(key)))(val)(v);
                          };
                      };
                  };
              };
          };
      };
  };
  var foreachSlot = function (dictApplicative) {
      return function (v) {
          return function (k) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Map_Internal.foldableMap)(function ($37) {
                  return k($37);
              })(v);
          };
      };
  };
  var empty = Data_Map_Internal.empty;
  exports["empty"] = empty;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["pop"] = pop;
  exports["slots"] = slots;
  exports["foreachSlot"] = foreachSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Query.ChildQuery"] = $PS["Halogen.Query.ChildQuery"] || {};
  var exports = $PS["Halogen.Query.ChildQuery"];
  var Data_Functor = $PS["Data.Functor"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ChildQuery = (function () {
      function ChildQuery(value0, value1, value2) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
      };
      ChildQuery.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return new ChildQuery(value0, value1, value2);
              };
          };
      };
      return ChildQuery;
  })();
  var unChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  var mkChildQueryBox = Unsafe_Coerce.unsafeCoerce;
  var functorChildQuery = new Data_Functor.Functor(function (f) {
      return unChildQueryBox(function (v) {
          return mkChildQueryBox(new ChildQuery(function (dictApplicative) {
              return v.value0(dictApplicative);
          }, v.value1, function ($6) {
              return f(v.value2($6));
          }));
      });
  });
  exports["ChildQuery"] = ChildQuery;
  exports["mkChildQueryBox"] = mkChildQueryBox;
  exports["unChildQueryBox"] = unChildQueryBox;
  exports["functorChildQuery"] = functorChildQuery;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {};
  var exports = $PS["Halogen.Query.HalogenM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_FoldableWithIndex = $PS["Data.FoldableWithIndex"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];                  
  var SubscriptionId = function (x) {
      return x;
  };
  var ForkId = function (x) {
      return x;
  };
  var State = (function () {
      function State(value0) {
          this.value0 = value0;
      };
      State.create = function (value0) {
          return new State(value0);
      };
      return State;
  })();
  var Subscribe = (function () {
      function Subscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Subscribe.create = function (value0) {
          return function (value1) {
              return new Subscribe(value0, value1);
          };
      };
      return Subscribe;
  })();
  var Unsubscribe = (function () {
      function Unsubscribe(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Unsubscribe.create = function (value0) {
          return function (value1) {
              return new Unsubscribe(value0, value1);
          };
      };
      return Unsubscribe;
  })();
  var Lift = (function () {
      function Lift(value0) {
          this.value0 = value0;
      };
      Lift.create = function (value0) {
          return new Lift(value0);
      };
      return Lift;
  })();
  var ChildQuery = (function () {
      function ChildQuery(value0) {
          this.value0 = value0;
      };
      ChildQuery.create = function (value0) {
          return new ChildQuery(value0);
      };
      return ChildQuery;
  })();
  var Raise = (function () {
      function Raise(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Raise.create = function (value0) {
          return function (value1) {
              return new Raise(value0, value1);
          };
      };
      return Raise;
  })();
  var Par = (function () {
      function Par(value0) {
          this.value0 = value0;
      };
      Par.create = function (value0) {
          return new Par(value0);
      };
      return Par;
  })();
  var Fork = (function () {
      function Fork(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Fork.create = function (value0) {
          return function (value1) {
              return new Fork(value0, value1);
          };
      };
      return Fork;
  })();
  var Kill = (function () {
      function Kill(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Kill.create = function (value0) {
          return function (value1) {
              return new Kill(value0, value1);
          };
      };
      return Kill;
  })();
  var GetRef = (function () {
      function GetRef(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      GetRef.create = function (value0) {
          return function (value1) {
              return new GetRef(value0, value1);
          };
      };
      return GetRef;
  })();
  var HalogenM = function (x) {
      return x;
  };
  var raise = function (o) {
      return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  };
  var queryAll = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (q) {
                      var catMapMaybes = function (dictOrd1) {
                          return Data_FoldableWithIndex.foldrWithIndex(Data_Map_Internal.foldableWithIndexMap)(function (k) {
                              return function (v) {
                                  return function (acc) {
                                      return Data_Maybe.maybe(acc)(Data_Function.flip(Data_Map_Internal.insert(dictOrd1)(k))(acc))(v);
                                  };
                              };
                          })(Data_Map_Internal.empty);
                      };
                      return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
                          return function (k) {
                              return function ($129) {
                                  return Data_Functor.map((dictApplicative.Apply0()).Functor0())(catMapMaybes(dictOrd))(Data_Traversable.traverse(Data_Map_Internal.traversableMap)(dictApplicative)(k)(Halogen_Data_Slot.slots(dictCons)(dictIsSymbol)(dictOrd)(label)($129)));
                              };
                          };
                      }, q, Control_Category.identity(Control_Category.categoryFn))))));
                  };
              };
          };
      };
  };
  var query = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (q) {
                          return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
                              return function (k) {
                                  return function ($130) {
                                      return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k)(Halogen_Data_Slot.lookup(dictCons)(dictIsSymbol)(dictOrd)(label)(p)($130));
                                  };
                              };
                          }, q, Control_Category.identity(Control_Category.categoryFn))))));
                      };
                  };
              };
          };
      };
  };
  var ordSubscriptionId = Data_Ord.ordInt;
  var ordForkId = Data_Ord.ordInt;
  var monadTransHalogenM = new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function ($131) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create($131)));
      };
  });
  var monadHalogenM = Control_Monad_Free.freeMonad;
  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
      return monadHalogenM;
  }, function ($132) {
      return HalogenM(Control_Monad_Free.liftF(State.create($132)));
  });
  var monadEffectHalogenM = function (dictMonadEffect) {
      return new Effect_Class.MonadEffect(function () {
          return monadHalogenM;
      }, function ($135) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Class.liftEffect(dictMonadEffect)($135))));
      });
  };
  var monadAffHalogenM = function (dictMonadAff) {
      return new Effect_Aff_Class.MonadAff(function () {
          return monadEffectHalogenM(dictMonadAff.MonadEffect0());
      }, function ($136) {
          return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Aff_Class.liftAff(dictMonadAff)($136))));
      });
  };
  var kill = function (fid) {
      return HalogenM(Control_Monad_Free.liftF(new Kill(fid, Data_Unit.unit)));
  };
  var getRef = function (p) {
      return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
  };
  var functorHalogenM = Control_Monad_Free.freeFunctor;
  var fork = function (hmu) {
      return HalogenM(Control_Monad_Free.liftF(new Fork(hmu, Control_Category.identity(Control_Category.categoryFn))));
  };                           
  var bindHalogenM = Control_Monad_Free.freeBind;
  var applyHalogenM = Control_Monad_Free.freeApply;         
  var applicativeHalogenM = Control_Monad_Free.freeApplicative;
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Unsubscribe"] = Unsubscribe;
  exports["Lift"] = Lift;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["Kill"] = Kill;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["raise"] = raise;
  exports["query"] = query;
  exports["queryAll"] = queryAll;
  exports["SubscriptionId"] = SubscriptionId;
  exports["ForkId"] = ForkId;
  exports["fork"] = fork;
  exports["kill"] = kill;
  exports["getRef"] = getRef;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadHalogenM"] = monadHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadTransHalogenM"] = monadTransHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
  exports["ordSubscriptionId"] = ordSubscriptionId;
  exports["ordForkId"] = ordForkId;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Query.HalogenQ"] = $PS["Halogen.Query.HalogenQ"] || {};
  var exports = $PS["Halogen.Query.HalogenQ"];           
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Finalize = (function () {
      function Finalize(value0) {
          this.value0 = value0;
      };
      Finalize.create = function (value0) {
          return new Finalize(value0);
      };
      return Finalize;
  })();
  var Receive = (function () {
      function Receive(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Receive.create = function (value0) {
          return function (value1) {
              return new Receive(value0, value1);
          };
      };
      return Receive;
  })();
  var Action = (function () {
      function Action(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Action.create = function (value0) {
          return function (value1) {
              return new Action(value0, value1);
          };
      };
      return Action;
  })();
  var Query = (function () {
      function Query(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Query.create = function (value0) {
          return function (value1) {
              return new Query(value0, value1);
          };
      };
      return Query;
  })();
  exports["Initialize"] = Initialize;
  exports["Finalize"] = Finalize;
  exports["Receive"] = Receive;
  exports["Action"] = Action;
  exports["Query"] = Query;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Component"] = $PS["Halogen.Component"] || {};
  var exports = $PS["Halogen.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var ComponentSlot = (function () {
      function ComponentSlot(value0) {
          this.value0 = value0;
      };
      ComponentSlot.create = function (value0) {
          return new ComponentSlot(value0);
      };
      return ComponentSlot;
  })();
  var ThunkSlot = (function () {
      function ThunkSlot(value0) {
          this.value0 = value0;
      };
      ThunkSlot.create = function (value0) {
          return new ThunkSlot(value0);
      };
      return ThunkSlot;
  })();
  var unComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkEval = function (args) {
      return function (v) {
          if (v instanceof Halogen_Query_HalogenQ.Initialize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.initialize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Finalize) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.finalize))(v.value0);
          };
          if (v instanceof Halogen_Query_HalogenQ.Receive) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(args.handleAction)(args.receive(v.value0)))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Action) {
              return Data_Functor.voidLeft(Halogen_Query_HalogenM.functorHalogenM)(args.handleAction(v.value0))(v.value1);
          };
          if (v instanceof Halogen_Query_HalogenQ.Query) {
              return Data_Coyoneda.unCoyoneda(function (g) {
                  return function ($28) {
                      return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.maybe(v.value1(Data_Unit.unit))(g))(args.handleQuery($28));
                  };
              })(v.value0);
          };
          throw new Error("Failed pattern match at Halogen.Component (line 172, column 15 - line 182, column 70): " + [ v.constructor.name ]);
      };
  };
  var mkComponentSlot = Unsafe_Coerce.unsafeCoerce;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;
  var defaultEval = {
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var componentSlot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (comp) {
                          return function (input) {
                              return function (output) {
                                  return mkComponentSlot({
                                      get: Halogen_Data_Slot.lookup(dictCons)(dictIsSymbol)(dictOrd)(label)(p),
                                      pop: Halogen_Data_Slot.pop(dictCons)(dictIsSymbol)(dictOrd)(label)(p),
                                      set: Halogen_Data_Slot.insert(dictCons)(dictIsSymbol)(dictOrd)(label)(p),
                                      component: comp,
                                      input: new Halogen_Query_HalogenQ.Receive(input, Data_Unit.unit),
                                      output: output
                                  });
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["mkEval"] = mkEval;
  exports["defaultEval"] = defaultEval;
  exports["ComponentSlot"] = ComponentSlot;
  exports["ThunkSlot"] = ThunkSlot;
  exports["componentSlot"] = componentSlot;
  exports["mkComponentSlot"] = mkComponentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.App.Home"] = $PS["Example.App.Home"] || {};
  var exports = $PS["Example.App.Home"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];                
  var render = Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A renderless component for painless forms in Halogen") ]), Example_App_UI_Element.content_([ Example_App_UI_Element.p_("\x0a            Formless allows you to write a small, simple spec for your form and receive state updates, validation, dirty states, submission handling, and more for free. You are responsible for providing an initial value and a validation function for every field in your form, but beyond that, Formless will take care of things behind the scenes without ever imposing on how you'd like to render and display your form. You can freely use external Halogen components, add new form behaviors on top (like dependent validation or clearing sets of fields), and more.\x0a            "), Example_App_UI_Element.a([ Halogen_HTML_Properties.href("https://github.com/thomashoneyman/purescript-halogen-formless") ])([ Halogen_HTML_Core.text("purescript-halogen-formless") ]) ]) ]);
  var component = Halogen_Component.mkComponent({
      initialState: Data_Function["const"](Data_Unit.unit),
      render: Data_Function["const"](render),
      "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
  });
  exports["render"] = render;
  exports["component"] = component;
})(PS);
(function(exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);
    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };

  exports.focus = function (elt) {
    return function () {
      return elt.focus();
    };
  };

  exports.blur = function (elt) {
    return function () {
      return elt.blur();
    };
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  var fromElement = function (x) {
      return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };
  exports["fromElement"] = fromElement;
  exports["toNode"] = toNode;
  exports["focus"] = $foreign.focus;
  exports["blur"] = $foreign.blur;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Query"] = $PS["Halogen.Query"] || {};
  var exports = $PS["Halogen.Query"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];                
  var tell = function (act) {
      return act(Data_Unit.unit);
  };
  var request = function (req) {
      return req(Control_Category.identity(Control_Category.categoryFn));
  };
  var getHTMLElementRef = function ($1) {
      return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
          return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
      })(Halogen_Query_HalogenM.getRef($1));
  };
  exports["tell"] = tell;
  exports["request"] = request;
  exports["getHTMLElementRef"] = getHTMLElementRef;
})(PS);
(function(exports) {
  "use strict";

  exports.code = function (e) {
    return e.code;
  };
})(PS["Web.UIEvent.KeyboardEvent"] = PS["Web.UIEvent.KeyboardEvent"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.UIEvent.KeyboardEvent"] = $PS["Web.UIEvent.KeyboardEvent"] || {};
  var exports = $PS["Web.UIEvent.KeyboardEvent"];
  var $foreign = $PS["Web.UIEvent.KeyboardEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];  
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
  exports["code"] = $foreign.code;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.UIEvent.MouseEvent"] = $PS["Web.UIEvent.MouseEvent"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];  
  var toEvent = Unsafe_Coerce.unsafeCoerce;
  exports["toEvent"] = toEvent;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Select"] = $PS["Select"] || {};
  var exports = $PS["Select"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Time_Duration = $PS["Data.Time.Duration"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Record_Builder = $PS["Record.Builder"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_UIEvent_KeyboardEvent = $PS["Web.UIEvent.KeyboardEvent"];
  var Web_UIEvent_MouseEvent = $PS["Web.UIEvent.MouseEvent"];                
  var Off = (function () {
      function Off() {

      };
      Off.value = new Off();
      return Off;
  })();
  var On = (function () {
      function On() {

      };
      On.value = new On();
      return On;
  })();
  var Prev = (function () {
      function Prev() {

      };
      Prev.value = new Prev();
      return Prev;
  })();
  var Next = (function () {
      function Next() {

      };
      Next.value = new Next();
      return Next;
  })();
  var Index = (function () {
      function Index(value0) {
          this.value0 = value0;
      };
      Index.create = function (value0) {
          return new Index(value0);
      };
      return Index;
  })();
  var Send = (function () {
      function Send(value0) {
          this.value0 = value0;
      };
      Send.create = function (value0) {
          return new Send(value0);
      };
      return Send;
  })();
  var Query = (function () {
      function Query(value0) {
          this.value0 = value0;
      };
      Query.create = function (value0) {
          return new Query(value0);
      };
      return Query;
  })();
  var Text = (function () {
      function Text() {

      };
      Text.value = new Text();
      return Text;
  })();
  var Toggle = (function () {
      function Toggle() {

      };
      Toggle.value = new Toggle();
      return Toggle;
  })();
  var Searched = (function () {
      function Searched(value0) {
          this.value0 = value0;
      };
      Searched.create = function (value0) {
          return new Searched(value0);
      };
      return Searched;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var VisibilityChanged = (function () {
      function VisibilityChanged(value0) {
          this.value0 = value0;
      };
      VisibilityChanged.create = function (value0) {
          return new VisibilityChanged(value0);
      };
      return VisibilityChanged;
  })();
  var Search = (function () {
      function Search(value0) {
          this.value0 = value0;
      };
      Search.create = function (value0) {
          return new Search(value0);
      };
      return Search;
  })();
  var Highlight = (function () {
      function Highlight(value0) {
          this.value0 = value0;
      };
      Highlight.create = function (value0) {
          return new Highlight(value0);
      };
      return Highlight;
  })();
  var Select = (function () {
      function Select(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Select.create = function (value0) {
          return function (value1) {
              return new Select(value0, value1);
          };
      };
      return Select;
  })();
  var ToggleClick = (function () {
      function ToggleClick(value0) {
          this.value0 = value0;
      };
      ToggleClick.create = function (value0) {
          return new ToggleClick(value0);
      };
      return ToggleClick;
  })();
  var Focus = (function () {
      function Focus(value0) {
          this.value0 = value0;
      };
      Focus.create = function (value0) {
          return new Focus(value0);
      };
      return Focus;
  })();
  var Key = (function () {
      function Key(value0) {
          this.value0 = value0;
      };
      Key.create = function (value0) {
          return new Key(value0);
      };
      return Key;
  })();
  var PreventClick = (function () {
      function PreventClick(value0) {
          this.value0 = value0;
      };
      PreventClick.create = function (value0) {
          return new PreventClick(value0);
      };
      return PreventClick;
  })();
  var SetVisibility = (function () {
      function SetVisibility(value0) {
          this.value0 = value0;
      };
      SetVisibility.create = function (value0) {
          return new SetVisibility(value0);
      };
      return SetVisibility;
  })();
  var Initialize = (function () {
      function Initialize(value0) {
          this.value0 = value0;
      };
      Initialize.create = function (value0) {
          return new Initialize(value0);
      };
      return Initialize;
  })();
  var Action = (function () {
      function Action(value0) {
          this.value0 = value0;
      };
      Action.create = function (value0) {
          return new Action(value0);
      };
      return Action;
  })();
  var handleQuery = function (dictMonadAff) {
      return function (handleQuery$prime) {
          return function (v) {
              if (v instanceof Send) {
                  return Halogen_Query_HalogenM.HalogenM(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(v.value0)));
              };
              if (v instanceof Query) {
                  return handleQuery$prime(v.value0);
              };
              throw new Error("Failed pattern match at Select (line 207, column 28 - line 212, column 23): " + [ v.constructor.name ]);
          };
      };
  };
  var eqVisibility = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Off && y instanceof Off) {
              return true;
          };
          if (x instanceof On && y instanceof On) {
              return true;
          };
          return false;
      };
  });
  var handleAction = function (dictMonadAff) {
      return function (dictLacks) {
          return function (dictLacks1) {
              return function (dictLacks2) {
                  return function (handleAction$prime) {
                      return function (handleEvent) {
                          var handle = function (act) {
                              return handleAction(dictMonadAff)(dictLacks)(dictLacks1)(dictLacks2)(handleAction$prime)(handleEvent)(act);
                          };
                          var getTargetIndex = function (st) {
                              var lastIndex = function ($107) {
                                  return (function (v) {
                                      return v - 1 | 0;
                                  })(st.getItemCount($107));
                              };
                              return function (v) {
                                  if (v instanceof Index) {
                                      return v.value0;
                                  };
                                  if (v instanceof Prev) {
                                      if (st.highlightedIndex instanceof Data_Maybe.Just && st.highlightedIndex.value0 !== 0) {
                                          return st.highlightedIndex.value0 - 1 | 0;
                                      };
                                      return lastIndex(st);
                                  };
                                  if (v instanceof Next) {
                                      if (st.highlightedIndex instanceof Data_Maybe.Just && st.highlightedIndex.value0 !== lastIndex(st)) {
                                          return st.highlightedIndex.value0 + 1 | 0;
                                      };
                                      return 0;
                                  };
                                  throw new Error("Failed pattern match at Select (line 330, column 23 - line 338, column 5): " + [ v.constructor.name ]);
                              };
                          };
                          return function (v) {
                              if (v instanceof Initialize) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v1) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                          var $54 = {};
                                          for (var $55 in v2) {
                                              if ({}.hasOwnProperty.call(v2, $55)) {
                                                  $54[$55] = v2[$55];
                                              };
                                          };
                                          $54.debounceRef = new Data_Maybe.Just(v1);
                                          return $54;
                                      }))(function () {
                                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v.value0)(handleAction$prime);
                                      });
                                  });
                              };
                              if (v instanceof Search) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read)(v1.debounceRef))))(function (v2) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                              var $60 = {};
                                              for (var $61 in v3) {
                                                  if ({}.hasOwnProperty.call(v3, $61)) {
                                                      $60[$61] = v3[$61];
                                                  };
                                              };
                                              $60.search = v.value0;
                                              return $60;
                                          }))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(handle(new SetVisibility(On.value)))))(function () {
                                                  if (v1.inputType instanceof Text && v2 instanceof Data_Maybe.Nothing) {
                                                      return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(Data_Unit.unit)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function (v3) {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(v1.debounceTime))(function () {
                                                              return Effect_Aff_AVar.put(Data_Unit.unit)(v3);
                                                          }))))(function (v4) {
                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take(v3))))(function () {
                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(Data_Maybe.Nothing.value))(v1.debounceRef))))(function () {
                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v5) {
                                                                          var $67 = {};
                                                                          for (var $68 in v5) {
                                                                              if ({}.hasOwnProperty.call(v5, $68)) {
                                                                                  $67[$68] = v5[$68];
                                                                              };
                                                                          };
                                                                          $67.highlightedIndex = new Data_Maybe.Just(0);
                                                                          return $67;
                                                                      }))(function () {
                                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v5) {
                                                                              return handleEvent(new Searched(v5.search));
                                                                          });
                                                                      });
                                                                  });
                                                              }))))(function () {
                                                                  return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(new Data_Maybe.Just({
                                                                      "var": v3,
                                                                      fiber: v4
                                                                  })))(v1.debounceRef)));
                                                              });
                                                          });
                                                      }));
                                                  };
                                                  if (v1.inputType instanceof Text && v2 instanceof Data_Maybe.Just) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.killFiber(Effect_Exception.error("Time's up!"))(v2.value0.fiber))))(function () {
                                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(v1.debounceTime))(function () {
                                                              return Effect_Aff_AVar.put(Data_Unit.unit)(v2["value0"]["var"]);
                                                          }))))(function (v3) {
                                                              return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(new Data_Maybe.Just({
                                                                  "var": v2["value0"]["var"],
                                                                  fiber: v3
                                                              })))(v1.debounceRef)));
                                                          });
                                                      });
                                                  };
                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                              });
                                          });
                                      });
                                  });
                              };
                              if (v instanceof Highlight) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqVisibility)(v1.visibility)(On.value))(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                          var $75 = {};
                                          for (var $76 in v2) {
                                              if ({}.hasOwnProperty.call(v2, $76)) {
                                                  $75[$76] = v2[$76];
                                              };
                                          };
                                          $75.highlightedIndex = Data_Maybe.Just.create(getTargetIndex(v1)(v.value0));
                                          return $75;
                                      }));
                                  });
                              };
                              if (v instanceof Select) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v.value1)(function ($108) {
                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent($108)));
                                  }))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.eq(eqVisibility)(v1.visibility)(On.value))((function () {
                                              if (v.value0 instanceof Index) {
                                                  return handleEvent(new Selected(v.value0.value0));
                                              };
                                              if (v.value0 instanceof Next) {
                                                  return handleEvent(Selected.create(getTargetIndex(v1)(v.value0)));
                                              };
                                              if (v.value0 instanceof Prev) {
                                                  return handleEvent(Selected.create(getTargetIndex(v1)(v.value0)));
                                              };
                                              throw new Error("Failed pattern match at Select (line 274, column 32 - line 277, column 64): " + [ v.value0.constructor.name ]);
                                          })());
                                      });
                                  });
                              };
                              if (v instanceof ToggleClick) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0))))(function () {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                          if (v1.visibility instanceof On) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handle(new Focus(false)))(function () {
                                                  return handle(new SetVisibility(Off.value));
                                              });
                                          };
                                          if (v1.visibility instanceof Off) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handle(new Focus(true)))(function () {
                                                  return handle(new SetVisibility(On.value));
                                              });
                                          };
                                          throw new Error("Failed pattern match at Select (line 282, column 5 - line 288, column 34): " + [ v1.visibility.constructor.name ]);
                                      });
                                  });
                              };
                              if (v instanceof Focus) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("select-input"))(function (v1) {
                                      return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1)(function (el) {
                                          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))((function () {
                                              if (v.value0) {
                                                  return Web_HTML_HTMLElement.focus(el);
                                              };
                                              return Web_HTML_HTMLElement.blur(el);
                                          })());
                                      });
                                  });
                              };
                              if (v instanceof Key) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.fork(handle(new SetVisibility(On.value)))))(function () {
                                      var preventIt = Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_KeyboardEvent.toEvent(v.value0)));
                                      var v1 = Web_UIEvent_KeyboardEvent.code(v.value0);
                                      if (v1 === "ArrowUp") {
                                          return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(handle(new Highlight(Prev.value)));
                                      };
                                      if (v1 === "ArrowDown") {
                                          return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(preventIt)(handle(new Highlight(Next.value)));
                                      };
                                      if (v1 === "Escape") {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("select-input"))(function (v2) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v2)(function ($109) {
                                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_HTML_HTMLElement.blur($109));
                                                  });
                                              });
                                          });
                                      };
                                      if (v1 === "Enter") {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(preventIt)(function () {
                                                  return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v2.highlightedIndex)(function (ix) {
                                                      return handle(new Select(new Index(ix), Data_Maybe.Nothing.value));
                                                  });
                                              });
                                          });
                                      };
                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                  });
                              };
                              if (v instanceof PreventClick) {
                                  return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Web_Event_Event.preventDefault(Web_UIEvent_MouseEvent.toEvent(v.value0)));
                              };
                              if (v instanceof SetVisibility) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v2) {
                                      return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqVisibility)(v2.visibility)(v.value0))(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                          var $96 = {};
                                          for (var $97 in v3) {
                                              if ({}.hasOwnProperty.call(v3, $97)) {
                                                  $96[$97] = v3[$97];
                                              };
                                          };
                                          $96.visibility = v.value0;
                                          $96.highlightedIndex = new Data_Maybe.Just(0);
                                          return $96;
                                      }))(function () {
                                          return handleEvent(new VisibilityChanged(v.value0));
                                      }));
                                  });
                              };
                              if (v instanceof Action) {
                                  return handleAction$prime(v.value0);
                              };
                              throw new Error("Failed pattern match at Select (line 224, column 42 - line 324, column 34): " + [ v.constructor.name ]);
                          };
                      };
                  };
              };
          };
      };
  }; 
  var defaultSpec = {
      render: Data_Function["const"](Halogen_HTML_Core.text(Data_Monoid.mempty(Data_Monoid.monoidString))),
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      handleEvent: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var component = function (dictMonadAff) {
      return function (dictLacks) {
          return function (dictLacks1) {
              return function (dictLacks2) {
                  return function (mkInput) {
                      return function (spec) {
                          var initialState = (function () {
                              var pipeline = Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.modify()()(new Data_Symbol.IsSymbol(function () {
                                  return "search";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.fromMaybe("")))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.modify()()(new Data_Symbol.IsSymbol(function () {
                                  return "debounceTime";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.fromMaybe(Data_Monoid.mempty(Data_Time_Duration.monoidMilliseconds))))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                  return undefined;
                              })(dictLacks))(new Data_Symbol.IsSymbol(function () {
                                  return "debounceRef";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                  return undefined;
                              })(dictLacks1))(new Data_Symbol.IsSymbol(function () {
                                  return "visibility";
                              }))(Data_Symbol.SProxy.value)(Off.value))(Record_Builder.insert()((function () {
                                  return undefined;
                              })(dictLacks2))(new Data_Symbol.IsSymbol(function () {
                                  return "highlightedIndex";
                              }))(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value)))));
                              return Record_Builder.build(pipeline);
                          })();
                          return Halogen_Component.mkComponent({
                              initialState: function ($110) {
                                  return initialState(mkInput($110));
                              },
                              render: spec.render,
                              "eval": Halogen_Component.mkEval({
                                  handleQuery: handleQuery(dictMonadAff)(spec.handleQuery),
                                  handleAction: handleAction(dictMonadAff)(dictLacks)(dictLacks1)(dictLacks2)(spec.handleAction)(spec.handleEvent),
                                  initialize: new Data_Maybe.Just(new Initialize(spec.initialize)),
                                  receive: function ($111) {
                                      return Data_Functor.map(Data_Maybe.functorMaybe)(Action.create)(spec.receive($111));
                                  },
                                  finalize: Data_Functor.map(Data_Maybe.functorMaybe)(Action.create)(spec.finalize)
                              })
                          });
                      };
                  };
              };
          };
      };
  };
  exports["Search"] = Search;
  exports["Highlight"] = Highlight;
  exports["Select"] = Select;
  exports["ToggleClick"] = ToggleClick;
  exports["Focus"] = Focus;
  exports["Key"] = Key;
  exports["PreventClick"] = PreventClick;
  exports["SetVisibility"] = SetVisibility;
  exports["Initialize"] = Initialize;
  exports["Action"] = Action;
  exports["Send"] = Send;
  exports["Query"] = Query;
  exports["Searched"] = Searched;
  exports["Selected"] = Selected;
  exports["VisibilityChanged"] = VisibilityChanged;
  exports["Prev"] = Prev;
  exports["Next"] = Next;
  exports["Index"] = Index;
  exports["Off"] = Off;
  exports["On"] = On;
  exports["Text"] = Text;
  exports["Toggle"] = Toggle;
  exports["defaultSpec"] = defaultSpec;
  exports["component"] = component;
  exports["handleQuery"] = handleQuery;
  exports["handleAction"] = handleAction;
  exports["eqVisibility"] = eqVisibility;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Select.Setters"] = $PS["Select.Setters"] || {};
  var exports = $PS["Select.Setters"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Select = $PS["Select"];                
  var setToggleProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onFocus(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.On.value));
  }), Halogen_HTML_Events.onMouseDown(function ($6) {
      return Data_Maybe.Just.create(Select.ToggleClick.create($6));
  }), Halogen_HTML_Events.onKeyDown(function ($7) {
      return Data_Maybe.Just.create(Select.Key.create($7));
  }), Halogen_HTML_Events.onBlur(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.Off.value));
  }), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.ref("select-input") ]);
  var setItemProps = function (index) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onMouseDown(function (ev) {
          return new Data_Maybe.Just(new Select.Select(new Select.Index(index), new Data_Maybe.Just(ev)));
      }), Halogen_HTML_Events.onMouseOver(function (v) {
          return Data_Maybe.Just.create(new Select.Highlight(new Select.Index(index)));
      }) ]);
  };
  var setInputProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onFocus(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.On.value));
  }), Halogen_HTML_Events.onKeyDown(function ($8) {
      return Data_Maybe.Just.create(Select.Key.create($8));
  }), Halogen_HTML_Events.onValueInput(function ($9) {
      return Data_Maybe.Just.create(Select.Search.create($9));
  }), Halogen_HTML_Events.onMouseDown(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.On.value));
  }), Halogen_HTML_Events.onBlur(function (v) {
      return Data_Maybe.Just.create(new Select.SetVisibility(Select.Off.value));
  }), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.ref("select-input") ]);
  var setContainerProps = Data_Semigroup.append(Data_Semigroup.semigroupArray)([ Halogen_HTML_Events.onMouseDown(function ($10) {
      return Data_Maybe.Just.create(Select.PreventClick.create($10));
  }) ]);
  exports["setToggleProps"] = setToggleProps;
  exports["setInputProps"] = setInputProps;
  exports["setItemProps"] = setItemProps;
  exports["setContainerProps"] = setContainerProps;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.App.UI.Dropdown"] = $PS["Example.App.UI.Dropdown"] || {};
  var exports = $PS["Example.App.UI.Dropdown"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];                
  var Clear = (function () {
      function Clear(value0) {
          this.value0 = value0;
      };
      Clear.create = function (value0) {
          return new Clear(value0);
      };
      return Clear;
  })();
  var Selected = (function () {
      function Selected(value0) {
          this.value0 = value0;
      };
      Selected.create = function (value0) {
          return new Selected(value0);
      };
      return Selected;
  })();
  var Cleared = (function () {
      function Cleared() {

      };
      Cleared.value = new Cleared();
      return Cleared;
  })();
  var toggle = function (dictToText) {
      return function (props) {
          return function (st) {
              return Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("dropdown-trigger") ])([ Example_App_UI_Element.button(Select_Setters.setToggleProps(props))([ Halogen_HTML_Core.text(Data_Maybe.fromMaybe(st.placeholder)(Data_Functor.map(Data_Maybe.functorMaybe)(Example_App_Validation.toText(dictToText))(st.selected))) ]) ]);
          };
      };
  };
  var menu = function (dictToText) {
      return function (st) {
          return Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("dropdown-menu") ])([ (function () {
              var $14 = Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.Off.value);
              if ($14) {
                  return Halogen_HTML_Core.text("");
              };
              return Halogen_HTML_Elements.div(Select_Setters.setContainerProps([ Example_App_UI_Element.class_("dropdown-content") ]))(Data_Array.mapWithIndex(function (ix) {
                  return function (item) {
                      return Halogen_HTML_Elements.span(Select_Setters.setItemProps(ix)((function () {
                          var v = Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(new Data_Maybe.Just(ix))(st.highlightedIndex);
                          if (v) {
                              return [ Example_App_UI_Element.class_("dropdown-item has-background-link has-text-white-bis") ];
                          };
                          return [ Example_App_UI_Element.class_("dropdown-item") ];
                      })()))([ Halogen_HTML_Core.text(Example_App_Validation.toText(dictToText)(item)) ]);
                  };
              })(st.available));
          })() ]);
      };
  };
  var spec = function (dictMonadAff) {
      return function (dictToText) {
          return function (dictEq) {
              var render = function (st) {
                  return Halogen_HTML_Elements.div([ (function () {
                      var $16 = Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.On.value);
                      if ($16) {
                          return Example_App_UI_Element.class_("dropdown is-active");
                      };
                      return Example_App_UI_Element.class_("dropdown");
                  })() ])([ toggle(dictToText)([  ])(st), menu(dictToText)(st) ]);
              };
              var handleQuery = function (v) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $18 = {};
                      for (var $19 in st) {
                          if ({}.hasOwnProperty.call(st, $19)) {
                              $18[$19] = st[$19];
                          };
                      };
                      $18.selected = Data_Maybe.Nothing.value;
                      $18.available = st.items;
                      return $18;
                  }))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(Cleared.value))(function () {
                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value0));
                      });
                  });
              };
              var handleEvent = function (v) {
                  if (v instanceof Select.Selected) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                          var mbItem = Data_Array.index(v1.available)(v.value0);
                          return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(mbItem)(function (item) {
                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                  var $24 = {};
                                  for (var $25 in v2) {
                                      if ({}.hasOwnProperty.call(v2, $25)) {
                                          $24[$25] = v2[$25];
                                      };
                                  };
                                  $24.selected = new Data_Maybe.Just(item);
                                  $24.available = Data_Array.difference(dictEq)(v1.items)([ item ]);
                                  $24.visibility = Select.Off.value;
                                  return $24;
                              }))(function () {
                                  return Halogen_Query_HalogenM.raise(new Selected(item));
                              });
                          });
                      });
                  };
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
              };
              return {
                  render: render,
                  handleAction: Select.defaultSpec.handleAction,
                  handleQuery: handleQuery,
                  handleEvent: handleEvent,
                  receive: Select.defaultSpec.receive,
                  initialize: Select.defaultSpec.initialize,
                  finalize: Select.defaultSpec.finalize
              };
          };
      };
  };
  var input = function (v) {
      return {
          inputType: Select.Toggle.value,
          search: Data_Maybe.Nothing.value,
          debounceTime: Data_Maybe.Nothing.value,
          getItemCount: function ($31) {
              return Data_Array.length((function (v1) {
                  return v1.items;
              })($31));
          },
          selected: Data_Maybe.Nothing.value,
          available: v.items,
          items: v.items,
          placeholder: v.placeholder
      };
  };
  var clear = new Select.Query(Halogen_Query.tell(Clear.create));
  var _dropdown = Data_Symbol.SProxy.value;
  exports["_dropdown"] = _dropdown;
  exports["Clear"] = Clear;
  exports["clear"] = clear;
  exports["input"] = input;
  exports["Selected"] = Selected;
  exports["Cleared"] = Cleared;
  exports["spec"] = spec;
  exports["toggle"] = toggle;
  exports["menu"] = menu;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.App.UI.Typeahead"] = $PS["Example.App.UI.Typeahead"] || {};
  var exports = $PS["Example.App.UI.Typeahead"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Example_App_UI_Dropdown = $PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Select = $PS["Select"];
  var Select_Setters = $PS["Select.Setters"];                
  var GetAvailableItems = (function () {
      function GetAvailableItems(value0) {
          this.value0 = value0;
      };
      GetAvailableItems.create = function (value0) {
          return new GetAvailableItems(value0);
      };
      return GetAvailableItems;
  })();
  var Clear = (function () {
      function Clear(value0) {
          this.value0 = value0;
      };
      Clear.create = function (value0) {
          return new Clear(value0);
      };
      return Clear;
  })();
  var SelectionsChanged = (function () {
      function SelectionsChanged(value0) {
          this.value0 = value0;
      };
      SelectionsChanged.create = function (value0) {
          return new SelectionsChanged(value0);
      };
      return SelectionsChanged;
  })();
  var Remove = (function () {
      function Remove(value0) {
          this.value0 = value0;
      };
      Remove.create = function (value0) {
          return new Remove(value0);
      };
      return Remove;
  })();
  var spec$prime = function (dictMonadAff) {
      return function (dictFunctor) {
          return function (dictMonoid) {
              return function (dictToText) {
                  return function (dictEq) {
                      return function (select$prime) {
                          return function (remove$prime) {
                              return function (filter$prime) {
                                  return function (render$prime) {
                                      var handleQuery = function (v) {
                                          if (v instanceof Clear) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                  var $34 = {};
                                                  for (var $35 in st) {
                                                      if ({}.hasOwnProperty.call(st, $35)) {
                                                          $34[$35] = st[$35];
                                                      };
                                                  };
                                                  $34.selected = Data_Monoid.mempty(dictMonoid);
                                                  $34.available = st.items;
                                                  $34.search = "";
                                                  return $34;
                                              }))(function (v1) {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new SelectionsChanged(v1.selected)))(function () {
                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value0));
                                                  });
                                              });
                                          };
                                          if (v instanceof GetAvailableItems) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(v1.available)));
                                              });
                                          };
                                          throw new Error("Failed pattern match at Example.App.UI.Typeahead (line 196, column 17 - line 204, column 35): " + [ v.constructor.name ]);
                                      };
                                      var handleEvent = function (v) {
                                          if (v instanceof Select.Searched) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                  var items = Data_Array.filter(function ($72) {
                                                      return Data_String_CodeUnits.contains(v.value0)(Example_App_Validation.toText(dictToText)($72));
                                                  })(v1.items);
                                                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                      var $43 = {};
                                                      for (var $44 in v2) {
                                                          if ({}.hasOwnProperty.call(v2, $44)) {
                                                              $43[$44] = v2[$44];
                                                          };
                                                      };
                                                      $43.available = filter$prime(items)(v1.selected);
                                                      return $43;
                                                  });
                                              });
                                          };
                                          if (v instanceof Select.Selected) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                  var selected$prime = select$prime(v.value0)(v1.available)(v1.selected);
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                      var $48 = {};
                                                      for (var $49 in v2) {
                                                          if ({}.hasOwnProperty.call(v2, $49)) {
                                                              $48[$49] = v2[$49];
                                                          };
                                                      };
                                                      $48.selected = selected$prime;
                                                      $48.available = filter$prime(v1.available)(selected$prime);
                                                      $48.visibility = Select.Off.value;
                                                      return $48;
                                                  }))(function () {
                                                      return Halogen_Query_HalogenM.raise(new SelectionsChanged(selected$prime));
                                                  });
                                              });
                                          };
                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
                                      };
                                      var handleAction = function (v) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                              var selected$prime = remove$prime(v.value0)(v1.selected);
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                  var $54 = {};
                                                  for (var $55 in v2) {
                                                      if ({}.hasOwnProperty.call(v2, $55)) {
                                                          $54[$55] = v2[$55];
                                                      };
                                                  };
                                                  $54.selected = selected$prime;
                                                  $54.available = filter$prime(v1.items)(selected$prime);
                                                  return $54;
                                              }))(function () {
                                                  return Halogen_Query_HalogenM.raise(new SelectionsChanged(selected$prime));
                                              });
                                          });
                                      };
                                      return {
                                          render: render$prime,
                                          handleAction: handleAction,
                                          handleQuery: handleQuery,
                                          handleEvent: handleEvent,
                                          receive: Select.defaultSpec.receive,
                                          initialize: Select.defaultSpec.initialize,
                                          finalize: Select.defaultSpec.finalize
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var remove = function ($73) {
      return Select.Action.create(Remove.create($73));
  };
  var single = function (dictMonadAff) {
      return function (dictToText) {
          return function (dictEq) {
              return function (dictSemigroup) {
                  var render = function (st) {
                      if (st.selected instanceof Data_Maybe.Just) {
                          return Halogen_HTML_Elements.div([ (function () {
                              var $59 = Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.On.value);
                              if ($59) {
                                  return Example_App_UI_Element.class_("dropdown is-active");
                              };
                              return Example_App_UI_Element.class_("dropdown is-flex");
                          })() ])([ Example_App_UI_Dropdown.toggle(dictToText)([ Halogen_HTML_Events.onClick(function (v) {
                              return Data_Maybe.Just.create(remove(st.selected.value0));
                          }) ])(st), Example_App_UI_Dropdown.menu(dictToText)(st) ]);
                      };
                      if (st.selected instanceof Data_Maybe.Nothing) {
                          return Halogen_HTML_Elements.div([ (function () {
                              var $61 = Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.On.value);
                              if ($61) {
                                  return Example_App_UI_Element.class_("dropdown is-flex is-active");
                              };
                              return Example_App_UI_Element.class_("dropdown is-flex");
                          })() ])([ Halogen_HTML_Elements.input(Select_Setters.setInputProps([ Halogen_HTML_Properties.placeholder(st.placeholder), Halogen_HTML_Properties.value(st.search), Example_App_UI_Element.class_("input") ])), Example_App_UI_Dropdown.menu(dictToText)(st) ]);
                      };
                      throw new Error("Failed pattern match at Example.App.UI.Typeahead (line 85, column 15 - line 109, column 10): " + [ st.selected.constructor.name ]);
                  };
                  var filter$prime = function (items) {
                      return function (v) {
                          if (v instanceof Data_Maybe.Nothing) {
                              return items;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Array.filter(function (v1) {
                                  return Data_Eq.eq(dictEq)(v1)(v.value0);
                              })(items);
                          };
                          throw new Error("Failed pattern match at Example.App.UI.Typeahead (line 82, column 3 - line 82, column 32): " + [ items.constructor.name, v.constructor.name ]);
                      };
                  };
                  return spec$prime(dictMonadAff)(Data_Maybe.functorMaybe)(Data_Maybe.monoidMaybe(dictSemigroup))(dictToText)(dictEq)(function (i) {
                      return function (av) {
                          return Data_Function["const"](Data_Array.index(av)(i));
                      };
                  })(Data_Function["const"](Data_Function["const"](Data_Maybe.Nothing.value)))(filter$prime)(render);
              };
          };
      };
  };
  var multi = function (dictMonadAff) {
      return function (dictToText) {
          return function (dictEq) {
              var selectByIndex = function (ix) {
                  return function (available) {
                      return function (selected) {
                          var v = Data_Array.index(available)(ix);
                          if (v instanceof Data_Maybe.Nothing) {
                              return selected;
                          };
                          if (v instanceof Data_Maybe.Just) {
                              return Data_Array.cons(v.value0)(selected);
                          };
                          throw new Error("Failed pattern match at Example.App.UI.Typeahead (line 119, column 41 - line 121, column 33): " + [ v.constructor.name ]);
                      };
                  };
              };
              var render = function (st) {
                  return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div([ (function () {
                      var $67 = Data_Array.length(st.selected) > 0;
                      if ($67) {
                          return Example_App_UI_Element.class_("panel is-marginless");
                      };
                      return Example_App_UI_Element.class_("panel is-hidden");
                  })() ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(st.selected)(function (i) {
                      return Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("panel-block has-background-white"), Halogen_HTML_Events.onClick(function (v) {
                          return Data_Maybe.Just.create(remove(i));
                      }) ])([ Halogen_HTML_Core.text(Example_App_Validation.toText(dictToText)(i)) ]);
                  })), Halogen_HTML_Elements.div([ (function () {
                      var $68 = Data_Eq.eq(Select.eqVisibility)(st.visibility)(Select.On.value);
                      if ($68) {
                          return Example_App_UI_Element.class_("dropdown is-flex is-active");
                      };
                      return Example_App_UI_Element.class_("dropdown is-flex");
                  })() ])([ Halogen_HTML_Elements.input(Select_Setters.setInputProps([ Example_App_UI_Element.class_("input"), Halogen_HTML_Properties.placeholder(st.placeholder), Halogen_HTML_Properties.value(st.search) ])), Example_App_UI_Dropdown.menu(dictToText)(st) ]) ]);
              };
              return spec$prime(dictMonadAff)(Data_Functor.functorArray)(Data_Monoid.monoidArray)(dictToText)(dictEq)(selectByIndex)(function ($74) {
                  return Data_Array.filter(Data_Eq.notEq(dictEq)($74));
              })(Data_Array.difference(dictEq))(render);
          };
      };
  };
  var input = function (dictMonoid) {
      return function (v) {
          return {
              inputType: Select.Text.value,
              search: Data_Maybe.Nothing.value,
              debounceTime: Data_Maybe.Nothing.value,
              getItemCount: function ($75) {
                  return Data_Array.length((function (v1) {
                      return v1.items;
                  })($75));
              },
              selected: Data_Monoid.mempty(dictMonoid),
              available: v.items,
              items: v.items,
              placeholder: v.placeholder
          };
      };
  };
  var getAvailableItems = function ($76) {
      return Select.Query.create(GetAvailableItems.create($76));
  };
  var clear = new Select.Query(new Clear(Data_Unit.unit));
  var _typeaheadSingle = Data_Symbol.SProxy.value;
  var _typeaheadMulti = Data_Symbol.SProxy.value;
  var _typeahead = Data_Symbol.SProxy.value;
  exports["_typeahead"] = _typeahead;
  exports["_typeaheadSingle"] = _typeaheadSingle;
  exports["_typeaheadMulti"] = _typeaheadMulti;
  exports["GetAvailableItems"] = GetAvailableItems;
  exports["Clear"] = Clear;
  exports["getAvailableItems"] = getAvailableItems;
  exports["clear"] = clear;
  exports["Remove"] = Remove;
  exports["remove"] = remove;
  exports["input"] = input;
  exports["SelectionsChanged"] = SelectionsChanged;
  exports["single"] = single;
  exports["multi"] = multi;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Internal.Transform"] = $PS["Formless.Internal.Transform"] || {};
  var exports = $PS["Formless.Internal.Transform"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Record = $PS["Record"];
  var Record_Builder = $PS["Record.Builder"];
  var Record_Unsafe = $PS["Record.Unsafe"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var ValidateAll = function (validateAllBuilder) {
      this.validateAllBuilder = validateAllBuilder;
  };
  var SetFormFieldsTouched = function (setFormFieldsTouchedBuilder) {
      this.setFormFieldsTouchedBuilder = setFormFieldsTouchedBuilder;
  };
  var Row1Cons = function (Cons0, Lacks1) {
      this.Cons0 = Cons0;
      this.Lacks1 = Lacks1;
  };
  var ReplaceFormFieldInputs = function (replaceFormFieldInputsBuilder) {
      this.replaceFormFieldInputsBuilder = replaceFormFieldInputsBuilder;
  };
  var ModifyAll = function (modifyAllBuilder) {
      this.modifyAllBuilder = modifyAllBuilder;
  };
  var InputFieldsToFormFields = function (inputFieldsToFormFieldsBuilder) {
      this.inputFieldsToFormFieldsBuilder = inputFieldsToFormFieldsBuilder;
  };
  var FormFieldsToInputFields = function (formFieldsToInputFieldsBuilder) {
      this.formFieldsToInputFieldsBuilder = formFieldsToInputFieldsBuilder;
  };
  var FormFieldToMaybeOutput = function (formFieldsToMaybeOutputBuilder) {
      this.formFieldsToMaybeOutputBuilder = formFieldsToMaybeOutputBuilder;
  };
  var CountErrors = function (countErrorsImpl) {
      this.countErrorsImpl = countErrorsImpl;
  };
  var AllTouched = function (allTouchedImpl) {
      this.allTouchedImpl = allTouchedImpl;
  };
  var validateAllBuilder = function (dict) {
      return dict.validateAllBuilder;
  };
  var unsafeRunValidationVariant = function (dictMonad) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictNewtype2) {
                  return function ($$var) {
                      return function (vs) {
                          return function (rec) {
                              var label = (function () {
                                  var v = Data_Newtype.unwrap(dictNewtype)($$var);
                                  return v.type;
                              })();
                              var rec2 = (function () {
                                  var v = Record_Unsafe.unsafeGet(label)(Data_Newtype.unwrap(dictNewtype1)(rec));
                                  return Control_Bind.bind(dictMonad.Bind1())(Formless_Validation.runValidation(dictMonad)(Record_Unsafe.unsafeGet(label)(Data_Newtype.unwrap(dictNewtype2)(vs)))(rec)(v.input))(function (v1) {
                                      var rec$prime = Record_Unsafe.unsafeSet(label)(Formless_Types_Form.FormField({
                                          input: v.input,
                                          touched: v.touched,
                                          result: Formless_Data_FormFieldResult.fromEither(v1)
                                      }))(Data_Newtype.unwrap(dictNewtype1)(rec));
                                      return Control_Applicative.pure(dictMonad.Applicative0())(Data_Newtype.wrap(dictNewtype1)(rec$prime));
                                  });
                              })();
                              return rec2;
                          };
                      };
                  };
              };
          };
      };
  };
  var unsafeModifyInputVariant = function (dictNewtype) {
      return function (dictNewtype1) {
          return function (f) {
              return function ($$var) {
                  return function (rec) {
                      var rep = (function () {
                          var v = Data_Newtype.unwrap(dictNewtype)($$var);
                          return new Data_Tuple.Tuple(v.type, v.value);
                      })();
                      var val = (function () {
                          var v = Record_Unsafe.unsafeGet(Data_Tuple.fst(rep))(Data_Newtype.unwrap(dictNewtype1)(rec));
                          return Formless_Types_Form.FormField({
                              input: Data_Newtype.unwrap(Formless_Types_Form.newtypeInputFunction)(Data_Tuple.snd(rep))(v.input),
                              touched: true,
                              result: f(v.result)
                          });
                      })();
                      return Data_Newtype.wrap(dictNewtype1)(Record_Unsafe.unsafeSet(Data_Tuple.fst(rep))(val)(Data_Newtype.unwrap(dictNewtype1)(rec)));
                  };
              };
          };
      };
  };
  var setFormFieldsTouchedNil = new SetFormFieldsTouched(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var setFormFieldsTouchedBuilder = function (dict) {
      return dict.setFormFieldsTouchedBuilder;
  };
  var setFormFieldsTouchedCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictSetFormFieldsTouched) {
              return function (dictRow1Cons) {
                  return new SetFormFieldsTouched(function (v) {
                      return function (r) {
                          var rest = setFormFieldsTouchedBuilder(dictSetFormFieldsTouched)(Type_Data_RowList.RLProxy.value)(r);
                          var val = Data_Newtype.over(Formless_Types_Form.newtypeFormField)(Formless_Types_Form.newtypeFormField)(Formless_Types_Form.FormField)(function (v1) {
                              return {
                                  touched: true,
                                  input: v1.input,
                                  result: v1.result
                              };
                          })(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var row1Cons = function (dictCons) {
      return function (dictLacks) {
          return new Row1Cons(function () {
              return dictCons;
          }, function () {
              return dictLacks;
          });
      };
  };
  var replaceFormFieldInputsTouchedNil = new ReplaceFormFieldInputs(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      };
  });
  var replaceFormFieldInputsBuilder = function (dict) {
      return dict.replaceFormFieldInputsBuilder;
  };
  var replaceFormFieldInputsTouchedCons = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return function (dictRow1Cons) {
                          return function (dictReplaceFormFieldInputs) {
                              return new ReplaceFormFieldInputs(function (ir) {
                                  return function (v) {
                                      return function (fr) {
                                          var rest = replaceFormFieldInputsBuilder(dictReplaceFormFieldInputs)(ir)(Type_Data_RowList.RLProxy.value)(fr);
                                          var f = Data_Newtype.unwrap(dictNewtype1)(Record.get(dictIsSymbol)(dictCons1)(Data_Symbol.SProxy.value)(fr));
                                          var i = Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(ir);
                                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(Formless_Types_Form.FormField({
                                              input: Data_Newtype.unwrap(dictNewtype)(i),
                                              touched: false,
                                              result: Formless_Data_FormFieldResult.NotValidated.value
                                          }));
                                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var nilCountErrors = new CountErrors(function (v) {
      return function (v1) {
          return 0;
      };
  });
  var nilAllTouched = new AllTouched(function (v) {
      return function (v1) {
          return true;
      };
  });
  var modifyAllNil = new ModifyAll(function (v) {
      return function (v1) {
          return function (v2) {
              return Control_Category.identity(Record_Builder.categoryBuilder);
          };
      };
  });
  var modifyAllBuilder = function (dict) {
      return dict.modifyAllBuilder;
  };
  var modifyAllCons = function (dictIsSymbol) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return function (dictRow1Cons) {
                          return function (dictModifyAll) {
                              return new ModifyAll(function (ifs) {
                                  return function (v) {
                                      return function (r) {
                                          var rest = modifyAllBuilder(dictModifyAll)(ifs)(Type_Data_RowList.RLProxy.value)(r);
                                          var f = Data_Newtype.unwrap(dictNewtype)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(ifs));
                                          var field = Record.get(dictIsSymbol)(dictCons1)(Data_Symbol.SProxy.value)(r);
                                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(Data_Newtype.over(dictNewtype1)(dictNewtype1)(Formless_Types_Form.FormField)(function (x) {
                                              return {
                                                  input: f(x.input),
                                                  result: x.result,
                                                  touched: x.touched
                                              };
                                          })(field));
                                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var inputFieldsToInputNil = new FormFieldsToInputFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var inputFieldsToFormFieldsNil = new InputFieldsToFormFields(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var inputFieldsToFormFieldsBuilder = function (dict) {
      return dict.inputFieldsToFormFieldsBuilder;
  };
  var inputFieldsToFormFieldsCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictInputFieldsToFormFields) {
              return function (dictRow1Cons) {
                  return new InputFieldsToFormFields(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return {
                                  input: v1,
                                  touched: false,
                                  result: Formless_Data_FormFieldResult.NotValidated.value
                              };
                          };
                          var rest = inputFieldsToFormFieldsBuilder(dictInputFieldsToFormFields)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var fromScratch = Data_Functor.flap(Data_Functor.functorFn)(Record_Builder.build)({});
  var inputFieldsToFormFields = function (dictRowToList) {
      return function (dictInputFieldsToFormFields) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = inputFieldsToFormFieldsBuilder(dictInputFieldsToFormFields)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                  };
              };
          };
      };
  };
  var modifyAll = function (dictRowToList) {
      return function (dictModifyAll) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (ifs) {
                      return function (fs) {
                          var builder = modifyAllBuilder(dictModifyAll)(Data_Newtype.unwrap(dictNewtype)(ifs))(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(fs));
                          return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                      };
                  };
              };
          };
      };
  };
  var replaceFormFieldInputs = function (dictRowToList) {
      return function (dictReplaceFormFieldInputs) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (is) {
                      return function (fs) {
                          var builder = replaceFormFieldInputsBuilder(dictReplaceFormFieldInputs)(Data_Newtype.unwrap(dictNewtype)(is))(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(fs));
                          return Data_Newtype.wrap(dictNewtype1)(fromScratch(builder));
                      };
                  };
              };
          };
      };
  };
  var setFormFieldsTouched = function (dictRowToList) {
      return function (dictSetFormFieldsTouched) {
          return function (dictNewtype) {
              return function (r) {
                  var builder = setFormFieldsTouchedBuilder(dictSetFormFieldsTouched)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                  return Data_Newtype.wrap(dictNewtype)(fromScratch(builder));
              };
          };
      };
  };
  var validateAll = function (dictRowToList) {
      return function (dictMonad) {
          return function (dictValidateAll) {
              return function (dictNewtype) {
                  return function (dictNewtype1) {
                      return function (vs) {
                          return function (fs) {
                              var builder = validateAllBuilder(dictValidateAll)(Data_Newtype.unwrap(dictNewtype)(vs))(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(fs));
                              return Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(Data_Newtype.wrap(dictNewtype1))(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(fromScratch)(builder));
                          };
                      };
                  };
              };
          };
      };
  };
  var formFieldsToMaybeOutputNil = new FormFieldToMaybeOutput(function (v) {
      return function (v1) {
          return new Data_Maybe.Just(Control_Category.identity(Record_Builder.categoryBuilder));
      };
  });
  var formFieldsToMaybeOutputBuilder = function (dict) {
      return dict.formFieldsToMaybeOutputBuilder;
  };
  var formFieldsToMaybeOutputCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictFormFieldToMaybeOutput) {
              return function (dictRow1Cons) {
                  return new FormFieldToMaybeOutput(function (v) {
                      return function (r) {
                          var rest = formFieldsToMaybeOutputBuilder(dictFormFieldToMaybeOutput)(Type_Data_RowList.RLProxy.value)(r);
                          var transform = function (v1) {
                              return function (builder$prime) {
                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(v1))(builder$prime);
                              };
                          };
                          var val = Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Types_Form.OutputField)(Formless_Data_FormFieldResult.toMaybe((Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r))).result));
                          return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(transform)(val))(rest);
                      };
                  });
              };
          };
      };
  };
  var formFieldsToMaybeOutputFields = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictNewtype1) {
              return function (dictFormFieldToMaybeOutput) {
                  return function (r) {
                      var builder = formFieldsToMaybeOutputBuilder(dictFormFieldToMaybeOutput)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)(r));
                      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap(dictNewtype1))(Data_Functor.map(Data_Maybe.functorMaybe)(fromScratch)(builder));
                  };
              };
          };
      };
  };
  var formFieldsToInputFieldsBuilder = function (dict) {
      return dict.formFieldsToInputFieldsBuilder;
  };
  var inputFieldsToInputCons = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictFormFieldsToInputFields) {
              return function (dictRow1Cons) {
                  return new FormFieldsToInputFields(function (v) {
                      return function (r) {
                          var transform = function (v1) {
                              return v1.input;
                          };
                          var rest = formFieldsToInputFieldsBuilder(dictFormFieldsToInputFields)(Type_Data_RowList.RLProxy.value)(r);
                          var val = transform(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                          var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                          return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                      };
                  });
              };
          };
      };
  };
  var formFieldsToInputFields = function (dictRowToList) {
      return function (dictFormFieldsToInputFields) {
          return function (dictNewtype) {
              return function (dictNewtype1) {
                  return function (r) {
                      var builder = formFieldsToInputFieldsBuilder(dictFormFieldsToInputFields)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype1)(r));
                      return Data_Newtype.wrap(dictNewtype)(fromScratch(builder));
                  };
              };
          };
      };
  };
  var countErrorsImpl = function (dict) {
      return dict.countErrorsImpl;
  };
  var countErrors = function (dictRowToList) {
      return function (dictCountErrors) {
          return function (dictNewtype) {
              return function ($146) {
                  return countErrorsImpl(dictCountErrors)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)($146));
              };
          };
      };
  };
  var consCountErrors = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictCountErrors) {
              return new CountErrors(function (v) {
                  return function (r) {
                      var res = (function () {
                          var v1 = (Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r))).result;
                          if (v1 instanceof Formless_Data_FormFieldResult["Error"]) {
                              return 1;
                          };
                          return 0;
                      })();
                      return res + countErrorsImpl(dictCountErrors)(Type_Data_RowList.RLProxy.value)(r) | 0;
                  };
              });
          };
      };
  };
  var applyToValidationNil = function (dictMonad) {
      return new ValidateAll(function (v) {
          return function (v1) {
              return function (v2) {
                  return Control_Applicative.pure(dictMonad.Applicative0())(Control_Category.identity(Record_Builder.categoryBuilder));
              };
          };
      });
  };
  var applyToValidationCons = function (dictIsSymbol) {
      return function (dictMonad) {
          return function (dictCons) {
              return function (dictNewtype) {
                  return function (dictCons1) {
                      return function (dictRow1Cons) {
                          return function (dictValidateAll) {
                              return new ValidateAll(function (vs) {
                                  return function (v) {
                                      return function (r) {
                                          var rest = validateAllBuilder(dictValidateAll)(vs)(Type_Data_RowList.RLProxy.value)(r);
                                          var fn = function (val$prime) {
                                              return function (rest$prime) {
                                                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val$prime))(rest$prime);
                                              };
                                          };
                                          var val = (function () {
                                              var validator = Data_Newtype.unwrap(Formless_Validation.newtypeValidation)(Record.get(dictIsSymbol)(dictCons1)(Data_Symbol.SProxy.value)(vs));
                                              var formField = Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r));
                                              return Control_Bind.bind(dictMonad.Bind1())(validator(Data_Newtype.wrap(dictNewtype)(r))(formField.input))(function (v1) {
                                                  return Control_Applicative.pure(dictMonad.Applicative0())(Data_Newtype.wrap(Formless_Types_Form.newtypeFormField)((function () {
                                                      var $142 = {};
                                                      for (var $143 in formField) {
                                                          if ({}.hasOwnProperty.call(formField, $143)) {
                                                              $142[$143] = formField[$143];
                                                          };
                                                      };
                                                      $142.result = Formless_Data_FormFieldResult.fromEither(v1);
                                                      return $142;
                                                  })()));
                                              });
                                          })();
                                          return Control_Apply.apply((dictMonad.Bind1()).Apply0())(Data_Functor.map(((dictMonad.Bind1()).Apply0()).Functor0())(fn)(val))(rest);
                                      };
                                  };
                              });
                          };
                      };
                  };
              };
          };
      };
  };
  var allTouchedImpl = function (dict) {
      return dict.allTouchedImpl;
  };
  var consAllTouched = function (dictIsSymbol) {
      return function (dictCons) {
          return function (dictAllTouched) {
              return new AllTouched(function (v) {
                  return function (r) {
                      var $145 = (Data_Newtype.unwrap(Formless_Types_Form.newtypeFormField)(Record.get(dictIsSymbol)(dictCons)(Data_Symbol.SProxy.value)(r))).touched;
                      if ($145) {
                          return allTouchedImpl(dictAllTouched)(Type_Data_RowList.RLProxy.value)(r);
                      };
                      return false;
                  };
              });
          };
      };
  };
  var allTouched = function (dictRowToList) {
      return function (dictAllTouched) {
          return function (dictNewtype) {
              return function ($147) {
                  return allTouchedImpl(dictAllTouched)(Type_Data_RowList.RLProxy.value)(Data_Newtype.unwrap(dictNewtype)($147));
              };
          };
      };
  };
  exports["allTouchedImpl"] = allTouchedImpl;
  exports["countErrorsImpl"] = countErrorsImpl;
  exports["formFieldsToInputFieldsBuilder"] = formFieldsToInputFieldsBuilder;
  exports["formFieldsToMaybeOutputBuilder"] = formFieldsToMaybeOutputBuilder;
  exports["inputFieldsToFormFieldsBuilder"] = inputFieldsToFormFieldsBuilder;
  exports["modifyAllBuilder"] = modifyAllBuilder;
  exports["replaceFormFieldInputsBuilder"] = replaceFormFieldInputsBuilder;
  exports["setFormFieldsTouchedBuilder"] = setFormFieldsTouchedBuilder;
  exports["validateAllBuilder"] = validateAllBuilder;
  exports["fromScratch"] = fromScratch;
  exports["Row1Cons"] = Row1Cons;
  exports["allTouched"] = allTouched;
  exports["countErrors"] = countErrors;
  exports["setFormFieldsTouched"] = setFormFieldsTouched;
  exports["formFieldsToInputFields"] = formFieldsToInputFields;
  exports["inputFieldsToFormFields"] = inputFieldsToFormFields;
  exports["formFieldsToMaybeOutputFields"] = formFieldsToMaybeOutputFields;
  exports["replaceFormFieldInputs"] = replaceFormFieldInputs;
  exports["modifyAll"] = modifyAll;
  exports["validateAll"] = validateAll;
  exports["unsafeModifyInputVariant"] = unsafeModifyInputVariant;
  exports["unsafeRunValidationVariant"] = unsafeRunValidationVariant;
  exports["SetFormFieldsTouched"] = SetFormFieldsTouched;
  exports["FormFieldsToInputFields"] = FormFieldsToInputFields;
  exports["InputFieldsToFormFields"] = InputFieldsToFormFields;
  exports["FormFieldToMaybeOutput"] = FormFieldToMaybeOutput;
  exports["CountErrors"] = CountErrors;
  exports["AllTouched"] = AllTouched;
  exports["ValidateAll"] = ValidateAll;
  exports["ModifyAll"] = ModifyAll;
  exports["ReplaceFormFieldInputs"] = ReplaceFormFieldInputs;
  exports["row1Cons"] = row1Cons;
  exports["setFormFieldsTouchedNil"] = setFormFieldsTouchedNil;
  exports["setFormFieldsTouchedCons"] = setFormFieldsTouchedCons;
  exports["inputFieldsToInputNil"] = inputFieldsToInputNil;
  exports["inputFieldsToInputCons"] = inputFieldsToInputCons;
  exports["inputFieldsToFormFieldsNil"] = inputFieldsToFormFieldsNil;
  exports["inputFieldsToFormFieldsCons"] = inputFieldsToFormFieldsCons;
  exports["formFieldsToMaybeOutputNil"] = formFieldsToMaybeOutputNil;
  exports["formFieldsToMaybeOutputCons"] = formFieldsToMaybeOutputCons;
  exports["nilCountErrors"] = nilCountErrors;
  exports["consCountErrors"] = consCountErrors;
  exports["nilAllTouched"] = nilAllTouched;
  exports["consAllTouched"] = consAllTouched;
  exports["applyToValidationNil"] = applyToValidationNil;
  exports["applyToValidationCons"] = applyToValidationCons;
  exports["modifyAllNil"] = modifyAllNil;
  exports["modifyAllCons"] = modifyAllCons;
  exports["replaceFormFieldInputsTouchedNil"] = replaceFormFieldInputsTouchedNil;
  exports["replaceFormFieldInputsTouchedCons"] = replaceFormFieldInputsTouchedCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Types.Component"] = $PS["Formless.Types.Component"] || {};
  var exports = $PS["Formless.Types.Component"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];                
  var Invalid = (function () {
      function Invalid() {

      };
      Invalid.value = new Invalid();
      return Invalid;
  })();
  var Incomplete = (function () {
      function Incomplete() {

      };
      Incomplete.value = new Incomplete();
      return Incomplete;
  })();
  var Valid = (function () {
      function Valid() {

      };
      Valid.value = new Valid();
      return Valid;
  })();
  var SubmitReply = (function () {
      function SubmitReply(value0) {
          this.value0 = value0;
      };
      SubmitReply.create = function (value0) {
          return new SubmitReply(value0);
      };
      return SubmitReply;
  })();
  var SendQuery = (function () {
      function SendQuery(value0) {
          this.value0 = value0;
      };
      SendQuery.create = function (value0) {
          return new SendQuery(value0);
      };
      return SendQuery;
  })();
  var AsQuery = (function () {
      function AsQuery(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AsQuery.create = function (value0) {
          return function (value1) {
              return new AsQuery(value0, value1);
          };
      };
      return AsQuery;
  })();
  var Submitted = (function () {
      function Submitted(value0) {
          this.value0 = value0;
      };
      Submitted.create = function (value0) {
          return new Submitted(value0);
      };
      return Submitted;
  })();
  var Changed = (function () {
      function Changed(value0) {
          this.value0 = value0;
      };
      Changed.create = function (value0) {
          return new Changed(value0);
      };
      return Changed;
  })();
  var InternalState = function (x) {
      return x;
  };
  var newtypeInternalState = new Data_Newtype.Newtype(function (n) {
      return n;
  }, InternalState);
  var genericValidStatus = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Invalid) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Incomplete) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Valid) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Formless.Types.Component (line 171, column 8 - line 171, column 60): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Invalid.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Incomplete.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Valid.value;
      };
      throw new Error("Failed pattern match at Formless.Types.Component (line 171, column 8 - line 171, column 60): " + [ x.constructor.name ]);
  });
  var showValidStatus = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericValidStatus)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Invalid";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Incomplete";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Valid";
  }))))));
  var functorQueryF = new Data_Functor.Functor(function (f) {
      return function (m) {
          if (m instanceof SubmitReply) {
              return new SubmitReply(Data_Functor.map(Data_Functor.functorFn)(f)(m.value0));
          };
          if (m instanceof SendQuery) {
              return new SendQuery(Data_Functor.map(Halogen_Query_ChildQuery.functorChildQuery)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(m.value0));
          };
          if (m instanceof AsQuery) {
              return new AsQuery(m.value0, f(m.value1));
          };
          throw new Error("Failed pattern match at Formless.Types.Component (line 88, column 8 - line 88, column 61): " + [ m.constructor.name ]);
      };
  });
  var eqValidStatus = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Invalid && y instanceof Invalid) {
              return true;
          };
          if (x instanceof Incomplete && y instanceof Incomplete) {
              return true;
          };
          if (x instanceof Valid && y instanceof Valid) {
              return true;
          };
          return false;
      };
  });
  var _formless = Data_Symbol.SProxy.value;
  exports["SubmitReply"] = SubmitReply;
  exports["SendQuery"] = SendQuery;
  exports["AsQuery"] = AsQuery;
  exports["InternalState"] = InternalState;
  exports["Invalid"] = Invalid;
  exports["Incomplete"] = Incomplete;
  exports["Valid"] = Valid;
  exports["Submitted"] = Submitted;
  exports["Changed"] = Changed;
  exports["_formless"] = _formless;
  exports["functorQueryF"] = functorQueryF;
  exports["newtypeInternalState"] = newtypeInternalState;
  exports["genericValidStatus"] = genericValidStatus;
  exports["eqValidStatus"] = eqValidStatus;
  exports["showValidStatus"] = showValidStatus;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Internal.Component"] = $PS["Formless.Internal.Component"] || {};
  var exports = $PS["Formless.Internal.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Record_Builder = $PS["Record.Builder"];                
  var submit = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictAllTouched) {
              return function (dictSetFormFieldsTouched) {
                  return function (dictValidateAll) {
                      return function (dictFormFieldToMaybeOutput) {
                          return function (dictValidateAll1) {
                              return function (dictNewtype) {
                                  return function (dictNewtype1) {
                                      return function (dictNewtype2) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $28 = {};
                                                  for (var $29 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $29)) {
                                                          $28[$29] = v1[$29];
                                                      };
                                                  };
                                                  $28.submitting = false;
                                                  return $28;
                                              }))(function () {
                                                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)((function () {
                                                      if (v.validity instanceof Formless_Types_Component.Valid) {
                                                          return Formless_Internal_Transform.formFieldsToMaybeOutputFields(dictRowToList)(dictNewtype)(dictNewtype1)(dictFormFieldToMaybeOutput)(v.form);
                                                      };
                                                      return Data_Maybe.Nothing.value;
                                                  })());
                                              });
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var preSubmit = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictAllTouched) {
              return function (dictSetFormFieldsTouched) {
                  return function (dictValidateAll) {
                      return function (dictFormFieldToMaybeOutput) {
                          return function (dictValidateAll1) {
                              return function (dictNewtype) {
                                  return function (dictNewtype1) {
                                      return function (dictNewtype2) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                              var $32 = {};
                                              for (var $33 in st) {
                                                  if ({}.hasOwnProperty.call(st, $33)) {
                                                      $32[$33] = st[$33];
                                                  };
                                              };
                                              $32.submitAttempts = st.submitAttempts + 1 | 0;
                                              $32.submitting = true;
                                              return $32;
                                          }))(function (v) {
                                              var internal = Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v.internal);
                                              return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(!internal.allTouched)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                  var $36 = {};
                                                  for (var $37 in v1) {
                                                      if ({}.hasOwnProperty.call(v1, $37)) {
                                                          $36[$37] = v1[$37];
                                                      };
                                                  };
                                                  $36.form = Formless_Internal_Transform.setFormFieldsTouched(dictRowToList)(dictSetFormFieldsTouched)(dictNewtype)(v.form);
                                                  $36.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v2) {
                                                      return {
                                                          allTouched: true,
                                                          debounceRef: v2.debounceRef,
                                                          initialInputs: v2.initialInputs,
                                                          validationRef: v2.validationRef,
                                                          validators: v2.validators
                                                      };
                                                  })(v.internal);
                                                  return $36;
                                              }));
                                          });
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var getPublicState = function (dictLacks) {
      return Record_Builder.build(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
          return "internal";
      }))((function () {
          return undefined;
      })(dictLacks))()(Data_Symbol.SProxy.value));
  };
  exports["getPublicState"] = getPublicState;
  exports["preSubmit"] = preSubmit;
  exports["submit"] = submit;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Internal.Debounce"] = $PS["Formless.Internal.Debounce"] || {};
  var exports = $PS["Formless.Internal.Debounce"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var debounceForm = function (dictMonadAff) {
      return function (ms) {
          return function (pre) {
              return function (post) {
                  return function (last) {
                      var readRef = function (dictMonadAff1) {
                          return function ($29) {
                              return Effect_Class.liftEffect(dictMonadAff1.MonadEffect0())(Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read)($29)));
                          };
                      };
                      var mkFiber = function (v) {
                          return Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff.forkAff(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Aff.delay(ms))(function () {
                              return Effect_Aff_AVar.put(Data_Unit.unit)(v);
                          })));
                      };
                      var killFiber$prime = function (dictMonadAff1) {
                          return function ($30) {
                              return Effect_Aff_Class.liftAff(dictMonadAff1)(Effect_Aff.killFiber(Effect_Exception.error("time's up!"))($30));
                          };
                      };
                      var atomic = function (dictMonadAff1) {
                          return function (process) {
                              return function (maybeLast) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
                                      var ref = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v.internal)).validationRef;
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(readRef(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff1))(ref))(function (v1) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(v1)(Halogen_Query_HalogenM.kill))(function () {
                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff1.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(ref)(Effect_Ref.write(Data_Maybe.Nothing.value))))(function () {
                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(process)(function (v2) {
                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                          var $18 = {};
                                                          for (var $19 in v3) {
                                                              if ({}.hasOwnProperty.call(v3, $19)) {
                                                                  $18[$19] = v3[$19];
                                                              };
                                                          };
                                                          $18.form = v2;
                                                          return $18;
                                                      }))(function () {
                                                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff1.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(ref)(Effect_Ref.write(Data_Maybe.Nothing.value))))(function () {
                                                              return Data_Foldable.for_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(maybeLast)(Control_Category.identity(Control_Category.categoryFn));
                                                          });
                                                      });
                                                  })))(function (v2) {
                                                      return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff1.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(ref)(Effect_Ref.write(new Data_Maybe.Just(v2))));
                                                  });
                                              });
                                          });
                                      });
                                  });
                              };
                          };
                      };
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
                          var vdRef = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v.internal)).validationRef;
                          var dbRef = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v.internal)).debounceRef;
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(readRef(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(vdRef))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(Halogen_Query_HalogenM.kill)))(function () {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Functor.map(Effect.functorEffect)(Control_Bind.join(Data_Maybe.bindMaybe))(Data_Traversable.traverse(Data_Traversable.traversableMaybe)(Effect.applicativeEffect)(Effect_Ref.read)(dbRef))))(function (v1) {
                                  if (v1 instanceof Data_Maybe.Nothing) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.empty))(function (v2) {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(mkFiber(v2))(function (v3) {
                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.fork(Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(Effect_Aff_AVar.take(v2))))(function () {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Effect_Ref.write(Data_Maybe.Nothing.value))(dbRef)))(function () {
                                                      return atomic(dictMonadAff)(post)(new Data_Maybe.Just(last));
                                                  });
                                              })))(function (v4) {
                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(dbRef)(Effect_Ref.write(new Data_Maybe.Just({
                                                      "var": v2,
                                                      fiber: v3
                                                  })))))(function () {
                                                      return atomic(dictMonadAff)(pre)(Data_Maybe.Nothing.value);
                                                  });
                                              });
                                          });
                                      });
                                  };
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(killFiber$prime(Halogen_Query_HalogenM.monadAffHalogenM(dictMonadAff))(v1.value0.fiber)))(function () {
                                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(mkFiber(v1["value0"]["var"]))(function (v2) {
                                              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(dbRef)(Effect_Ref.write(new Data_Maybe.Just({
                                                  "var": v1["value0"]["var"],
                                                  fiber: v2
                                              }))));
                                          });
                                      });
                                  };
                                  throw new Error("Failed pattern match at Formless.Internal.Debounce (line 40, column 3 - line 57, column 66): " + [ v1.constructor.name ]);
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  exports["debounceForm"] = debounceForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Heterogeneous.Mapping"] = $PS["Heterogeneous.Mapping"] || {};
  var exports = $PS["Heterogeneous.Mapping"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var ConstMapping = function (x) {
      return x;
  };
  var MappingWithIndex = function (mappingWithIndex) {
      this.mappingWithIndex = mappingWithIndex;
  };
  var Mapping = function (mapping) {
      this.mapping = mapping;
  };
  var MapRecordWithIndex = function (mapRecordWithIndexBuilder) {
      this.mapRecordWithIndexBuilder = mapRecordWithIndexBuilder;
  };
  var HMap = function (hmap) {
      this.hmap = hmap;
  };
  var mappingWithIndex = function (dict) {
      return dict.mappingWithIndex;
  }; 
  var mapping = function (dict) {
      return dict.mapping;
  };
  var mapRecordWithIndexNil = new MapRecordWithIndex(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var mapRecordWithIndexBuilder = function (dict) {
      return dict.mapRecordWithIndexBuilder;
  };
  var mapRecordWithIndexCons = function (dictIsSymbol) {
      return function (dictMappingWithIndex) {
          return function (dictMapRecordWithIndex) {
              return function (dictCons) {
                  return function (dictCons1) {
                      return new MapRecordWithIndex(function (v) {
                          return function (f) {
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(Record_Builder.modify(dictCons)(dictCons1)(dictIsSymbol)(Data_Symbol.SProxy.value)(mappingWithIndex(dictMappingWithIndex)(f)(Data_Symbol.SProxy.value)))(mapRecordWithIndexBuilder(dictMapRecordWithIndex)(Type_Data_RowList.RLProxy.value)(f));
                          };
                      });
                  };
              };
          };
      };
  };
  var hmapRecord = function (dictRowToList) {
      return function (dictMapRecordWithIndex) {
          return new HMap(function ($70) {
              return Record_Builder.build(mapRecordWithIndexBuilder(dictMapRecordWithIndex)(Type_Data_RowList.RLProxy.value)(ConstMapping($70)));
          });
      };
  };
  var hmap = function (dict) {
      return dict.hmap;
  };
  var constMapping = function (dictMapping) {
      return new MappingWithIndex(function (v) {
          return function (v1) {
              return mapping(dictMapping)(v);
          };
      });
  };
  exports["hmap"] = hmap;
  exports["mapRecordWithIndexBuilder"] = mapRecordWithIndexBuilder;
  exports["mapping"] = mapping;
  exports["mappingWithIndex"] = mappingWithIndex;
  exports["Mapping"] = Mapping;
  exports["MappingWithIndex"] = MappingWithIndex;
  exports["ConstMapping"] = ConstMapping;
  exports["HMap"] = HMap;
  exports["MapRecordWithIndex"] = MapRecordWithIndex;
  exports["constMapping"] = constMapping;
  exports["hmapRecord"] = hmapRecord;
  exports["mapRecordWithIndexCons"] = mapRecordWithIndexCons;
  exports["mapRecordWithIndexNil"] = mapRecordWithIndexNil;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Transform.Record"] = $PS["Formless.Transform.Record"] || {};
  var exports = $PS["Formless.Transform.Record"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];                
  var WrapField = (function () {
      function WrapField() {

      };
      WrapField.value = new WrapField();
      return WrapField;
  })();
  var UnwrapField = (function () {
      function UnwrapField() {

      };
      UnwrapField.value = new UnwrapField();
      return UnwrapField;
  })();
  var wrapRecord = function (dictHMap) {
      return Heterogeneous_Mapping.hmap(dictHMap)(WrapField.value);
  };
  var wrapInputFields = function (dictNewtype) {
      return function (dictHMap) {
          return function ($15) {
              return Data_Newtype.wrap(dictNewtype)(wrapRecord(dictHMap)($15));
          };
      };
  };
  var wrapField = function (dictNewtype) {
      return new Heterogeneous_Mapping.Mapping(function (v) {
          return Data_Newtype.wrap(dictNewtype);
      });
  };
  var unwrapRecord = function (dictHMap) {
      return Heterogeneous_Mapping.hmap(dictHMap)(UnwrapField.value);
  };
  var unwrapOutputFields = function (dictNewtype) {
      return function (dictHMap) {
          return function ($16) {
              return unwrapRecord(dictHMap)(Data_Newtype.unwrap(dictNewtype)($16));
          };
      };
  };
  var unwrapField = function (dictNewtype) {
      return new Heterogeneous_Mapping.Mapping(function (v) {
          return Data_Newtype.unwrap(dictNewtype);
      });
  };
  exports["UnwrapField"] = UnwrapField;
  exports["unwrapRecord"] = unwrapRecord;
  exports["WrapField"] = WrapField;
  exports["wrapRecord"] = wrapRecord;
  exports["unwrapOutputFields"] = unwrapOutputFields;
  exports["wrapInputFields"] = wrapInputFields;
  exports["unwrapField"] = unwrapField;
  exports["wrapField"] = wrapField;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Type.Data.Row"] = $PS["Type.Data.Row"] || {};
  var exports = $PS["Type.Data.Row"];
  var RProxy = (function () {
      function RProxy() {

      };
      RProxy.value = new RProxy();
      return RProxy;
  })();
  exports["RProxy"] = RProxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Transform.Row"] = $PS["Formless.Transform.Row"] || {};
  var exports = $PS["Formless.Transform.Row"];
  var Control_Category = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Data_Row = $PS["Type.Data.Row"];
  var Type_Data_RowList = $PS["Type.Data.RowList"];                
  var MakeSProxies = function (makeSProxiesBuilder) {
      this.makeSProxiesBuilder = makeSProxiesBuilder;
  };
  var MakeInputFieldsFromRow = function (mkInputFieldsFromRowBuilder) {
      this.mkInputFieldsFromRowBuilder = mkInputFieldsFromRowBuilder;
  };
  var mkInputFieldsFromRowNil = new MakeInputFieldsFromRow(function (v) {
      return function (v1) {
          return Control_Category.identity(Record_Builder.categoryBuilder);
      };
  });
  var mkInputFieldsFromRowBuilder = function (dict) {
      return dict.mkInputFieldsFromRowBuilder;
  };
  var mkInputFieldsFromRowCons = function (dictIsSymbol) {
      return function (dictInitial) {
          return function (dictCons) {
              return function (dictMakeInputFieldsFromRow) {
                  return function (dictRow1Cons) {
                      return new MakeInputFieldsFromRow(function (v) {
                          return function (r) {
                              var val = Formless_Class_Initial.initial(dictInitial);
                              var rest = mkInputFieldsFromRowBuilder(dictMakeInputFieldsFromRow)(Type_Data_RowList.RLProxy.value)(r);
                              var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(val);
                              return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
                          };
                      });
                  };
              };
          };
      };
  };
  var mkInputFields = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictMakeInputFieldsFromRow) {
              return function (v) {
                  var builder = mkInputFieldsFromRowBuilder(dictMakeInputFieldsFromRow)(Type_Data_RowList.RLProxy.value)(Type_Data_Row.RProxy.value);
                  return Data_Newtype.wrap(dictNewtype)(Formless_Internal_Transform.fromScratch(builder));
              };
          };
      };
  };
  var makeSProxiesNil = new MakeSProxies(function (v) {
      return Control_Category.identity(Record_Builder.categoryBuilder);
  });
  var makeSProxiesBuilder = function (dict) {
      return dict.makeSProxiesBuilder;
  };
  var makeSProxiesCons = function (dictIsSymbol) {
      return function (dictRow1Cons) {
          return function (dictMakeSProxies) {
              return new MakeSProxies(function (v) {
                  var rest = makeSProxiesBuilder(dictMakeSProxies)(Type_Data_RowList.RLProxy.value);
                  var first = Record_Builder.insert(dictRow1Cons.Cons0())(dictRow1Cons.Lacks1())(dictIsSymbol)(Data_Symbol.SProxy.value)(Data_Symbol.SProxy.value);
                  return Control_Semigroupoid.compose(Record_Builder.semigroupoidBuilder)(first)(rest);
              });
          };
      };
  };
  var mkSProxies = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictMakeSProxies) {
              return function (v) {
                  var builder = makeSProxiesBuilder(dictMakeSProxies)(Type_Data_RowList.RLProxy.value);
                  return Formless_Internal_Transform.fromScratch(builder);
              };
          };
      };
  };
  exports["makeSProxiesBuilder"] = makeSProxiesBuilder;
  exports["mkInputFieldsFromRowBuilder"] = mkInputFieldsFromRowBuilder;
  exports["mkInputFields"] = mkInputFields;
  exports["MakeInputFieldsFromRow"] = MakeInputFieldsFromRow;
  exports["mkSProxies"] = mkSProxies;
  exports["MakeSProxies"] = MakeSProxies;
  exports["mkInputFieldsFromRowNil"] = mkInputFieldsFromRowNil;
  exports["mkInputFieldsFromRowCons"] = mkInputFieldsFromRowCons;
  exports["makeSProxiesNil"] = makeSProxiesNil;
  exports["makeSProxiesCons"] = makeSProxiesCons;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Type.Equality"] = $PS["Type.Equality"] || {};
  var exports = $PS["Type.Equality"];
  var TypeEquals = function (from, to) {
      this.from = from;
      this.to = to;
  };
  var to = function (dict) {
      return dict.to;
  };
  var refl = new TypeEquals(function (a) {
      return a;
  }, function (a) {
      return a;
  });
  var from = function (dict) {
      return dict.from;
  };
  exports["TypeEquals"] = TypeEquals;
  exports["to"] = to;
  exports["from"] = from;
  exports["refl"] = refl;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Component"] = $PS["Formless.Component"] || {};
  var exports = $PS["Formless.Component"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Variant = $PS["Data.Variant"];
  var Data_Variant_Internal = $PS["Data.Variant.Internal"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Data_FormFieldResult = $PS["Formless.Data.FormFieldResult"];
  var Formless_Internal_Component = $PS["Formless.Internal.Component"];
  var Formless_Internal_Debounce = $PS["Formless.Internal.Debounce"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Record_Builder = $PS["Record.Builder"];
  var Type_Equality = $PS["Type.Equality"];                
  var raiseResult = function (dictNewtype) {
      return function (dictHMap) {
          return function (v) {
              if (v instanceof Formless_Types_Component.Submitted) {
                  return Halogen_Query_HalogenM.raise(Formless_Transform_Record.unwrapOutputFields(dictNewtype)(dictHMap)(v.value0));
              };
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          };
      };
  };
  var handleAction = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictEqRecord) {
                  return function (dictInputFieldsToFormFields) {
                      return function (dictFormFieldsToInputFields) {
                          return function (dictCountErrors) {
                              return function (dictAllTouched) {
                                  return function (dictSetFormFieldsTouched) {
                                      return function (dictReplaceFormFieldInputs) {
                                          return function (dictModifyAll) {
                                              return function (dictValidateAll) {
                                                  return function (dictFormFieldToMaybeOutput) {
                                                      return function (dictNewtype) {
                                                          return function (dictNewtype1) {
                                                              return function (dictNewtype2) {
                                                                  return function (dictNewtype3) {
                                                                      return function (dictNewtype4) {
                                                                          return function (dictNewtype5) {
                                                                              return function (dictNewtype6) {
                                                                                  return function (dictNewtype7) {
                                                                                      return function (dictLacks) {
                                                                                          return function (handleAction$prime) {
                                                                                              return function (handleEvent) {
                                                                                                  return function (action) {
                                                                                                      var sync = Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                                                                                                          return "syncFormData";
                                                                                                      }))(Data_Symbol.SProxy.value)(Data_Unit.unit);
                                                                                                      return Data_Function.flip(Data_Variant.match()(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchCons(Data_Variant_Internal.variantMatchNil)()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))()(Type_Equality.refl))())(action)({
                                                                                                          initialize: function (mbAction) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadAff.MonadEffect0()))(Effect_Ref["new"](Data_Maybe.Nothing.value)))(function (v1) {
                                                                                                                      var setFields = function (rec) {
                                                                                                                          return {
                                                                                                                              debounceRef: new Data_Maybe.Just(v),
                                                                                                                              validationRef: new Data_Maybe.Just(v1),
                                                                                                                              allTouched: rec.allTouched,
                                                                                                                              initialInputs: rec.initialInputs,
                                                                                                                              validators: rec.validators
                                                                                                                          };
                                                                                                                      };
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                          var $132 = {};
                                                                                                                          for (var $133 in st) {
                                                                                                                              if ({}.hasOwnProperty.call(st, $133)) {
                                                                                                                                  $132[$133] = st[$133];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $132.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(setFields)(st.internal);
                                                                                                                          return $132;
                                                                                                                      }))(function () {
                                                                                                                          return Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(handleAction$prime)(mbAction);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          syncFormData: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                                                                                  var errors = Formless_Internal_Transform.countErrors(dictRowToList1)(dictCountErrors)(dictNewtype2)(v1.form);
                                                                                                                  var dirty = !Data_Eq.eq(Data_Eq.eqRec(dictRowToList)(dictEqRecord))(Data_Newtype.unwrap(dictNewtype)(Formless_Internal_Transform.formFieldsToInputFields(dictRowToList1)(dictFormFieldsToInputFields)(dictNewtype)(dictNewtype2)(v1.form)))(Data_Newtype.unwrap(dictNewtype)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v1.internal)).initialInputs));
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)((function () {
                                                                                                                      var v2 = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v1.internal)).allTouched;
                                                                                                                      if (v2) {
                                                                                                                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                              var $138 = {};
                                                                                                                              for (var $139 in v3) {
                                                                                                                                  if ({}.hasOwnProperty.call(v3, $139)) {
                                                                                                                                      $138[$139] = v3[$139];
                                                                                                                                  };
                                                                                                                              };
                                                                                                                              $138.validity = (function () {
                                                                                                                                  var $137 = errors === 0;
                                                                                                                                  if ($137) {
                                                                                                                                      return Formless_Types_Component.Valid.value;
                                                                                                                                  };
                                                                                                                                  return Formless_Types_Component.Invalid.value;
                                                                                                                              })();
                                                                                                                              $138.errors = errors;
                                                                                                                              $138.dirty = dirty;
                                                                                                                              return $138;
                                                                                                                          });
                                                                                                                      };
                                                                                                                      var v3 = Formless_Internal_Transform.allTouched(dictRowToList1)(dictAllTouched)(dictNewtype2)(v1.form);
                                                                                                                      if (v3) {
                                                                                                                          return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v4) {
                                                                                                                              var $143 = {};
                                                                                                                              for (var $144 in v4) {
                                                                                                                                  if ({}.hasOwnProperty.call(v4, $144)) {
                                                                                                                                      $143[$144] = v4[$144];
                                                                                                                                  };
                                                                                                                              };
                                                                                                                              $143.validity = (function () {
                                                                                                                                  var $142 = errors === 0;
                                                                                                                                  if ($142) {
                                                                                                                                      return Formless_Types_Component.Valid.value;
                                                                                                                                  };
                                                                                                                                  return Formless_Types_Component.Invalid.value;
                                                                                                                              })();
                                                                                                                              $143.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v5) {
                                                                                                                                  return {
                                                                                                                                      allTouched: true,
                                                                                                                                      debounceRef: v5.debounceRef,
                                                                                                                                      initialInputs: v5.initialInputs,
                                                                                                                                      validationRef: v5.validationRef,
                                                                                                                                      validators: v5.validators
                                                                                                                                  };
                                                                                                                              })(v1.internal);
                                                                                                                              $143.errors = errors;
                                                                                                                              $143.dirty = dirty;
                                                                                                                              return $143;
                                                                                                                          });
                                                                                                                      };
                                                                                                                      return Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v4) {
                                                                                                                          var $146 = {};
                                                                                                                          for (var $147 in v4) {
                                                                                                                              if ({}.hasOwnProperty.call(v4, $147)) {
                                                                                                                                  $146[$147] = v4[$147];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $146.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                          $146.errors = errors;
                                                                                                                          $146.dirty = dirty;
                                                                                                                          return $146;
                                                                                                                      });
                                                                                                                  })())(function (v2) {
                                                                                                                      return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState(dictLacks)(v2)));
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          userAction: function (act) {
                                                                                                              return handleAction$prime(act);
                                                                                                          },
                                                                                                          modify: function (variant) {
                                                                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $150 = {};
                                                                                                                  for (var $151 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $151)) {
                                                                                                                          $150[$151] = st[$151];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $150.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(Control_Category.identity(Control_Category.categoryFn))(variant)(st.form);
                                                                                                                  return $150;
                                                                                                              }))(function () {
                                                                                                                  return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync);
                                                                                                              });
                                                                                                          },
                                                                                                          validate: function (variant) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
                                                                                                                  var validators = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v.internal)).validators;
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.unsafeRunValidationVariant((dictMonadAff.MonadEffect0()).Monad0())(dictNewtype7)(dictNewtype2)(dictNewtype4)(variant)(validators)(v.form)))(function (v1) {
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                                                                                                                          var $155 = {};
                                                                                                                          for (var $156 in v2) {
                                                                                                                              if ({}.hasOwnProperty.call(v2, $156)) {
                                                                                                                                  $155[$156] = v2[$156];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $155.form = v1;
                                                                                                                          return $155;
                                                                                                                      }))(function () {
                                                                                                                          return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          modifyValidate: function (v) {
                                                                                                              var validate = Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                                                                                  var vs = (Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v1.internal)).validators;
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.unsafeRunValidationVariant((dictMonadAff.MonadEffect0()).Monad0())(dictNewtype7)(dictNewtype2)(dictNewtype4)(v.value1)(vs)(v1.form)))(function (v2) {
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                          var $161 = {};
                                                                                                                          for (var $162 in v3) {
                                                                                                                              if ({}.hasOwnProperty.call(v3, $162)) {
                                                                                                                                  $161[$162] = v3[$162];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $161.form = v2;
                                                                                                                          return $161;
                                                                                                                      }))(function () {
                                                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v2);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                              var modifyWith = function (f) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (s) {
                                                                                                                      var $164 = {};
                                                                                                                      for (var $165 in s) {
                                                                                                                          if ({}.hasOwnProperty.call(s, $165)) {
                                                                                                                              $164[$165] = s[$165];
                                                                                                                          };
                                                                                                                      };
                                                                                                                      $164.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(f)(v.value1)(s.form);
                                                                                                                      return $164;
                                                                                                                  }))(function (v1) {
                                                                                                                      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v1.form);
                                                                                                                  });
                                                                                                              };
                                                                                                              if (v.value0 instanceof Data_Maybe.Nothing) {
                                                                                                                  return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(modifyWith(Control_Category.identity(Control_Category.categoryFn)))(validate))(handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync));
                                                                                                              };
                                                                                                              if (v.value0 instanceof Data_Maybe.Just) {
                                                                                                                  return Formless_Internal_Debounce.debounceForm(dictMonadAff)(v.value0.value0)(modifyWith(Control_Category.identity(Control_Category.categoryFn)))(Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)(modifyWith(Data_Function["const"](Formless_Data_FormFieldResult.Validating.value)))(validate))(handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync));
                                                                                                              };
                                                                                                              throw new Error("Failed pattern match at Formless.Component (line 263, column 7 - line 271, column 58): " + [ v.value0.constructor.name ]);
                                                                                                          },
                                                                                                          reset: function (variant) {
                                                                                                              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $172 = {};
                                                                                                                  for (var $173 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $173)) {
                                                                                                                          $172[$173] = st[$173];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $172.form = Formless_Internal_Transform.unsafeModifyInputVariant(dictNewtype6)(dictNewtype2)(Control_Category.identity(Control_Category.categoryFn))(variant)(st.form);
                                                                                                                  $172.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v1) {
                                                                                                                      return {
                                                                                                                          allTouched: false,
                                                                                                                          debounceRef: v1.debounceRef,
                                                                                                                          initialInputs: v1.initialInputs,
                                                                                                                          validationRef: v1.validationRef,
                                                                                                                          validators: v1.validators
                                                                                                                      };
                                                                                                                  })(st.internal);
                                                                                                                  return $172;
                                                                                                              }))(function () {
                                                                                                                  return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync);
                                                                                                              });
                                                                                                          },
                                                                                                          setAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $176 = {};
                                                                                                                  for (var $177 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $177)) {
                                                                                                                          $176[$177] = st[$177];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $176.form = Formless_Internal_Transform.replaceFormFieldInputs(dictRowToList1)(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)(v.value0)(st.form);
                                                                                                                  return $176;
                                                                                                              }))(function (v1) {
                                                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState(dictLacks)(v1))))(function () {
                                                                                                                      if (v.value1) {
                                                                                                                          return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(Formless_Action.validateAll);
                                                                                                                      };
                                                                                                                      return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync);
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          modifyAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $184 = {};
                                                                                                                  for (var $185 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $185)) {
                                                                                                                          $184[$185] = st[$185];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $184.form = Formless_Internal_Transform.modifyAll(dictRowToList1)(dictModifyAll)(dictNewtype1)(dictNewtype2)(v.value0)(st.form);
                                                                                                                  return $184;
                                                                                                              }))(function (v1) {
                                                                                                                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState(dictLacks)(v1))))(function () {
                                                                                                                      if (v.value1) {
                                                                                                                          return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(Formless_Action.validateAll);
                                                                                                                      };
                                                                                                                      return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync);
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          validateAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_Trans_Class.lift(Halogen_Query_HalogenM.monadTransHalogenM)((dictMonadAff.MonadEffect0()).Monad0())(Formless_Internal_Transform.validateAll(dictRowToList1)((dictMonadAff.MonadEffect0()).Monad0())(dictValidateAll)(dictNewtype4)(dictNewtype2)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(v1.internal)).validators)(v1.form)))(function (v2) {
                                                                                                                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                                                                                                                          var $193 = {};
                                                                                                                          for (var $194 in v3) {
                                                                                                                              if ({}.hasOwnProperty.call(v3, $194)) {
                                                                                                                                  $193[$194] = v3[$194];
                                                                                                                              };
                                                                                                                          };
                                                                                                                          $193.form = v2;
                                                                                                                          return $193;
                                                                                                                      }))(function () {
                                                                                                                          return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(sync);
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          resetAll: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                                                                                                                  var $196 = {};
                                                                                                                  for (var $197 in st) {
                                                                                                                      if ({}.hasOwnProperty.call(st, $197)) {
                                                                                                                          $196[$197] = st[$197];
                                                                                                                      };
                                                                                                                  };
                                                                                                                  $196.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                  $196.dirty = false;
                                                                                                                  $196.errors = 0;
                                                                                                                  $196.submitAttempts = 0;
                                                                                                                  $196.submitting = false;
                                                                                                                  $196.form = Formless_Internal_Transform.replaceFormFieldInputs(dictRowToList1)(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)((Data_Newtype.unwrap(Formless_Types_Component.newtypeInternalState)(st.internal)).initialInputs)(st.form);
                                                                                                                  $196.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(function (v2) {
                                                                                                                      return {
                                                                                                                          allTouched: false,
                                                                                                                          debounceRef: v2.debounceRef,
                                                                                                                          initialInputs: v2.initialInputs,
                                                                                                                          validationRef: v2.validationRef,
                                                                                                                          validators: v2.validators
                                                                                                                      };
                                                                                                                  })(st.internal);
                                                                                                                  return $196;
                                                                                                              }))(function (v1) {
                                                                                                                  return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState(dictLacks)(v1)));
                                                                                                              });
                                                                                                          },
                                                                                                          submit: function (v) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.preSubmit(dictMonadAff)(dictRowToList1)(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function (v1) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(handleAction$prime)(handleEvent)(Formless_Action.validateAll))(function (v2) {
                                                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.submit(dictMonadAff)(dictRowToList1)(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(Data_Foldable.traverse_(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Foldable.foldableMaybe)(function ($213) {
                                                                                                                          return handleEvent(Formless_Types_Component.Submitted.create($213));
                                                                                                                      }));
                                                                                                                  });
                                                                                                              });
                                                                                                          },
                                                                                                          loadForm: function (formInputs) {
                                                                                                              var setFields = function (rec) {
                                                                                                                  return {
                                                                                                                      allTouched: false,
                                                                                                                      initialInputs: formInputs,
                                                                                                                      debounceRef: rec.debounceRef,
                                                                                                                      validationRef: rec.validationRef,
                                                                                                                      validators: rec.validators
                                                                                                                  };
                                                                                                              };
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                                                                                                                      var $201 = {};
                                                                                                                      for (var $202 in v1) {
                                                                                                                          if ({}.hasOwnProperty.call(v1, $202)) {
                                                                                                                              $201[$202] = v1[$202];
                                                                                                                          };
                                                                                                                      };
                                                                                                                      $201.validity = Formless_Types_Component.Incomplete.value;
                                                                                                                      $201.dirty = false;
                                                                                                                      $201.errors = 0;
                                                                                                                      $201.submitAttempts = 0;
                                                                                                                      $201.submitting = false;
                                                                                                                      $201.form = Formless_Internal_Transform.replaceFormFieldInputs(dictRowToList1)(dictReplaceFormFieldInputs)(dictNewtype)(dictNewtype2)(formInputs)(v.form);
                                                                                                                      $201.internal = Data_Newtype.over(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.newtypeInternalState)(Formless_Types_Component.InternalState)(setFields)(v.internal);
                                                                                                                      return $201;
                                                                                                                  }))(function (v1) {
                                                                                                                      return handleEvent(Formless_Types_Component.Changed.create(Formless_Internal_Component.getPublicState(dictLacks)(v1)));
                                                                                                                  });
                                                                                                              });
                                                                                                          }
                                                                                                      });
                                                                                                  };
                                                                                              };
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var handleQuery = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictEqRecord) {
                  return function (dictInputFieldsToFormFields) {
                      return function (dictFormFieldsToInputFields) {
                          return function (dictCountErrors) {
                              return function (dictAllTouched) {
                                  return function (dictSetFormFieldsTouched) {
                                      return function (dictReplaceFormFieldInputs) {
                                          return function (dictModifyAll) {
                                              return function (dictValidateAll) {
                                                  return function (dictFormFieldToMaybeOutput) {
                                                      return function (dictNewtype) {
                                                          return function (dictNewtype1) {
                                                              return function (dictNewtype2) {
                                                                  return function (dictNewtype3) {
                                                                      return function (dictNewtype4) {
                                                                          return function (dictNewtype5) {
                                                                              return function (dictNewtype6) {
                                                                                  return function (dictNewtype7) {
                                                                                      return function (dictLacks) {
                                                                                          return function (handleQuery$prime) {
                                                                                              return function (handleEvent) {
                                                                                                  return Data_Functor_Variant.match()(Data_Variant_Internal.variantFMatchCons(Data_Variant_Internal.variantFMatchCons(Data_Variant_Internal.variantFMatchNil)()(Type_Equality.refl))()(Type_Equality.refl))()({
                                                                                                      query: function (v) {
                                                                                                          if (v instanceof Formless_Types_Component.SubmitReply) {
                                                                                                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.preSubmit(dictMonadAff)(dictRowToList1)(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function (v1) {
                                                                                                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)))(handleEvent)(Formless_Action.validateAll))(function (v2) {
                                                                                                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Internal_Component.submit(dictMonadAff)(dictRowToList1)(dictAllTouched)(dictSetFormFieldsTouched)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictValidateAll)(dictNewtype2)(dictNewtype3)(dictNewtype4))(function (v3) {
                                                                                                                          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Just.create(v.value0(v3)));
                                                                                                                      });
                                                                                                                  });
                                                                                                              });
                                                                                                          };
                                                                                                          if (v instanceof Formless_Types_Component.SendQuery) {
                                                                                                              return Halogen_Query_HalogenM.HalogenM(Control_Monad_Free.liftF(new Halogen_Query_HalogenM.ChildQuery(v.value0)));
                                                                                                          };
                                                                                                          if (v instanceof Formless_Types_Component.AsQuery) {
                                                                                                              return Data_Functor.voidRight(Halogen_Query_HalogenM.functorHalogenM)(new Data_Maybe.Just(v.value1))(handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks)(Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)))(handleEvent)(Data_Variant.expand()(v.value0)));
                                                                                                          };
                                                                                                          throw new Error("Failed pattern match at Formless.Component (line 368, column 12 - line 382, column 44): " + [ v.constructor.name ]);
                                                                                                      },
                                                                                                      userQuery: function (q) {
                                                                                                          return handleQuery$prime(q);
                                                                                                      }
                                                                                                  });
                                                                                              };
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var defaultSpec = {
      render: Data_Function["const"](Halogen_HTML_Core.text(Data_Monoid.mempty(Data_Monoid.monoidString))),
      handleAction: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      handleQuery: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value)),
      handleEvent: Data_Function["const"](Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit)),
      receive: Data_Function["const"](Data_Maybe.Nothing.value),
      initialize: Data_Maybe.Nothing.value,
      finalize: Data_Maybe.Nothing.value
  };
  var component = function (dictMonadAff) {
      return function (dictRowToList) {
          return function (dictRowToList1) {
              return function (dictEqRecord) {
                  return function (dictInputFieldsToFormFields) {
                      return function (dictFormFieldsToInputFields) {
                          return function (dictCountErrors) {
                              return function (dictAllTouched) {
                                  return function (dictSetFormFieldsTouched) {
                                      return function (dictReplaceFormFieldInputs) {
                                          return function (dictModifyAll) {
                                              return function (dictValidateAll) {
                                                  return function (dictFormFieldToMaybeOutput) {
                                                      return function (dictMakeInputFieldsFromRow) {
                                                          return function (dictNewtype) {
                                                              return function (dictNewtype1) {
                                                                  return function (dictNewtype2) {
                                                                      return function (dictNewtype3) {
                                                                          return function (dictNewtype4) {
                                                                              return function (dictNewtype5) {
                                                                                  return function (dictNewtype6) {
                                                                                      return function (dictNewtype7) {
                                                                                          return function (dictLacks) {
                                                                                              return function (dictLacks1) {
                                                                                                  return function (dictLacks2) {
                                                                                                      return function (dictLacks3) {
                                                                                                          return function (dictLacks4) {
                                                                                                              return function (dictLacks5) {
                                                                                                                  return function (dictLacks6) {
                                                                                                                      return function (dictLacks7) {
                                                                                                                          return function (dictLacks8) {
                                                                                                                              return function (mkInput) {
                                                                                                                                  return function (spec) {
                                                                                                                                      var initialState = function (input) {
                                                                                                                                          var initialInputs = (function () {
                                                                                                                                              if (input.initialInputs instanceof Data_Maybe.Nothing) {
                                                                                                                                                  return Formless_Transform_Row.mkInputFields(dictRowToList)(dictNewtype)(dictMakeInputFieldsFromRow)(Formless_Types_Form.FormProxy.value);
                                                                                                                                              };
                                                                                                                                              if (input.initialInputs instanceof Data_Maybe.Just) {
                                                                                                                                                  return input.initialInputs.value0;
                                                                                                                                              };
                                                                                                                                              throw new Error("Failed pattern match at Formless.Component (line 138, column 21 - line 140, column 28): " + [ input.initialInputs.constructor.name ]);
                                                                                                                                          })();
                                                                                                                                          var internalState = {
                                                                                                                                              allTouched: false,
                                                                                                                                              initialInputs: initialInputs,
                                                                                                                                              validators: input.validators,
                                                                                                                                              debounceRef: Data_Maybe.Nothing.value,
                                                                                                                                              validationRef: Data_Maybe.Nothing.value
                                                                                                                                          };
                                                                                                                                          var initialForm = Formless_Internal_Transform.inputFieldsToFormFields(dictRowToList)(dictInputFieldsToFormFields)(dictNewtype)(dictNewtype2)(initialInputs);
                                                                                                                                          var pipeline = Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "validators";
                                                                                                                                          }))((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks))()(Data_Symbol.SProxy.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder["delete"](new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "initialInputs";
                                                                                                                                          }))(dictLacks1)()(Data_Symbol.SProxy.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()(dictLacks2)(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "validity";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(Formless_Types_Component.Incomplete.value))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks3))(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "dirty";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(false))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks4))(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "errors";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(0))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks5))(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "submitAttempts";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(0))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks6))(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "submitting";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(false))(Control_Semigroupoid.composeFlipped(Record_Builder.semigroupoidBuilder)(Record_Builder.insert()((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks7))(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "form";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(initialForm))(Record_Builder.insert()((function () {
                                                                                                                                              return undefined;
                                                                                                                                          })(dictLacks8))(new Data_Symbol.IsSymbol(function () {
                                                                                                                                              return "internal";
                                                                                                                                          }))(Data_Symbol.SProxy.value)(internalState)))))))));
                                                                                                                                          return Record_Builder.build(pipeline)(input);
                                                                                                                                      };
                                                                                                                                      return Halogen_Component.mkComponent({
                                                                                                                                          initialState: function ($214) {
                                                                                                                                              return initialState(mkInput($214));
                                                                                                                                          },
                                                                                                                                          render: function ($215) {
                                                                                                                                              return spec.render(Formless_Internal_Component.getPublicState(dictLacks8)($215));
                                                                                                                                          },
                                                                                                                                          "eval": Halogen_Component.mkEval({
                                                                                                                                              handleQuery: function (q) {
                                                                                                                                                  return handleQuery(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks8)(spec.handleQuery)(spec.handleEvent)(q);
                                                                                                                                              },
                                                                                                                                              handleAction: function (act) {
                                                                                                                                                  return handleAction(dictMonadAff)(dictRowToList)(dictRowToList1)(dictEqRecord)(dictInputFieldsToFormFields)(dictFormFieldsToInputFields)(dictCountErrors)(dictAllTouched)(dictSetFormFieldsTouched)(dictReplaceFormFieldInputs)(dictModifyAll)(dictValidateAll)(dictFormFieldToMaybeOutput)(dictNewtype)(dictNewtype1)(dictNewtype2)(dictNewtype3)(dictNewtype4)(dictNewtype5)(dictNewtype6)(dictNewtype7)(dictLacks8)(spec.handleAction)(spec.handleEvent)(act);
                                                                                                                                              },
                                                                                                                                              initialize: new Data_Maybe.Just(Data_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                                                                                                                                                  return "initialize";
                                                                                                                                              }))(Data_Symbol.SProxy.value)(spec.initialize)),
                                                                                                                                              receive: Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Action.injAction))(spec.receive),
                                                                                                                                              finalize: Data_Functor.map(Data_Maybe.functorMaybe)(Formless_Action.injAction)(spec.finalize)
                                                                                                                                          })
                                                                                                                                      });
                                                                                                                                  };
                                                                                                                              };
                                                                                                                          };
                                                                                                                      };
                                                                                                                  };
                                                                                                              };
                                                                                                          };
                                                                                                      };
                                                                                                  };
                                                                                              };
                                                                                          };
                                                                                      };
                                                                                  };
                                                                              };
                                                                          };
                                                                      };
                                                                  };
                                                              };
                                                          };
                                                      };
                                                  };
                                              };
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  exports["defaultSpec"] = defaultSpec;
  exports["raiseResult"] = raiseResult;
  exports["component"] = component;
  exports["handleAction"] = handleAction;
  exports["handleQuery"] = handleQuery;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.HTML"] = $PS["Halogen.HTML"] || {};
  var exports = $PS["Halogen.HTML"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                
  var slot = function (dictCons) {
      return function (dictIsSymbol) {
          return function (dictOrd) {
              return function (label) {
                  return function (p) {
                      return function (component) {
                          return function (input) {
                              return function (outputQuery) {
                                  return Halogen_HTML_Core.widget(new Halogen_Component.ComponentSlot(Halogen_Component.componentSlot(dictCons)(dictIsSymbol)(dictOrd)(label)(p)(component)(input)(outputQuery)));
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var fromPlainHTML = Unsafe_Coerce.unsafeCoerce;
  exports["fromPlainHTML"] = fromPlainHTML;
  exports["slot"] = slot;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.Async.Component"] = $PS["Example.Async.Component"] || {};
  var exports = $PS["Example.Async.Component"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];                
  var Form = function (x) {
      return x;
  };
  var HandleForm = (function () {
      function HandleForm(value0) {
          this.value0 = value0;
      };
      HandleForm.create = function (value0) {
          return new HandleForm(value0);
      };
      return HandleForm;
  })();
  var newtypeForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, Form);
  var component = (function () {
      var handleAction = function (v) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.logShow(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Example_App_Validation.showEmail))(Data_Show.showInt)))(v.value0));
      };
      var formComponent = (function () {
          var renderForm = function (v) {
              var prx = Formless_Transform_Row.mkSProxies()(newtypeForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "balance";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))(Formless_Types_Form.FormProxy.value);
              return Example_App_UI_Element.formContent_([ Example_App_UI_Element.input({
                  label: "Name",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Write your name")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(newtypeForm)()(prx.name)(v.form)),
                  placeholder: "Frank Ocean"
              })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(newtypeForm)()(prx.name)(v.form)), Halogen_HTML_Events.onValueInput(function ($13) {
                  return Data_Maybe.Just.create(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(newtypeForm)()(prx.name)($13));
              }) ]), Example_App_UI_Element.input({
                  label: "Email",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Provide your email address")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))(newtypeForm)()(prx.email)(v.form)),
                  placeholder: "john@hamm.com"
              })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(newtypeForm)()(prx.email)(v.form)), Halogen_HTML_Events.onValueInput(function ($14) {
                  return Data_Maybe.Just.create(Formless_Action.asyncSetValidate(new Data_Symbol.IsSymbol(function () {
                      return "email";
                  }))(newtypeForm)()(300.0)(prx.email)($14));
              }) ]), Example_App_UI_Element.input({
                  label: "Donation",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("How many dollas do you want to spend?")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "balance";
                  }))(newtypeForm)()(prx.balance)(v.form)),
                  placeholder: "1000"
              })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                  return "balance";
              }))(newtypeForm)()(prx.balance)(v.form)), Halogen_HTML_Events.onValueInput(function ($15) {
                  return Data_Maybe.Just.create(Formless_Action.asyncSetValidate(new Data_Symbol.IsSymbol(function () {
                      return "balance";
                  }))(newtypeForm)()(500.0)(prx.balance)($15));
              }) ]), Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(function (v1) {
                  return new Data_Maybe.Just(Formless_Action.submit);
              }) ])([ Halogen_HTML_Core.text("Submit") ]) ]);
          };
          var formInput = {
              validators: {
                  name: Example_App_Validation.minLength(Effect_Aff.monadAff)(5),
                  email: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.emailFormat(Effect_Aff.monadAff))(Example_App_Validation.emailIsUsed(Effect_Aff_Class.monadAffAff)),
                  balance: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.strIsInt(Effect_Aff.monadAff))(Example_App_Validation.enoughMoney(Effect_Aff_Class.monadAffAff))
              },
              initialInputs: Data_Maybe.Nothing.value
          };
          return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.nilCountErrors))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.nilAllTouched))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))(Effect_Aff.monadAff)()(newtypeForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Effect_Aff.monadAff)()(newtypeForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Effect_Aff.monadAff)()(newtypeForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff)))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
              return "balance";
          }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm)(newtypeForm)()()()()()()()()()(Data_Function["const"](formInput))({
              render: renderForm,
              handleAction: Formless_Component.defaultSpec.handleAction,
              handleQuery: Formless_Component.defaultSpec.handleQuery,
              handleEvent: Formless_Component.raiseResult(newtypeForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "balance";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())),
              receive: Formless_Component.defaultSpec.receive,
              initialize: Formless_Component.defaultSpec.initialize,
              finalize: Formless_Component.defaultSpec.finalize
          });
      })();
      var render = function (v) {
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A form with debounced async fields.") ]), Example_App_UI_Element.p_("\x0a          If you have fields with expensive validation, you can debounce modifications to the field with the async versions of setValidate and modifyValidate query functions. The result type of the form field lets you know whether the field has not been validated, is currently validating, or has produced an error or result.\x0a          "), Halogen_HTML_Elements.br_, Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "formless";
          }))(Data_Ord.ordUnit)(Formless_Types_Component["_formless"])(Data_Unit.unit)(formComponent)(Data_Unit.unit)(function ($16) {
              return Data_Maybe.Just.create(HandleForm.create($16));
          }) ]);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["Form"] = Form;
  exports["HandleForm"] = HandleForm;
  exports["component"] = component;
  exports["newtypeForm"] = newtypeForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.Basic.Component"] = $PS["Example.Basic.Component"] || {};
  var exports = $PS["Example.Basic.Component"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];                
  var ContactForm = function (x) {
      return x;
  };
  var HandleContact = (function () {
      function HandleContact(value0) {
          this.value0 = value0;
      };
      HandleContact.create = function (value0) {
          return new HandleContact(value0);
      };
      return HandleContact;
  })();
  var newtypeContactForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, ContactForm);
  var component = (function () {
      var handleAction = function (v) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.logShow(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString)))(v.value0));
      };
      var formComponent = (function () {
          var renderFormless = function (st) {
              return Example_App_UI_Element.formContent_([ Example_App_UI_Element.input({
                  label: "Name",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Write your name")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(newtypeContactForm)()(Data_Symbol.SProxy.value)(st.form)),
                  placeholder: "Dale"
              })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(newtypeContactForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($9) {
                  return Data_Maybe.Just.create(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(newtypeContactForm)()(Data_Symbol.SProxy.value)($9));
              }) ]), Example_App_UI_Element.textarea({
                  label: "Message",
                  help: new Data_Either.Right("Write us a message"),
                  placeholder: "We prefer nice messages, but have at it."
              })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                  return "text";
              }))(newtypeContactForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($10) {
                  return Data_Maybe.Just.create(Formless_Action.set(new Data_Symbol.IsSymbol(function () {
                      return "text";
                  }))(newtypeContactForm)()(Data_Symbol.SProxy.value)($10));
              }) ]), Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(function (v) {
                  return new Data_Maybe.Just(Formless_Action.submit);
              }) ])([ Halogen_HTML_Core.text("Submit") ]) ]);
          };
          var formInput = {
              validators: {
                  name: Example_App_Validation.minLength(Effect_Aff.monadAff)(5),
                  text: Formless_Validation.noValidation(Effect_Aff.monadAff)
              },
              initialInputs: Data_Maybe.Nothing.value
          };
          return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal_Transform.nilCountErrors)))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal_Transform.nilAllTouched)))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil)))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil)))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Effect_Aff.monadAff)()(newtypeContactForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Effect_Aff.monadAff)()(newtypeContactForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
              return "text";
          }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeContactForm)(newtypeContactForm)(newtypeContactForm)(newtypeContactForm)(newtypeContactForm)(newtypeContactForm)(newtypeContactForm)(newtypeContactForm)()()()()()()()()()(Data_Function["const"](formInput))({
              render: renderFormless,
              handleAction: Formless_Component.defaultSpec.handleAction,
              handleQuery: Formless_Component.defaultSpec.handleQuery,
              handleEvent: Formless_Component.raiseResult(newtypeContactForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "text";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())),
              receive: Formless_Component.defaultSpec.receive,
              initialize: Formless_Component.defaultSpec.initialize,
              finalize: Formless_Component.defaultSpec.finalize
          });
      })();
      var render = Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A basic contact form.") ]), Example_App_UI_Element.p_("\x0a          You can create a full Halogen contact form like this in less than 20 lines of Formless, excluding the render function.  It's type-safe, supports complex types, has validation, and parses to the output type of your choice.\"\x0a          "), Halogen_HTML_Elements.br_, Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
          return "formless";
      }))(Data_Ord.ordUnit)(Formless_Types_Component["_formless"])(Data_Unit.unit)(formComponent)(Data_Unit.unit)(function ($11) {
          return Data_Maybe.Just.create(HandleContact.create($11));
      }) ]);
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: Data_Function["const"](render),
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["ContactForm"] = ContactForm;
  exports["HandleContact"] = HandleContact;
  exports["component"] = component;
  exports["newtypeContactForm"] = newtypeContactForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.ExternalComponents.Form"] = $PS["Example.ExternalComponents.Form"] || {};
  var exports = $PS["Example.ExternalComponents.Form"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_UI_Typeahead = $PS["Example.App.UI.Typeahead"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];
  var Record = $PS["Record"];
  var Select = $PS["Select"];                
  var UserForm = function (x) {
      return x;
  };
  var Email = (function () {
      function Email() {

      };
      Email.value = new Email();
      return Email;
  })();
  var Whiskey = (function () {
      function Whiskey() {

      };
      Whiskey.value = new Whiskey();
      return Whiskey;
  })();
  var Language = (function () {
      function Language() {

      };
      Language.value = new Language();
      return Language;
  })();
  var HandleTypeahead = (function () {
      function HandleTypeahead(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleTypeahead.create = function (value0) {
          return function (value1) {
              return new HandleTypeahead(value0, value1);
          };
      };
      return HandleTypeahead;
  })();
  var Reset = (function () {
      function Reset() {

      };
      Reset.value = new Reset();
      return Reset;
  })();
  var newtypeUserForm$prime = new Data_Newtype.Newtype(function (n) {
      return n;
  }, UserForm);
  var eqTypeahead = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Email && y instanceof Email) {
              return true;
          };
          if (x instanceof Whiskey && y instanceof Whiskey) {
              return true;
          };
          if (x instanceof Language && y instanceof Language) {
              return true;
          };
          return false;
      };
  });
  var ordTypeahead = new Data_Ord.Ord(function () {
      return eqTypeahead;
  }, function (x) {
      return function (y) {
          if (x instanceof Email && y instanceof Email) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Email) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Email) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Whiskey && y instanceof Whiskey) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Whiskey) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Whiskey) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Language && y instanceof Language) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Example.ExternalComponents.Form (line 56, column 8 - line 56, column 46): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var component = (function () {
      var prx = Formless_Transform_Row.mkSProxies()(newtypeUserForm$prime)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))(Formless_Types_Form.FormProxy.value);
      var render = function (st) {
          var singleTypeahead = function (slot) {
              return function (input) {
                  var handler = function ($29) {
                      return Data_Maybe.Just.create(Formless_Action.injAction(HandleTypeahead.create(slot)($29)));
                  };
                  return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                      return "typeahead";
                  }))(ordTypeahead)(Example_App_UI_Typeahead["_typeahead"])(slot)(Select.component(Effect_Aff_Class.monadAffAff)()()()(Example_App_UI_Typeahead.input(Data_Maybe.monoidMaybe(Data_Semigroup.semigroupString)))(Example_App_UI_Typeahead.single(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString)(Data_Semigroup.semigroupString)))(input)(handler);
              };
          };
          var whiskey = Example_App_UI_Element.field({
              label: "Whiskey",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Select a favorite whiskey")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(newtypeUserForm$prime)()(prx.whiskey)(st.form))
          })([ singleTypeahead(Whiskey.value)({
              placeholder: "Lagavulin 12",
              items: [ "Lagavulin 16", "Kilchoman Blue Label", "Laphroaig", "Ardbeg" ]
          }) ]);
          var name = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Example_App_Validation.toTextFieldError)(newtypeUserForm$prime)(newtypeUserForm$prime)()()(Example_App_UI_Element.input)({
              label: "Name",
              help: "Write your name",
              placeholder: "Dale",
              sym: prx.name
          })(st);
          var language = Example_App_UI_Element.field({
              label: "Language",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose your favorite programming language")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))(newtypeUserForm$prime)()(prx.language)(st.form))
          })([ singleTypeahead(Language.value)({
              placeholder: "Haskell",
              items: [ "Rust", "Python", "Blodwen", "Hackett", "PHP", "PureScript", "JavaScript", "C", "C++", "TLA+", "F#", "F*", "Agda", "Ruby", "APL" ]
          }) ]);
          var email = Example_App_UI_Element.field({
              label: "Email",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose an email")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(newtypeUserForm$prime)()(prx.email)(st.form))
          })([ singleTypeahead(Email.value)({
              placeholder: "me@you.com",
              items: [ "not@anemail.org", "snail@utopia.snailutopia", "blue@jordans@blordens.pordens", "yea_that_won't_work@email.com", "standard@email.com" ]
          }) ]);
          return Example_App_UI_Element.formContent_([ name, email, whiskey, language, Example_App_UI_Element.p_("\x0a          You can only attempt to submit this form if it is valid and not already being submitted. You can only attempt to reset the form if it has changed from its initial state.\x0a          "), Halogen_HTML_Elements.br_, Example_App_UI_Element.grouped_([ Example_App_UI_Element.buttonPrimary([ (function () {
              var $18 = st.submitting || Data_Eq.notEq(Formless_Types_Component.eqValidStatus)(st.validity)(Formless_Types_Component.Valid.value);
              if ($18) {
                  return Halogen_HTML_Properties.disabled(true);
              };
              return Halogen_HTML_Events.onClick(function (v) {
                  return new Data_Maybe.Just(Formless_Action.submit);
              });
          })() ])([ Halogen_HTML_Core.text("Submit") ]), Example_App_UI_Element.button([ (function () {
              var $19 = !st.dirty;
              if ($19) {
                  return Halogen_HTML_Properties.disabled(true);
              };
              return Halogen_HTML_Events.onClick(function (v) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(Reset.value));
              });
          })() ])([ Halogen_HTML_Core.text("Reset") ]) ]) ]);
      };
      var handleEvent = function (v) {
          if (v instanceof Formless_Types_Component.Submitted) {
              return Halogen_Query_HalogenM.raise(Formless_Transform_Record.unwrapOutputFields(newtypeUserForm$prime)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()()))(v.value0));
          };
          if (v instanceof Formless_Types_Component.Changed) {
              return Effect_Class_Console.logShow(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "dirty";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "errors";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "submitAttempts";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "submitting";
              }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "validity";
              }))(Data_Show.showRecordFieldsNil)(Formless_Types_Component.showValidStatus))(Data_Show.showBoolean))(Data_Show.showInt))(Data_Show.showInt))(Data_Show.showBoolean)))(Record["delete"](new Data_Symbol.IsSymbol(function () {
                  return "form";
              }))()()(Data_Symbol.SProxy.value)(v.value0));
          };
          throw new Error("Failed pattern match at Example.ExternalComponents.Form (line 78, column 17 - line 80, column 75): " + [ v.constructor.name ]);
      };
      var handleAction = (function () {
          var $$eval = function (act) {
              return Formless_Component.handleAction(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.nilCountErrors)))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.nilAllTouched)))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil)))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil)))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "language";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)()(handleAction)(handleEvent)(act);
          };
          return function (v) {
              if (v instanceof HandleTypeahead) {
                  if (v.value0 instanceof Email) {
                      return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                          return "email";
                      }))(newtypeUserForm$prime)()(prx.email)(v.value1.value0));
                  };
                  if (v.value0 instanceof Whiskey) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(newtypeUserForm$prime)()(prx.whiskey)(v.value1.value0)))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.reset(new Data_Symbol.IsSymbol(function () {
                              return "email";
                          }))(Formless_Class_Initial.initialMaybe)(newtypeUserForm$prime)()(prx.email)))(function () {
                              return Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                  return "typeahead";
                              }))(ordTypeahead)(Example_App_UI_Typeahead["_typeahead"])(Email.value)(Example_App_UI_Typeahead.clear));
                          });
                      });
                  };
                  if (v.value0 instanceof Language) {
                      return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                          return "language";
                      }))(newtypeUserForm$prime)()(prx.language)(v.value1.value0));
                  };
                  throw new Error("Failed pattern match at Example.ExternalComponents.Form (line 85, column 56 - line 95, column 46): " + [ v.value0.constructor.name ]);
              };
              if (v instanceof Reset) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "typeahead";
                  }))(ordTypeahead)(Example_App_UI_Typeahead["_typeahead"])(Email.value)(Halogen_Query.request(Example_App_UI_Typeahead.getAvailableItems)))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class_Console.logShow(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Data_Show.showArray(Data_Show.showString))(Data_Maybe.fromMaybe([  ])(v1)))(function () {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                              return "typeahead";
                          }))(ordTypeahead)(Example_App_UI_Typeahead["_typeahead"])(Example_App_UI_Typeahead.clear))(function (v2) {
                              return $$eval(Formless_Action.resetAll);
                          });
                      });
                  });
              };
              throw new Error("Failed pattern match at Example.ExternalComponents.Form (line 84, column 18 - line 101, column 22): " + [ v.constructor.name ]);
          };
      })();
      var defaultInput = {
          validators: {
              name: Example_App_Validation.minLength(Effect_Aff.monadAff)(7),
              email: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.exists(Effect_Aff.monadAff))(Example_App_Validation.emailFormat(Effect_Aff.monadAff)),
              whiskey: Example_App_Validation.exists(Effect_Aff.monadAff),
              language: Example_App_Validation.exists(Effect_Aff.monadAff)
          },
          initialInputs: Data_Maybe.Nothing.value
      };
      return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.nilCountErrors)))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.nilAllTouched)))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil)))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil)))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Effect_Aff.monadAff)()(newtypeUserForm$prime)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "language";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)(newtypeUserForm$prime)()()()()()()()()()(Data_Function["const"](defaultInput))({
          render: render,
          handleAction: handleAction,
          handleQuery: Formless_Component.defaultSpec.handleQuery,
          handleEvent: handleEvent,
          receive: Formless_Component.defaultSpec.receive,
          initialize: Formless_Component.defaultSpec.initialize,
          finalize: Formless_Component.defaultSpec.finalize
      });
  })();
  exports["UserForm"] = UserForm;
  exports["HandleTypeahead"] = HandleTypeahead;
  exports["Reset"] = Reset;
  exports["Email"] = Email;
  exports["Whiskey"] = Whiskey;
  exports["Language"] = Language;
  exports["component"] = component;
  exports["eqTypeahead"] = eqTypeahead;
  exports["ordTypeahead"] = ordTypeahead;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.ExternalComponents.Page"] = $PS["Example.ExternalComponents.Page"] || {};
  var exports = $PS["Example.ExternalComponents.Page"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class_Console = $PS["Effect.Class.Console"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Example_ExternalComponents_Form = $PS["Example.ExternalComponents.Form"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var HandleFormless = (function () {
      function HandleFormless(value0) {
          this.value0 = value0;
      };
      HandleFormless.create = function (value0) {
          return new HandleFormless(value0);
      };
      return HandleFormless;
  })();
  var component = (function () {
      var render = function (st) {
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A form leveraging external components and custom form actions.") ]), Example_App_UI_Element.p_("\x0a          In Formless, you can freely leverage external components and embed them in the form. This form shows how to use custom typeahead components built with Select from CitizenNet. This form also demonstrates how you can manipulate forms in Formless. Try selecting an email address, then a whiskey. You'll notice that changing your whiskey selection also clears the selected email.\x0a\x0a          Next, try opening the console. If you submit the form with invalid values, Formless will show you your errors. If you submit a valid form, you'll see Formless just returns the valid outputs for you to work with.\x0a\x0a          "), Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "formless";
          }))(Data_Ord.ordUnit)(Formless_Types_Component["_formless"])(Data_Unit.unit)(Example_ExternalComponents_Form.component)(Data_Unit.unit)(function ($4) {
              return Data_Maybe.Just.create(HandleFormless.create($4));
          }) ]);
      };
      var handleAction = function (v) {
          return Effect_Class_Console.logShow(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "language";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Data_Show.showString))(Example_App_Validation.showEmail)))(v.value0);
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["HandleFormless"] = HandleFormless;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Formless.Query"] = $PS["Formless.Query"] || {};
  var exports = $PS["Formless.Query"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Category = $PS["Control.Category"];
  var Data_Functor_Variant = $PS["Data.Functor.Variant"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var submitReply = function ($8) {
      return Data_Functor_Variant.inj()(new Data_Symbol.IsSymbol(function () {
          return "query";
      }))(Formless_Types_Component.functorQueryF)(Data_Symbol.SProxy.value)(Formless_Types_Component.SubmitReply.create($8));
  };
  var sendQuery = function (dictIsSymbol) {
      return function (dictIsSymbol1) {
          return function (dictCons) {
              return function (dictCons1) {
                  return function (dictOrd) {
                      return function (dictOrd1) {
                          return function (ol) {
                              return function (os) {
                                  return function (il) {
                                      return function (is) {
                                          return function (cq) {
                                              return Halogen_Query_HalogenM.query(dictCons)(dictIsSymbol)(dictOrd)(ol)(os)(Data_Functor_Variant.inj()(new Data_Symbol.IsSymbol(function () {
                                                  return "query";
                                              }))(Formless_Types_Component.functorQueryF)(Data_Symbol.SProxy.value)(Formless_Types_Component.SendQuery.create(Halogen_Query_ChildQuery.mkChildQueryBox(new Halogen_Query_ChildQuery.ChildQuery(function (dictApplicative) {
                                                  return function (k) {
                                                      return function ($9) {
                                                          return Data_Maybe.maybe(Control_Applicative.pure(dictApplicative)(Data_Maybe.Nothing.value))(k)(Halogen_Data_Slot.lookup(dictCons1)(dictIsSymbol1)(dictOrd1)(il)(is)($9));
                                                      };
                                                  };
                                              }, cq, Control_Category.identity(Control_Category.categoryFn))))));
                                          };
                                      };
                                  };
                              };
                          };
                      };
                  };
              };
          };
      };
  };
  var asQuery = function ($10) {
      return Data_Functor_Variant.inj()(new Data_Symbol.IsSymbol(function () {
          return "query";
      }))(Formless_Types_Component.functorQueryF)(Data_Symbol.SProxy.value)(Halogen_Query.tell(Formless_Types_Component.AsQuery.create($10)));
  };
  exports["asQuery"] = asQuery;
  exports["submitReply"] = submitReply;
  exports["sendQuery"] = sendQuery;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.Nested.Form"] = $PS["Example.Nested.Form"] || {};
  var exports = $PS["Example.Nested.Form"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Query = $PS["Formless.Query"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];                
  var MemberForm = function (x) {
      return x;
  };
  var Destroy = (function () {
      function Destroy() {

      };
      Destroy.value = new Destroy();
      return Destroy;
  })();
  var RemoveMe = (function () {
      function RemoveMe() {

      };
      RemoveMe.value = new RemoveMe();
      return RemoveMe;
  })();
  var EventForm = function (x) {
      return x;
  };
  var AddMemberForm = (function () {
      function AddMemberForm() {

      };
      AddMemberForm.value = new AddMemberForm();
      return AddMemberForm;
  })();
  var SubmitAll = (function () {
      function SubmitAll() {

      };
      SubmitAll.value = new SubmitAll();
      return SubmitAll;
  })();
  var HandleMemberForm = (function () {
      function HandleMemberForm(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleMemberForm.create = function (value0) {
          return function (value1) {
              return new HandleMemberForm(value0, value1);
          };
      };
      return HandleMemberForm;
  })();
  var newtypeMemberForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, MemberForm);
  var newtypeEventForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, EventForm);
  var memberFormComponent = (function () {
      var render = function (st) {
          return Example_App_UI_Element.formContent_([ Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("field") ])([ Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(function (v) {
              return Data_Maybe.Just.create(Formless_Action.injAction(RemoveMe.value));
          }) ])([ Halogen_HTML_Core.text("Remove Me") ]) ]), Example_App_UI_Element.input({
              label: "Member Name",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Provide the registrant's name")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)(st.form)),
              placeholder: "Dale Cooper"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($35) {
              return Data_Maybe.Just.create(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)($35));
          }) ]), Example_App_UI_Element.input({
              label: "Member Email",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Provide the registrant's email address")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)(st.form)),
              placeholder: "dalecooper@fbi.gov"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($36) {
              return Data_Maybe.Just.create(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)($36));
          }) ]), Example_App_UI_Element.input({
              label: "Additional Notes",
              help: new Data_Either.Right("Provide any additional notes you'd like."),
              placeholder: "Fond of Tibetan traditions"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "notes";
          }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($37) {
              return Data_Maybe.Just.create(Formless_Action.set(new Data_Symbol.IsSymbol(function () {
                  return "notes";
              }))(newtypeMemberForm)()(Data_Symbol.SProxy.value)($37));
          }) ]) ]);
      };
      var memberFormInput = {
          validators: {
              name: Example_App_Validation.minLength(Effect_Aff.monadAff)(5),
              email: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.emailFormat(Effect_Aff.monadAff))(Example_App_Validation.emailIsUsed(Effect_Aff_Class.monadAffAff)),
              notes: Formless_Validation.noValidation(Effect_Aff.monadAff)
          },
          initialInputs: Data_Maybe.Nothing.value
      };
      var handleAction = function (v) {
          return Halogen_Query_HalogenM.raise(Destroy.value);
      };
      return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))()(Formless_Internal_Transform.nilCountErrors))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))()(Formless_Internal_Transform.nilAllTouched))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Effect_Aff.monadAff)()(newtypeMemberForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Effect_Aff.monadAff)()(newtypeMemberForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))(Effect_Aff.monadAff)()(newtypeMemberForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff)))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeMemberForm)(newtypeMemberForm)(newtypeMemberForm)(newtypeMemberForm)(newtypeMemberForm)(newtypeMemberForm)(newtypeMemberForm)(newtypeMemberForm)()()()()()()()()()(Data_Function["const"](memberFormInput))({
          render: render,
          handleAction: handleAction,
          handleQuery: Formless_Component.defaultSpec.handleQuery,
          handleEvent: Formless_Component.defaultSpec.handleEvent,
          receive: Formless_Component.defaultSpec.receive,
          initialize: Formless_Component.defaultSpec.initialize,
          finalize: Formless_Component.defaultSpec.finalize
      });
  })();
  var eventComponent = (function () {
      var render = function (st) {
          var mkMemberForm = function (i) {
              var handler = function ($38) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(HandleMemberForm.create(i)($38)));
              };
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "memberForm";
              }))(Data_Ord.ordInt)(Data_Symbol.SProxy.value)(i)(memberFormComponent)(Data_Unit.unit)(handler);
          };
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("field is-grouped") ])([ Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("control") ])([ Example_App_UI_Element.button([ Halogen_HTML_Events.onClick(function (v) {
              return Data_Maybe.Just.create(Formless_Action.injAction(AddMemberForm.value));
          }) ])([ Halogen_HTML_Core.text("Add Member Form") ]) ]), Halogen_HTML_Elements.div([ Example_App_UI_Element.class_("control") ])([ Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(function (v) {
              return Data_Maybe.Just.create(Formless_Action.injAction(SubmitAll.value));
          }) ])([ Halogen_HTML_Core.text("Submit") ]) ]) ]), Example_App_UI_Element.input({
              label: "Event Name",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Provide an event name")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(newtypeEventForm)()(Data_Symbol.SProxy.value)(st.form)),
              placeholder: "My Event"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(newtypeEventForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($39) {
              return Data_Maybe.Just.create(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(newtypeEventForm)()(Data_Symbol.SProxy.value)($39));
          }) ]), Example_App_UI_Element.input({
              label: "Event Location",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Provide an event location")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(newtypeEventForm)()(Data_Symbol.SProxy.value)(st.form)),
              placeholder: "Los Angeles, CA"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "location";
          }))(newtypeEventForm)()(Data_Symbol.SProxy.value)(st.form)), Halogen_HTML_Events.onValueInput(function ($40) {
              return Data_Maybe.Just.create(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(newtypeEventForm)()(Data_Symbol.SProxy.value)($40));
          }) ]), Halogen_HTML_Elements.div_(Data_Functor.map(Data_Functor.functorArray)(mkMemberForm)(st.formIds)) ]);
      };
      var handleEvent = function (v) {
          if (v instanceof Formless_Types_Component.Submitted) {
              return Halogen_Query_HalogenM.raise(Formless_Transform_Record.unwrapOutputFields(newtypeEventForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()()))(v.value0));
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
      };
      var handleAction = (function () {
          var $$eval = function (act) {
              return Formless_Component.handleAction(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "notes";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
                  return "email";
              }))(Example_App_Validation.eqEmail)))))))()(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.nilCountErrors))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.nilAllTouched))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))(Effect_Aff.monadAff)()(newtypeEventForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))(Effect_Aff.monadAff)()(newtypeEventForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Effect_Aff.monadAff)()(newtypeEventForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff)))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "location";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "members";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)()(handleAction)(handleEvent)(act);
          };
          return function (v) {
              if (v instanceof HandleMemberForm) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $24 = {};
                      for (var $25 in st) {
                          if ({}.hasOwnProperty.call(st, $25)) {
                              $24[$25] = st[$25];
                          };
                      };
                      $24.formIds = Data_Array.filter(function (v2) {
                          return v2 !== v.value0;
                      })(st.formIds);
                      return $24;
                  }))(function () {
                      return $$eval(Formless_Action.set(new Data_Symbol.IsSymbol(function () {
                          return "members";
                      }))(newtypeEventForm)()(Data_Symbol.SProxy.value)(Data_Maybe.Nothing.value));
                  });
              };
              if (v instanceof AddMemberForm) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (st) {
                      var $29 = {};
                      for (var $30 in st) {
                          if ({}.hasOwnProperty.call(st, $30)) {
                              $29[$30] = st[$30];
                          };
                      };
                      $29.nextId = st.nextId + 1 | 0;
                      $29.formIds = Data_Array.snoc(st.formIds)(st.nextId);
                      return $29;
                  });
              };
              if (v instanceof SubmitAll) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.queryAll()(new Data_Symbol.IsSymbol(function () {
                          return "memberForm";
                      }))(Data_Ord.ordInt)(Data_Symbol.SProxy.value)(Halogen_Query.request(Formless_Query.submitReply)))(function (v2) {
                          var v3 = Data_Functor.map(Data_Functor.functorArray)(Formless_Transform_Record.unwrapOutputFields(newtypeMemberForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                              return "email";
                          }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                              return "name";
                          }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                              return "notes";
                          }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())))(Data_Array.catMaybes(Data_List.toUnfoldable(Data_Unfoldable.unfoldableArray)(Data_Map_Internal.values(v2))));
                          if (v3.length === 0) {
                              return $$eval(Formless_Action.submit);
                          };
                          return Control_Apply.applySecond(Halogen_Query_HalogenM.applyHalogenM)($$eval(Formless_Action.set(new Data_Symbol.IsSymbol(function () {
                              return "members";
                          }))(newtypeEventForm)()(Data_Symbol.SProxy.value)(new Data_Maybe.Just(v3))))($$eval(Formless_Action.submit));
                      });
                  });
              };
              throw new Error("Failed pattern match at Example.Nested.Form (line 78, column 18 - line 92, column 73): " + [ v.constructor.name ]);
          };
      })();
      var eventFormInput = {
          validators: {
              name: Example_App_Validation.minLength(Effect_Aff.monadAff)(3),
              location: Example_App_Validation.minLength(Effect_Aff.monadAff)(3),
              members: Formless_Validation.hoistFn_(Effect_Aff.monadAff)(Data_Maybe.fromMaybe([  ]))
          },
          initialInputs: Data_Maybe.Nothing.value,
          formIds: [  ],
          nextId: 0
      };
      return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "notes";
      }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Data_Eq.eqString))()(new Data_Symbol.IsSymbol(function () {
          return "email";
      }))(Example_App_Validation.eqEmail)))))))()(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.nilCountErrors))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.nilAllTouched))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))(Effect_Aff.monadAff)()(newtypeEventForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))(Effect_Aff.monadAff)()(newtypeEventForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Effect_Aff.monadAff)()(newtypeEventForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff)))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "location";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "members";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)(newtypeEventForm)()()()()()()()()()(Data_Function["const"](eventFormInput))({
          render: render,
          handleAction: handleAction,
          handleQuery: Formless_Component.defaultSpec.handleQuery,
          handleEvent: handleEvent,
          receive: Formless_Component.defaultSpec.receive,
          initialize: Formless_Component.defaultSpec.initialize,
          finalize: Formless_Component.defaultSpec.finalize
      });
  })();
  exports["EventForm"] = EventForm;
  exports["AddMemberForm"] = AddMemberForm;
  exports["SubmitAll"] = SubmitAll;
  exports["HandleMemberForm"] = HandleMemberForm;
  exports["eventComponent"] = eventComponent;
  exports["MemberForm"] = MemberForm;
  exports["RemoveMe"] = RemoveMe;
  exports["Destroy"] = Destroy;
  exports["memberFormComponent"] = memberFormComponent;
  exports["newtypeEventForm"] = newtypeEventForm;
  exports["newtypeMemberForm"] = newtypeMemberForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.Nested.Page"] = $PS["Example.Nested.Page"] || {};
  var exports = $PS["Example.Nested.Page"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Example_Nested_Form = $PS["Example.Nested.Form"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var HandleEventForm = (function () {
      function HandleEventForm(value0) {
          this.value0 = value0;
      };
      HandleEventForm.create = function (value0) {
          return new HandleEventForm(value0);
      };
      return HandleEventForm;
  })();
  var component = (function () {
      var render = function (st) {
          var handler = function ($4) {
              return Data_Maybe.Just.create(HandleEventForm.create($4));
          };
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A form with a dynamic array of nested sub-forms.") ]), Example_App_UI_Element.p_("\x0a          It is possible to nest sub-forms within Formless like any other external component. This allows you to create an arbitrary number of forms within other forms while preserving the type safety provided by the Formless library. Try submitting the form with no sub-forms, and review the output in the console. Next, try adding one or more sub-forms and submitting them when valid or invalid.\x0a          "), Halogen_HTML_Elements.br_, Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "eventForm";
          }))(Data_Ord.ordUnit)(Data_Symbol.SProxy.value)(Data_Unit.unit)(Example_Nested_Form.eventComponent)(Data_Unit.unit)(handler) ]);
      };
      var handleAction = function (v) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.logShow(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "location";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "members";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "email";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "notes";
          }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Example_App_Validation.showEmail)))))(Data_Show.showString)))(v.value0));
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](Data_Unit.unit),
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["HandleEventForm"] = HandleEventForm;
  exports["component"] = component;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.RealWorld.OptionsForm"] = $PS["Example.RealWorld.OptionsForm"] || {};
  var exports = $PS["Example.RealWorld.OptionsForm"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Generic_Rep = $PS["Data.Generic.Rep"];
  var Data_Generic_Rep_Show = $PS["Data.Generic.Rep.Show"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Example_App_UI_Dropdown = $PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];
  var Select = $PS["Select"];                
  var Low = (function () {
      function Low() {

      };
      Low.value = new Low();
      return Low;
  })();
  var Medium = (function () {
      function Medium() {

      };
      Medium.value = new Medium();
      return Medium;
  })();
  var Fast = (function () {
      function Fast() {

      };
      Fast.value = new Fast();
      return Fast;
  })();
  var ViewCost = (function () {
      function ViewCost() {

      };
      ViewCost.value = new ViewCost();
      return ViewCost;
  })();
  var ClickCost = (function () {
      function ClickCost() {

      };
      ClickCost.value = new ClickCost();
      return ClickCost;
  })();
  var InstallCost = (function () {
      function InstallCost() {

      };
      InstallCost.value = new InstallCost();
      return InstallCost;
  })();
  var Dollars = function (x) {
      return x;
  };
  var Options = function (x) {
      return x;
  };
  var OptionsForm = function (x) {
      return x;
  };
  var HandleDropdown = (function () {
      function HandleDropdown(value0) {
          this.value0 = value0;
      };
      HandleDropdown.create = function (value0) {
          return new HandleDropdown(value0);
      };
      return HandleDropdown;
  })();
  var toTextMetric = new Example_App_Validation.ToText(function (v) {
      if (v instanceof ViewCost) {
          return "View Cost";
      };
      if (v instanceof ClickCost) {
          return "Click Cost";
      };
      if (v instanceof InstallCost) {
          return "Install Cost";
      };
      throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 44, column 1 - line 44, column 39): " + [ v.constructor.name ]);
  });
  var showDollars = Data_Show.showInt;
  var prx = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictMakeSProxies) {
              return Formless_Transform_Row.mkSProxies(dictRowToList)(dictNewtype)(dictMakeSProxies)(Formless_Types_Form.FormProxy.value);
          };
      };
  };
  var newtypeOptionsForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, OptionsForm);
  var initialSpeed = new Formless_Class_Initial.Initial(Low.value);
  var genericSpeed = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof Low) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof Medium) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof Fast) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 52, column 8 - line 52, column 48): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return Low.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return Medium.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return Fast.value;
      };
      throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 52, column 8 - line 52, column 48): " + [ x.constructor.name ]);
  });
  var showSpeed = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericSpeed)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Low";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Medium";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "Fast";
  }))))));
  var genericMetric = new Data_Generic_Rep.Generic(function (x) {
      if (x instanceof ViewCost) {
          return new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value);
      };
      if (x instanceof ClickCost) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(Data_Generic_Rep.NoArguments.value));
      };
      if (x instanceof InstallCost) {
          return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(Data_Generic_Rep.NoArguments.value));
      };
      throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 37, column 8 - line 37, column 50): " + [ x.constructor.name ]);
  }, function (x) {
      if (x instanceof Data_Generic_Rep.Inl) {
          return ViewCost.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
          return ClickCost.value;
      };
      if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
          return InstallCost.value;
      };
      throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 37, column 8 - line 37, column 50): " + [ x.constructor.name ]);
  });
  var showMetric = new Data_Show.Show(Data_Generic_Rep_Show.genericShow(genericMetric)(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ViewCost";
  })))(Data_Generic_Rep_Show.genericShowSum(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "ClickCost";
  })))(Data_Generic_Rep_Show.genericShowConstructor(Data_Generic_Rep_Show.genericShowArgsNoArguments)(new Data_Symbol.IsSymbol(function () {
      return "InstallCost";
  }))))));
  var showOptions = Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "clickCost";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "dimensions";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "enable";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "installCost";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "metric";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "size";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "speed";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "viewCost";
  }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(showDollars)))(showSpeed))(Data_Show.showNumber))(showMetric))(Data_Maybe.showMaybe(showDollars)))(Data_Show.showBoolean))(Data_Show.showNumber))(Data_Maybe.showMaybe(showDollars)));
  var eqSpeed = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Low && y instanceof Low) {
              return true;
          };
          if (x instanceof Medium && y instanceof Medium) {
              return true;
          };
          if (x instanceof Fast && y instanceof Fast) {
              return true;
          };
          return false;
      };
  });
  var eqMetric = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof ViewCost && y instanceof ViewCost) {
              return true;
          };
          if (x instanceof ClickCost && y instanceof ClickCost) {
              return true;
          };
          if (x instanceof InstallCost && y instanceof InstallCost) {
              return true;
          };
          return false;
      };
  });                                 
  var component = (function () {
      var render = function (v) {
          var renderViewCost = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Example_App_Validation.toTextFieldError)(newtypeOptionsForm)(newtypeOptionsForm)()()(Example_App_UI_Element.input)({
              label: "View Cost",
              placeholder: "100",
              help: "Enter a dollar amount for view costs.",
              sym: (prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).viewCost
          })(v);
          var renderSpeed = (function () {
              var speed = Formless_Retrieve.getField(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).speed)(v.form);
              var speedInput = function (speed$prime) {
                  return Halogen_HTML_Elements.label([ Example_App_UI_Element.class_("radio") ])([ Halogen_HTML_Elements.input([ Halogen_HTML_Properties.name("speed"), Example_App_UI_Element.class_("radio"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputRadio.value), Halogen_HTML_Properties.checked(Data_Eq.eq(eqSpeed)(speed.input)(speed$prime)), Halogen_HTML_Events.onClick(function (v1) {
                      return Data_Maybe.Just.create(Formless_Action.set(new Data_Symbol.IsSymbol(function () {
                          return "speed";
                      }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "clickCost";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "dimensions";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "enable";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "installCost";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "size";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "speed";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "viewCost";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).speed)(speed$prime));
                  }) ]), Halogen_HTML_Core.text(" " + Data_Show.show(showSpeed)(speed$prime)) ]);
              };
              return Example_App_UI_Element.field({
                  label: "Speed",
                  help: new Data_Either.Right("How fast do you want to go?")
              })([ speedInput(Low.value), speedInput(Medium.value), speedInput(Fast.value) ]);
          })();
          var renderSize = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Example_App_Validation.toTextFieldError)(newtypeOptionsForm)(newtypeOptionsForm)()()(Example_App_UI_Element.input)({
              label: "Size",
              placeholder: "10.233",
              help: "Enter a total campaign size.",
              sym: (prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).size
          })(v);
          var renderMetric = (function () {
              var handler = function ($74) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(HandleDropdown.create($74)));
              };
              var ddInput = {
                  placeholder: "Choose a metric",
                  items: [ ViewCost.value, ClickCost.value, InstallCost.value ]
              };
              return Example_App_UI_Element.field({
                  label: "Metric",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose a metric to optimize for.")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "metric";
                  }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "clickCost";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "dimensions";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "enable";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "installCost";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "metric";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "size";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "speed";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "viewCost";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).metric)(v.form))
              })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "dropdown";
              }))(Data_Ord.ordUnit)(Example_App_UI_Dropdown["_dropdown"])(Data_Unit.unit)(Select.component(Effect_Aff_Class.monadAffAff)()()()(Example_App_UI_Dropdown.input)(Example_App_UI_Dropdown.spec(Effect_Aff_Class.monadAffAff)(toTextMetric)(eqMetric)))(ddInput)(handler) ]);
          })();
          var renderInstallCost = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Example_App_Validation.toTextFieldError)(newtypeOptionsForm)(newtypeOptionsForm)()()(Example_App_UI_Element.input)({
              label: "Install Cost",
              placeholder: "10",
              help: "Enter a dollar amount you're willing to pay for an app install.",
              sym: (prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).installCost
          })(v);
          var renderEnabled = Example_App_UI_Element.field({
              label: "Enable",
              help: new Data_Either.Right("Do you want to enable this set of options?")
          })([ Halogen_HTML_Elements.label([ Example_App_UI_Element.class_("checkbox") ])([ Halogen_HTML_Elements.input([ Example_App_UI_Element.class_("checkbox"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.isPropInputType)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.checked(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).enable)(v.form)), Halogen_HTML_Events.onChange(function (v1) {
              return Data_Maybe.Just.create(Formless_Action.modify(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).enable)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraBoolean)));
          }) ]), Halogen_HTML_Core.text(" Enable extra options") ]) ]);
          var renderDimensions = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Example_App_Validation.toTextFieldError)(newtypeOptionsForm)(newtypeOptionsForm)()()(Example_App_UI_Element.input)({
              label: "Dimensions",
              placeholder: "1.027",
              help: "Enter a total campaign dimension set ratio buzzword.",
              sym: (prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).dimensions
          })(v);
          var renderClickCost = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Example_App_Validation.toTextFieldError)(newtypeOptionsForm)(newtypeOptionsForm)()()(Example_App_UI_Element.input)({
              label: "Click Cost",
              placeholder: "1",
              help: "Enter a dollar amount you're willing to pay for a click.",
              sym: (prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).clickCost
          })(v);
          return Example_App_UI_Element.formContent_([ renderEnabled, Halogen_HTML_Elements.div([ Example_App_UI_Element.class_(Data_Monoid.guard(Data_Monoid.monoidString)(!Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).enable)(v.form))("is-hidden")) ])([ renderMetric, (function () {
              var v1 = Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).metric)(v.form);
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof ViewCost) {
                  return renderViewCost;
              };
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof ClickCost) {
                  return renderClickCost;
              };
              if (v1 instanceof Data_Maybe.Just && v1.value0 instanceof InstallCost) {
                  return renderInstallCost;
              };
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Halogen_HTML_Elements.div_([  ]);
              };
              throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 183, column 11 - line 187, column 34): " + [ v1.constructor.name ]);
          })(), renderSize, renderDimensions, renderSpeed ]) ]);
      };
      var defaultInputFields = Formless_Transform_Record.wrapInputFields(newtypeOptionsForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.wrapField(Formless_Types_Form.newtypeInputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()())()())()())()())()()))({
          enable: false,
          metric: new Data_Maybe.Just(ViewCost.value),
          viewCost: "10",
          clickCost: "",
          installCost: "",
          size: "21",
          dimensions: "3005",
          speed: Low.value
      });
      var handleEvent = function (v) {
          if (v instanceof Formless_Types_Component.Changed) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
                  var enabled = Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                      return "enable";
                  }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "clickCost";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "dimensions";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "enable";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "installCost";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "metric";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "size";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "speed";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "viewCost";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).enable)(v.value0.form);
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise({
                      errors: v.value0.errors,
                      dirty: v.value0.dirty
                  }))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                          var $64 = {};
                          for (var $65 in v2) {
                              if ({}.hasOwnProperty.call(v2, $65)) {
                                  $64[$65] = v2[$65];
                              };
                          };
                          $64.prevEnabled = enabled;
                          return $64;
                      }))(function () {
                          return Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(v1.prevEnabled !== enabled)((function () {
                              if (enabled) {
                                  var initial = Formless_Transform_Row.mkInputFields()(newtypeOptionsForm)(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "clickCost";
                                  }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "dimensions";
                                  }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "enable";
                                  }))(Formless_Class_Initial.initialBoolean)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "installCost";
                                  }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "metric";
                                  }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "size";
                                  }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "speed";
                                  }))(initialSpeed)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
                                      return "viewCost";
                                  }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Types_Form.FormProxy.value);
                                  var $$new = Data_Newtype.over(newtypeOptionsForm)(newtypeOptionsForm)(OptionsForm)(function (v2) {
                                      return {
                                          enable: true,
                                          clickCost: v2.clickCost,
                                          dimensions: v2.dimensions,
                                          installCost: v2.installCost,
                                          metric: v2.metric,
                                          size: v2.size,
                                          speed: v2.speed,
                                          viewCost: v2.viewCost
                                      };
                                  })(initial);
                                  return $$eval(Formless_Action.loadForm($$new));
                              };
                              return $$eval(Formless_Action.loadForm(defaultInputFields));
                          })());
                      });
                  });
              });
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
      };
      var handleAction = function (v) {
          if (v.value0 instanceof Example_App_UI_Dropdown.Selected) {
              return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).metric)(new Data_Maybe.Just(v.value0.value0)));
          };
          if (v.value0 instanceof Example_App_UI_Dropdown.Cleared) {
              return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "clickCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "dimensions";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "enable";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "installCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "metric";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "size";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "speed";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "viewCost";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).metric)(Data_Maybe.Nothing.value));
          };
          throw new Error("Failed pattern match at Example.RealWorld.OptionsForm (line 174, column 27 - line 176, column 60): " + [ v.value0.constructor.name ]);
      };
      var $$eval = function (act) {
          return Formless_Component.handleAction(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Types_Form.eqInputField(eqSpeed)))()(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(eqMetric))))()(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqBoolean)))()(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal_Transform.nilCountErrors)))))))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal_Transform.nilAllTouched)))))))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil)))))))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil)))))))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff))))))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "clickCost";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "dimensions";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "enable";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "installCost";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "metric";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "size";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "speed";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
              return "viewCost";
          }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)()(handleAction)(handleEvent)(act);
      };
      var input = (function () {
          var validateMetric = function (metric) {
              return function (form) {
                  return function (i) {
                      var $73 = Data_Eq.eq(Data_Maybe.eqMaybe(eqMetric))(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(newtypeOptionsForm)()((prx()(newtypeOptionsForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "clickCost";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "dimensions";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "enable";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "installCost";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "size";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "speed";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "viewCost";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil)))))))))).metric)(form))(new Data_Maybe.Just(metric));
                      if ($73) {
                          return Data_Functor.map(Effect_Aff.functorAff)(Data_Functor.map(Data_Either.functorEither)(function ($75) {
                              return Data_Maybe.Just.create(Dollars($75));
                          }))(Formless_Validation.runValidation(Effect_Aff.monadAff)(Example_App_Validation.strIsInt(Effect_Aff.monadAff))(form)(i));
                      };
                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Applicative.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
                  };
              };
          };
          return {
              prevEnabled: false,
              initialInputs: new Data_Maybe.Just(defaultInputFields),
              validators: {
                  enable: Formless_Validation.noValidation(Effect_Aff.monadAff),
                  metric: Example_App_Validation.exists(Effect_Aff.monadAff),
                  viewCost: validateMetric(ViewCost.value),
                  clickCost: validateMetric(ClickCost.value),
                  installCost: validateMetric(InstallCost.value),
                  size: Data_Functor.map(Formless_Validation.functorValidation(Effect_Aff.functorAff))(Data_Int.toNumber)(Example_App_Validation.strIsInt(Effect_Aff.monadAff)),
                  dimensions: Data_Functor.map(Formless_Validation.functorValidation(Effect_Aff.functorAff))(Data_Int.toNumber)(Example_App_Validation.strIsInt(Effect_Aff.monadAff)),
                  speed: Formless_Validation.noValidation(Effect_Aff.monadAff)
              }
          };
      })();
      return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Types_Form.eqInputField(eqSpeed)))()(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(eqMetric))))()(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqBoolean)))()(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))()(Formless_Internal_Transform.nilCountErrors)))))))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))()(Formless_Internal_Transform.nilAllTouched)))))))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil)))))))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil)))))))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Effect_Aff.monadAff)()(newtypeOptionsForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff))))))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "clickCost";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "dimensions";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "enable";
      }))(Formless_Class_Initial.initialBoolean)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "installCost";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "metric";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "size";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "speed";
      }))(initialSpeed)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "viewCost";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)(newtypeOptionsForm)()()()()()()()()()(Data_Function["const"](input))({
          render: render,
          handleAction: handleAction,
          handleQuery: Formless_Component.defaultSpec.handleQuery,
          handleEvent: handleEvent,
          receive: Formless_Component.defaultSpec.receive,
          initialize: Formless_Component.defaultSpec.initialize,
          finalize: Formless_Component.defaultSpec.finalize
      });
  })();
  var _optionsForm = Data_Symbol.SProxy.value;
  exports["Dollars"] = Dollars;
  exports["ViewCost"] = ViewCost;
  exports["ClickCost"] = ClickCost;
  exports["InstallCost"] = InstallCost;
  exports["Low"] = Low;
  exports["Medium"] = Medium;
  exports["Fast"] = Fast;
  exports["Options"] = Options;
  exports["OptionsForm"] = OptionsForm;
  exports["_optionsForm"] = _optionsForm;
  exports["HandleDropdown"] = HandleDropdown;
  exports["prx"] = prx;
  exports["component"] = component;
  exports["showDollars"] = showDollars;
  exports["genericMetric"] = genericMetric;
  exports["eqMetric"] = eqMetric;
  exports["showMetric"] = showMetric;
  exports["toTextMetric"] = toTextMetric;
  exports["genericSpeed"] = genericSpeed;
  exports["eqSpeed"] = eqSpeed;
  exports["showSpeed"] = showSpeed;
  exports["initialSpeed"] = initialSpeed;
  exports["showOptions"] = showOptions;
  exports["newtypeOptionsForm"] = newtypeOptionsForm;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.RealWorld.GroupForm"] = $PS["Example.RealWorld.GroupForm"] || {};
  var exports = $PS["Example.RealWorld.GroupForm"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Example_App_UI_Dropdown = $PS["Example.App.UI.Dropdown"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_App_UI_Typeahead = $PS["Example.App.UI.Typeahead"];
  var Example_App_Validation = $PS["Example.App.Validation"];
  var Example_RealWorld_OptionsForm = $PS["Example.RealWorld.OptionsForm"];
  var Formless_Action = $PS["Formless.Action"];
  var Formless_Class_Initial = $PS["Formless.Class.Initial"];
  var Formless_Component = $PS["Formless.Component"];
  var Formless_Internal_Transform = $PS["Formless.Internal.Transform"];
  var Formless_Query = $PS["Formless.Query"];
  var Formless_Retrieve = $PS["Formless.Retrieve"];
  var Formless_Transform_Record = $PS["Formless.Transform.Record"];
  var Formless_Transform_Row = $PS["Formless.Transform.Row"];
  var Formless_Types_Component = $PS["Formless.Types.Component"];
  var Formless_Types_Form = $PS["Formless.Types.Form"];
  var Formless_Validation = $PS["Formless.Validation"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Heterogeneous_Mapping = $PS["Heterogeneous.Mapping"];
  var Record = $PS["Record"];
  var Select_1 = $PS["Select"];                
  var GroupTab = (function () {
      function GroupTab() {

      };
      GroupTab.value = new GroupTab();
      return GroupTab;
  })();
  var OptionsTab = (function () {
      function OptionsTab() {

      };
      OptionsTab.value = new OptionsTab();
      return OptionsTab;
  })();
  var Applications = (function () {
      function Applications() {

      };
      Applications.value = new Applications();
      return Applications;
  })();
  var Pixels = (function () {
      function Pixels() {

      };
      Pixels.value = new Pixels();
      return Pixels;
  })();
  var Admin = function (x) {
      return x;
  };
  var Group = function (x) {
      return x;
  };
  var GroupForm = function (x) {
      return x;
  };
  var Select = (function () {
      function Select(value0) {
          this.value0 = value0;
      };
      Select.create = function (value0) {
          return new Select(value0);
      };
      return Select;
  })();
  var UpdateKey1 = (function () {
      function UpdateKey1(value0) {
          this.value0 = value0;
      };
      UpdateKey1.create = function (value0) {
          return new UpdateKey1(value0);
      };
      return UpdateKey1;
  })();
  var UpdateKey2 = (function () {
      function UpdateKey2(value0) {
          this.value0 = value0;
      };
      UpdateKey2.create = function (value0) {
          return new UpdateKey2(value0);
      };
      return UpdateKey2;
  })();
  var HandleDropdown = (function () {
      function HandleDropdown(value0) {
          this.value0 = value0;
      };
      HandleDropdown.create = function (value0) {
          return new HandleDropdown(value0);
      };
      return HandleDropdown;
  })();
  var HandleTASingle = (function () {
      function HandleTASingle(value0) {
          this.value0 = value0;
      };
      HandleTASingle.create = function (value0) {
          return new HandleTASingle(value0);
      };
      return HandleTASingle;
  })();
  var HandleTAMulti = (function () {
      function HandleTAMulti(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      HandleTAMulti.create = function (value0) {
          return function (value1) {
              return new HandleTAMulti(value0, value1);
          };
      };
      return HandleTAMulti;
  })();
  var HandleOptionsForm = (function () {
      function HandleOptionsForm(value0) {
          this.value0 = value0;
      };
      HandleOptionsForm.create = function (value0) {
          return new HandleOptionsForm(value0);
      };
      return HandleOptionsForm;
  })();
  var ResetForm = (function () {
      function ResetForm() {

      };
      ResetForm.value = new ResetForm();
      return ResetForm;
  })();
  var toTextAdmin = new Example_App_Validation.ToText(function (v) {
      if (v.id instanceof Data_Maybe.Just) {
          return "Administrator " + Data_Show.show(Data_Show.showInt)(v.id.value0);
      };
      if (v.id instanceof Data_Maybe.Nothing) {
          return "None";
      };
      throw new Error("Failed pattern match at Example.RealWorld.GroupForm (line 40, column 27 - line 44, column 1): " + [ v.id.constructor.name ]);
  });
  var showGroupId = Data_Show.showInt;
  var showAdmin = Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(showGroupId)));
  var showGroup = Data_Show.showRecord()(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "admin";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "applications";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "name";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "options";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "pixels";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "secretKey";
  }))(Data_Show.showRecordFieldsCons(new Data_Symbol.IsSymbol(function () {
      return "whiskey";
  }))(Data_Show.showRecordFieldsNil)(Data_Show.showString))(Data_Show.showString))(Data_Show.showArray(Data_Show.showString)))(Data_Maybe.showMaybe(Example_RealWorld_OptionsForm.showOptions)))(Data_Show.showString))(showGroupId))(Data_Show.showArray(Data_Show.showString)))(showAdmin));
  var prx = function (dictRowToList) {
      return function (dictNewtype) {
          return function (dictMakeSProxies) {
              return Formless_Transform_Row.mkSProxies(dictRowToList)(dictNewtype)(dictMakeSProxies)(Formless_Types_Form.FormProxy.value);
          };
      };
  };          
  var newtypeGroupForm = new Data_Newtype.Newtype(function (n) {
      return n;
  }, GroupForm);
  var eqTab = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof GroupTab && y instanceof GroupTab) {
              return true;
          };
          if (x instanceof OptionsTab && y instanceof OptionsTab) {
              return true;
          };
          return false;
      };
  });
  var eqTASlot = new Data_Eq.Eq(function (x) {
      return function (y) {
          if (x instanceof Applications && y instanceof Applications) {
              return true;
          };
          if (x instanceof Pixels && y instanceof Pixels) {
              return true;
          };
          return false;
      };
  });
  var ordTASlot = new Data_Ord.Ord(function () {
      return eqTASlot;
  }, function (x) {
      return function (y) {
          if (x instanceof Applications && y instanceof Applications) {
              return Data_Ordering.EQ.value;
          };
          if (x instanceof Applications) {
              return Data_Ordering.LT.value;
          };
          if (y instanceof Applications) {
              return Data_Ordering.GT.value;
          };
          if (x instanceof Pixels && y instanceof Pixels) {
              return Data_Ordering.EQ.value;
          };
          throw new Error("Failed pattern match at Example.RealWorld.GroupForm (line 116, column 8 - line 116, column 40): " + [ x.constructor.name, y.constructor.name ]);
      };
  });
  var eqGroupId = Data_Eq.eqInt;
  var eqAdmin = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
      return "id";
  }))(Data_Maybe.eqMaybe(eqGroupId)));
  var component = (function () {
      var render = function (v) {
          var renderWhiskey = (function () {
              var taInput = {
                  placeholder: "Choose a whiskey",
                  items: [ "Laphroiag 10", "Lagavulin 12", "Lagavulin 16", "Oban 16", "Kilchoman Blue Label" ]
              };
              var handler = function ($88) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(HandleTASingle.create($88)));
              };
              return Example_App_UI_Element.field({
                  label: "Whiskey",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose a whiskey to be awarded")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).whiskey)(v.form))
              })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "typeaheadSingle";
              }))(Data_Ord.ordUnit)(Example_App_UI_Typeahead["_typeaheadSingle"])(Data_Unit.unit)(Select_1.component(Effect_Aff_Class.monadAffAff)()()()(Example_App_UI_Typeahead.input(Data_Maybe.monoidMaybe(Data_Semigroup.semigroupString)))(Example_App_UI_Typeahead.single(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString)(Data_Semigroup.semigroupString)))(taInput)(handler) ]);
          })();
          var renderSecretKey2 = Example_App_UI_Element.input({
              label: "Secret Key 1",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Confirm the secret identifier for the group")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey2)(v.form)),
              placeholder: "ia30<>Psncdi3b#$<0423"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey2)(v.form)), Halogen_HTML_Events.onValueInput(function ($89) {
              return Data_Maybe.Just.create(Formless_Action.injAction(UpdateKey2.create($89)));
          }) ]);
          var renderSecretKey1 = Example_App_UI_Element.input({
              label: "Secret Key 1",
              help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Provide a secret identifier for the group")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey1)(v.form)),
              placeholder: "ia30<>Psncdi3b#$<0423"
          })([ Halogen_HTML_Properties.value(Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "admin";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "applications";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "pixels";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey1";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "secretKey2";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
              return "whiskey";
          }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey1)(v.form)), Halogen_HTML_Events.onValueInput(function ($90) {
              return Data_Maybe.Just.create(Formless_Action.injAction(UpdateKey1.create($90)));
          }) ]);
          var renderPixels = (function () {
              var taInput = {
                  placeholder: "Search pixels",
                  items: [ "My favorite pixel", "Your favorite pixel", "Application main pixel", "A pixel for you is a pixel for me" ]
              };
              var selectComponent = Select_1.component(Effect_Aff_Class.monadAffAff)()()()(Example_App_UI_Typeahead.input(Data_Monoid.monoidArray))(Example_App_UI_Typeahead.multi(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString));
              var handler = function ($91) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(HandleTAMulti.create(Pixels.value)($91)));
              };
              return Example_App_UI_Element.field({
                  label: "Tracking Pixels",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose a pixel to track")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).pixels)(v.form))
              })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "typeaheadMulti";
              }))(ordTASlot)(Example_App_UI_Typeahead["_typeaheadMulti"])(Pixels.value)(selectComponent)(taInput)(handler) ]);
          })();
          var renderName = Example_App_UI_Element.formlessField(new Data_Symbol.IsSymbol(function () {
              return "name";
          }))(Example_App_Validation.toTextFieldError)(newtypeGroupForm)(newtypeGroupForm)()()(Example_App_UI_Element.input)({
              label: "Name",
              help: "Give the group a name.",
              placeholder: "January Analytics Seminar",
              sym: (prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).name
          })(v);
          var renderApplications = (function () {
              var taInput = {
                  placeholder: "Search one or more applications",
                  items: [ "Facebook", "Google", "Twitter", "Pinterest" ]
              };
              var selectComponent = Select_1.component(Effect_Aff_Class.monadAffAff)()()()(Example_App_UI_Typeahead.input(Data_Monoid.monoidArray))(Example_App_UI_Typeahead.multi(Effect_Aff_Class.monadAffAff)(Example_App_Validation.toTextString)(Data_Eq.eqString));
              var handler = function ($92) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(HandleTAMulti.create(Applications.value)($92)));
              };
              return Example_App_UI_Element.field({
                  label: "Application Targets",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Applications are available in several sizes.")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).applications)(v.form))
              })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "typeaheadMulti";
              }))(ordTASlot)(Example_App_UI_Typeahead["_typeaheadMulti"])(Applications.value)(selectComponent)(taInput)(handler) ]);
          })();
          var renderAdmin = (function () {
              var handler = function ($93) {
                  return Data_Maybe.Just.create(Formless_Action.injAction(HandleDropdown.create($93)));
              };
              var ddInput = {
                  placeholder: "Choose an admin",
                  items: Data_Functor.map(Data_Functor.functorArray)(function ($94) {
                      return Admin((function (v1) {
                          return {
                              id: v1
                          };
                      })($94));
                  })([ Data_Maybe.Nothing.value, Data_Maybe.Just.create(10), Data_Maybe.Just.create(15), Data_Maybe.Just.create(20), Data_Maybe.Just.create(25), Data_Maybe.Just.create(30), Data_Maybe.Just.create(35) ])
              };
              return Example_App_UI_Element.field({
                  label: "Administrator",
                  help: Example_App_UI_Element.resultToHelp(Example_App_Validation.toTextFieldError)("Choose an administrator for the account")(Formless_Retrieve.getResult(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).admin)(v.form))
              })([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "dropdown";
              }))(Data_Ord.ordUnit)(Example_App_UI_Dropdown["_dropdown"])(Data_Unit.unit)(Select_1.component(Effect_Aff_Class.monadAffAff)()()()(Example_App_UI_Dropdown.input)(Example_App_UI_Dropdown.spec(Effect_Aff_Class.monadAffAff)(toTextAdmin)(eqAdmin)))(ddInput)(handler) ]);
          })();
          var handleOF = function ($95) {
              return Data_Maybe.Just.create(Formless_Action.injAction(HandleOptionsForm.create($95)));
          };
          return Halogen_HTML_Elements.div_([ Example_App_UI_Element.grouped_([ Example_App_UI_Element.button([ Halogen_HTML_Events.onClick(function (v1) {
              return Data_Maybe.Just.create(Formless_Action.injAction(new Select(GroupTab.value)));
          }) ])([ Example_App_UI_Element.p_("Group Form" + (function () {
              var $56 = v.errors > 0;
              if ($56) {
                  return " (" + (Data_Show.show(Data_Show.showInt)(v.errors) + ")");
              };
              return "";
          })()) ]), Example_App_UI_Element.button([ Halogen_HTML_Events.onClick(function (v1) {
              return Data_Maybe.Just.create(Formless_Action.injAction(new Select(OptionsTab.value)));
          }) ])([ Example_App_UI_Element.p_("Options Form" + (function () {
              var $57 = v.optionsErrors > 0;
              if ($57) {
                  return " (" + (Data_Show.show(Data_Show.showInt)(v.optionsErrors) + ")");
              };
              return "";
          })()) ]), Example_App_UI_Element.buttonPrimary([ Halogen_HTML_Events.onClick(function (v1) {
              return new Data_Maybe.Just(Formless_Action.submit);
          }) ])([ Halogen_HTML_Core.text("Submit Form") ]), Example_App_UI_Element.button([ (function () {
              var $58 = v.dirty || v.optionsDirty;
              if ($58) {
                  return Halogen_HTML_Events.onClick(function (v1) {
                      return Data_Maybe.Just.create(Formless_Action.injAction(ResetForm.value));
                  });
              };
              return Halogen_HTML_Properties.disabled(true);
          })() ])([ Halogen_HTML_Core.text("Reset All") ]) ]), Halogen_HTML_Elements.div([ Example_App_UI_Element.class_(Data_Monoid.guard(Data_Monoid.monoidString)(Data_Eq.notEq(eqTab)(v.selectedTab)(GroupTab.value))("is-hidden")) ])([ Example_App_UI_Element.formContent_([ renderName, renderAdmin, renderSecretKey1, renderSecretKey2, renderApplications, renderPixels, renderWhiskey ]) ]), Halogen_HTML_Elements.div([ Example_App_UI_Element.class_(Data_Monoid.guard(Data_Monoid.monoidString)(Data_Eq.notEq(eqTab)(v.selectedTab)(OptionsTab.value))("is-hidden")) ])([ Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "optionsForm";
          }))(Data_Ord.ordUnit)(Example_RealWorld_OptionsForm["_optionsForm"])(Data_Unit.unit)(Example_RealWorld_OptionsForm.component)(Data_Unit.unit)(handleOF) ]) ]);
      };
      var input = (function () {
          var equalsSecretKey2 = Formless_Validation.hoistFnE(Effect_Aff.monadAff)(function (form) {
              return function (secretKey1) {
                  var secretKey2 = Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey2)(form);
                  var $60 = secretKey1 === secretKey2;
                  if ($60) {
                      return new Data_Either.Right(secretKey1);
                  };
                  return Data_Either.Left.create(new Example_App_Validation.NotEqual(secretKey2, secretKey1));
              };
          });
          var equalsSecretKey1 = Formless_Validation.hoistFnE(Effect_Aff.monadAff)(function (form) {
              return function (secretKey2) {
                  var secretKey1 = Formless_Retrieve.getInput(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey1)(form);
                  var $61 = secretKey2 === secretKey1;
                  if ($61) {
                      return new Data_Either.Right(secretKey2);
                  };
                  return Data_Either.Left.create(new Example_App_Validation.NotEqual(secretKey1, secretKey2));
              };
          });
          return {
              validators: {
                  name: Example_App_Validation.nonEmptyStr(Effect_Aff.monadAff),
                  admin: Example_App_Validation.exists(Effect_Aff.monadAff),
                  applications: Example_App_Validation.nonEmptyArray(Effect_Aff.monadAff),
                  pixels: Example_App_Validation.nonEmptyArray(Effect_Aff.monadAff),
                  whiskey: Example_App_Validation.exists(Effect_Aff.monadAff),
                  secretKey1: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.nonEmptyStr(Effect_Aff.monadAff))(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.minLength(Effect_Aff.monadAff)(5))(equalsSecretKey2)),
                  secretKey2: Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.nonEmptyStr(Effect_Aff.monadAff))(Control_Semigroupoid.composeFlipped(Formless_Validation.semigroupoidValidation(Effect_Aff.monadAff))(Example_App_Validation.minLength(Effect_Aff.monadAff)(5))(equalsSecretKey1))
              },
              initialInputs: Data_Maybe.Nothing.value,
              selectedTab: GroupTab.value,
              optionsErrors: 0,
              optionsDirty: false
          };
      })();
      var handleEvent = function (v) {
          if (v instanceof Formless_Types_Component.Submitted) {
              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                  return "optionsForm";
              }))(Data_Ord.ordUnit)(Example_RealWorld_OptionsForm["_optionsForm"])(Data_Unit.unit)(Halogen_Query.request(Formless_Query.submitReply)))(function (v1) {
                  var options = Data_Functor.map(Data_Maybe.functorMaybe)(function ($96) {
                      return Example_RealWorld_OptionsForm.Options(Formless_Transform_Record.unwrapOutputFields(Example_RealWorld_OptionsForm.newtypeOptionsForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "clickCost";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "dimensions";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "enable";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "installCost";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "metric";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "size";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "speed";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "viewCost";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()())()())()())()())()()))($96));
                  })(Control_Bind.join(Data_Maybe.bindMaybe)(v1));
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(10))(function (v2) {
                      return Halogen_Query_HalogenM.raise(Group(Record["delete"](new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))()()(Data_Symbol.SProxy.value)(Record.rename(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(new Data_Symbol.IsSymbol(function () {
                          return "secretKey";
                      }))()()()()(Data_Symbol.SProxy.value)(Data_Symbol.SProxy.value)(Record.insert(new Data_Symbol.IsSymbol(function () {
                          return "id";
                      }))()()(Data_Symbol.SProxy.value)(v2)(Record.insert(new Data_Symbol.IsSymbol(function () {
                          return "options";
                      }))()()(Data_Symbol.SProxy.value)(options)(Formless_Transform_Record.unwrapOutputFields(newtypeGroupForm)(Heterogeneous_Mapping.hmapRecord()(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Heterogeneous_Mapping.constMapping(Formless_Transform_Record.unwrapField(Formless_Types_Form.newtypeOutputField)))(Heterogeneous_Mapping.mapRecordWithIndexNil)()())()())()())()())()())()())()()))(v.value0)))))));
                  });
              });
          };
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
      };
      var handleAction = (function () {
          var $$eval = function (act) {
              return Formless_Component.handleAction(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqArray(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Types_Form.eqInputField(Data_Eq.eqArray(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(eqAdmin))))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.nilCountErrors))))))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.nilAllTouched))))))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil))))))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff)))))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "admin";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "applications";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "name";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "pixels";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey1";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "secretKey2";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
                  return "whiskey";
              }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)()(handleAction)(handleEvent)(act);
          };
          return function (v) {
              if (v instanceof Select) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $67 = {};
                      for (var $68 in v1) {
                          if ({}.hasOwnProperty.call(v1, $68)) {
                              $67[$68] = v1[$68];
                          };
                      };
                      $67.selectedTab = v.value0;
                      return $67;
                  });
              };
              if (v instanceof ResetForm) {
                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                      return "typeaheadMulti";
                  }))(ordTASlot)(Example_App_UI_Typeahead["_typeaheadMulti"])(Applications.value)(Example_App_UI_Typeahead.clear))(function (v1) {
                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                          return "typeaheadMulti";
                      }))(ordTASlot)(Example_App_UI_Typeahead["_typeaheadMulti"])(Pixels.value)(Example_App_UI_Typeahead.clear))(function (v2) {
                          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                              return "typeaheadSingle";
                          }))(Data_Ord.ordUnit)(Example_App_UI_Typeahead["_typeaheadSingle"])(Data_Unit.unit)(Example_App_UI_Typeahead.clear))(function (v3) {
                              return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                  return "dropdown";
                              }))(Data_Ord.ordUnit)(Example_App_UI_Dropdown["_dropdown"])(Data_Unit.unit)(Example_App_UI_Dropdown.clear))(function (v4) {
                                  return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Formless_Query.sendQuery(new Data_Symbol.IsSymbol(function () {
                                      return "optionsForm";
                                  }))(new Data_Symbol.IsSymbol(function () {
                                      return "dropdown";
                                  }))()()(Data_Ord.ordUnit)(Data_Ord.ordUnit)(Example_RealWorld_OptionsForm["_optionsForm"])(Data_Unit.unit)(Example_App_UI_Dropdown["_dropdown"])(Data_Unit.unit)(Example_App_UI_Dropdown.clear))(function (v5) {
                                      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.query()(new Data_Symbol.IsSymbol(function () {
                                          return "optionsForm";
                                      }))(Data_Ord.ordUnit)(Example_RealWorld_OptionsForm["_optionsForm"])(Data_Unit.unit)(Formless_Query.asQuery(Formless_Action.resetAll)))(function (v6) {
                                          return $$eval(Formless_Action.resetAll);
                                      });
                                  });
                              });
                          });
                      });
                  });
              };
              if (v instanceof HandleOptionsForm) {
                  return Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
                      var $71 = {};
                      for (var $72 in v1) {
                          if ({}.hasOwnProperty.call(v1, $72)) {
                              $71[$72] = v1[$72];
                          };
                      };
                      $71.optionsErrors = v.value0.errors;
                      $71.optionsDirty = v.value0.dirty;
                      return $71;
                  });
              };
              if (v instanceof UpdateKey1) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey1)(v.value0)))(function () {
                      return $$eval(Formless_Action.validate(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey2));
                  });
              };
              if (v instanceof UpdateKey2) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey2)(v.value0)))(function () {
                      return $$eval(Formless_Action.validate(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey1));
                  });
              };
              if (v instanceof HandleDropdown) {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.reset(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Class_Initial.initialString)(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey1)))(function () {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)($$eval(Formless_Action.reset(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Class_Initial.initialString)(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).secretKey2)))(function () {
                          if (v.value0 instanceof Example_App_UI_Dropdown.Selected) {
                              return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                                  return "admin";
                              }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "admin";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "applications";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "name";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "pixels";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "secretKey1";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "secretKey2";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "whiskey";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).admin)(new Data_Maybe.Just(v.value0.value0)));
                          };
                          if (v.value0 instanceof Example_App_UI_Dropdown.Cleared) {
                              return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                                  return "admin";
                              }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "admin";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "applications";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "name";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "pixels";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "secretKey1";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "secretKey2";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                                  return "whiskey";
                              }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).admin)(Data_Maybe.Nothing.value));
                          };
                          throw new Error("Failed pattern match at Example.RealWorld.GroupForm (line 211, column 7 - line 215, column 49): " + [ v.value0.constructor.name ]);
                      });
                  });
              };
              if (v instanceof HandleTASingle) {
                  return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "admin";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "applications";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "name";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "pixels";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey1";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "secretKey2";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                      return "whiskey";
                  }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).whiskey)(v.value0.value0));
              };
              if (v instanceof HandleTAMulti) {
                  if (v.value0 instanceof Applications) {
                      return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).applications)(v.value1.value0));
                  };
                  if (v.value0 instanceof Pixels) {
                      return $$eval(Formless_Action.setValidate(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(newtypeGroupForm)()((prx()(newtypeGroupForm)(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "admin";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "applications";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "name";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "pixels";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey1";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "secretKey2";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesCons(new Data_Symbol.IsSymbol(function () {
                          return "whiskey";
                      }))(Formless_Internal_Transform.row1Cons()())(Formless_Transform_Row.makeSProxiesNil))))))))).pixels)(v.value1.value0));
                  };
                  throw new Error("Failed pattern match at Example.RealWorld.GroupForm (line 220, column 54 - line 222, column 52): " + [ v.value0.constructor.name ]);
              };
              throw new Error("Failed pattern match at Example.RealWorld.GroupForm (line 178, column 18 - line 222, column 52): " + [ v.constructor.name ]);
          };
      })();
      return Formless_Component.component(Effect_Aff_Class.monadAffAff)()()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqArray(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqString)))()(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Types_Form.eqInputField(Data_Eq.eqArray(Data_Eq.eqString))))()(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Types_Form.eqInputField(Data_Maybe.eqMaybe(eqAdmin))))(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.inputFieldsToFormFieldsNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))()(Formless_Internal_Transform.inputFieldsToInputCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.inputFieldsToInputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))()(Formless_Internal_Transform.consCountErrors(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.nilCountErrors))))))))(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))()(Formless_Internal_Transform.consAllTouched(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.nilAllTouched))))))))(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.setFormFieldsTouchedNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Types_Form.newtypeInputField)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.replaceFormFieldInputsTouchedNil))))))))(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Types_Form.newtypeInputFunction)(Formless_Types_Form.newtypeFormField)()()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.modifyAllNil))))))))(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Effect_Aff.monadAff)()(newtypeGroupForm)()(Formless_Internal_Transform.row1Cons()())(Formless_Internal_Transform.applyToValidationNil(Effect_Aff.monadAff)))))))))(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))()(Formless_Internal_Transform.formFieldsToMaybeOutputNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "admin";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "applications";
      }))(Formless_Class_Initial.initialArray)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "name";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "pixels";
      }))(Formless_Class_Initial.initialArray)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey1";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "secretKey2";
      }))(Formless_Class_Initial.initialString)()(Formless_Transform_Row.mkInputFieldsFromRowCons(new Data_Symbol.IsSymbol(function () {
          return "whiskey";
      }))(Formless_Class_Initial.initialMaybe)()(Formless_Transform_Row.mkInputFieldsFromRowNil)(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(Formless_Internal_Transform.row1Cons()()))(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)(newtypeGroupForm)()()()()()()()()()(Data_Function["const"](input))({
          render: render,
          handleAction: handleAction,
          handleQuery: Formless_Component.defaultSpec.handleQuery,
          handleEvent: handleEvent,
          receive: Formless_Component.defaultSpec.receive,
          initialize: Formless_Component.defaultSpec.initialize,
          finalize: Formless_Component.defaultSpec.finalize
      });
  })();
  var _groupForm = Data_Symbol.SProxy.value;
  exports["Admin"] = Admin;
  exports["Group"] = Group;
  exports["GroupTab"] = GroupTab;
  exports["OptionsTab"] = OptionsTab;
  exports["GroupForm"] = GroupForm;
  exports["_groupForm"] = _groupForm;
  exports["Select"] = Select;
  exports["UpdateKey1"] = UpdateKey1;
  exports["UpdateKey2"] = UpdateKey2;
  exports["HandleDropdown"] = HandleDropdown;
  exports["HandleTASingle"] = HandleTASingle;
  exports["HandleTAMulti"] = HandleTAMulti;
  exports["HandleOptionsForm"] = HandleOptionsForm;
  exports["ResetForm"] = ResetForm;
  exports["Applications"] = Applications;
  exports["Pixels"] = Pixels;
  exports["prx"] = prx;
  exports["component"] = component;
  exports["eqGroupId"] = eqGroupId;
  exports["showGroupId"] = showGroupId;
  exports["eqAdmin"] = eqAdmin;
  exports["showAdmin"] = showAdmin;
  exports["toTextAdmin"] = toTextAdmin;
  exports["showGroup"] = showGroup;
  exports["eqTab"] = eqTab;
  exports["newtypeGroupForm"] = newtypeGroupForm;
  exports["eqTASlot"] = eqTASlot;
  exports["ordTASlot"] = ordTASlot;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Example.RealWorld.Page"] = $PS["Example.RealWorld.Page"] || {};
  var exports = $PS["Example.RealWorld.Page"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Example_App_UI_Element = $PS["Example.App.UI.Element"];
  var Example_RealWorld_GroupForm = $PS["Example.RealWorld.GroupForm"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];                
  var HandleGroupForm = (function () {
      function HandleGroupForm(value0) {
          this.value0 = value0;
      };
      HandleGroupForm.create = function (value0) {
          return new HandleGroupForm(value0);
      };
      return HandleGroupForm;
  })();
  var component = (function () {
      var render = function (st) {
          var handler = function ($9) {
              return Data_Maybe.Just.create(HandleGroupForm.create($9));
          };
          return Example_App_UI_Element.section_([ Example_App_UI_Element.h1_([ Halogen_HTML_Core.text("Formless") ]), Example_App_UI_Element.h2_([ Halogen_HTML_Core.text("A complex form inspired by real-world use cases.") ]), Example_App_UI_Element.p_("\x0a          This component demonstrates building a large form with complex rendering and validation requirements. Notice how both tabs end up unifying to a single output type after the two forms are combined, how various dropdowns determine the contents (and visibility) of other form elements, the assorted external components, and how validation for many fields depends on the values of other fields in the form.\x0a          "), Halogen_HTML_Elements.br_, Example_App_UI_Element.p_("\x0a          Next, review the source code. You'll notice that all of the complex types and state necessary to run this form can be generated from a pair of row types. All that's left for you to handle is to write the validation (with helper functions) and the render function.\x0a          "), Halogen_HTML_Elements.br_, Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "groupForm";
          }))(Data_Ord.ordUnit)(Example_RealWorld_GroupForm["_groupForm"])(Data_Unit.unit)(Example_RealWorld_GroupForm.component)(Data_Unit.unit)(handler) ]);
      };
      var initialState = {
          group: Data_Maybe.Nothing.value
      };
      var handleAction = function (v) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
              var $5 = {};
              for (var $6 in v1) {
                  if ({}.hasOwnProperty.call(v1, $6)) {
                      $5[$6] = v1[$6];
                  };
              };
              $5.group = new Data_Maybe.Just(v.value0);
              return $5;
          }))(function () {
              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Effect_Console.logShow(Example_RealWorld_GroupForm.showGroup)(v.value0));
          });
      };
      return Halogen_Component.mkComponent({
          initialState: function (v) {
              return initialState;
          },
          render: render,
          "eval": Halogen_Component.mkEval({
              handleAction: handleAction,
              handleQuery: Halogen_Component.defaultEval.handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  })();
  exports["HandleGroupForm"] = HandleGroupForm;
  exports["component"] = component;
})(PS);
(function(exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeDecodeURI = decodeURI;
  exports.unsafeEncodeURI = encodeURI;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeDecodeURI"] = $foreign.unsafeDecodeURI;
  exports["unsafeEncodeURI"] = $foreign.unsafeEncodeURI;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {};
  var exports = $PS["Halogen.Aff.Driver.State"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX_ = function (dictApplicative) {
      return function (f) {
          return unDriverStateX(function (st) {
              return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
          });
      };
  };
  var mkRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var renderStateX = function (dictFunctor) {
      return function (f) {
          return unDriverStateX(function (st) {
              return mkRenderStateX(f(st.rendering));
          });
      };
  };
  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;
  var mapDriverState = function (f) {
      return function (v) {
          return f(v);
      };
  };
  var initDriverState = function (component) {
      return function (input) {
          return function (handler) {
              return function (lchs) {
                  return function __do() {
                      var v = Effect_Ref["new"]({})();
                      var v1 = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var v2 = Effect_Ref["new"](Halogen_Data_Slot.empty)();
                      var v3 = Effect_Ref["new"](handler)();
                      var v4 = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var v5 = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
                      var v6 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
                      var v7 = Effect_Ref["new"](1)();
                      var v8 = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
                      var v9 = Effect_Ref["new"](Data_Map_Internal.empty)();
                      var ds = {
                          component: component,
                          state: component.initialState(input),
                          refs: Data_Map_Internal.empty,
                          children: Halogen_Data_Slot.empty,
                          childrenIn: v1,
                          childrenOut: v2,
                          selfRef: v,
                          handlerRef: v3,
                          pendingQueries: v4,
                          pendingOuts: v5,
                          pendingHandlers: v6,
                          rendering: Data_Maybe.Nothing.value,
                          fresh: v7,
                          subscriptions: v8,
                          forks: v9,
                          lifecycleHandlers: lchs
                      };
                      Effect_Ref.write(ds)(v)();
                      return mkDriverStateXRef(v);
                  };
              };
          };
      };
  };
  exports["mapDriverState"] = mapDriverState;
  exports["unDriverStateX"] = unDriverStateX;
  exports["mkDriverStateXRef"] = mkDriverStateXRef;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Query.EventSource"] = $PS["Halogen.Query.EventSource"] || {};
  var exports = $PS["Halogen.Query.EventSource"];
  var finalize = function (v) {
      return v;
  };
  exports["finalize"] = finalize;
})(PS);
(function(exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {};
  var exports = $PS["Halogen.Aff.Driver.Eval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Query_ChildQuery = $PS["Halogen.Query.ChildQuery"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];                
  var unsubscribe = function (sid) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v.subscriptions)))(function (v1) {
                  return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Halogen_Query_EventSource.finalize)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordSubscriptionId)(sid))(v1));
              });
          });
      };
  };
  var queueOrRun = function (ref) {
      return function (au) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              if (v instanceof Data_Maybe.Nothing) {
                  return au;
              };
              if (v instanceof Data_Maybe.Just) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(au, v.value0)))(ref));
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 195, column 33 - line 197, column 54): " + [ v.constructor.name ]);
          });
      };
  };
  var handleLifecycle = function (lchs) {
      return function (f) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
              initializers: Data_List_Types.Nil.value,
              finalizers: Data_List_Types.Nil.value
          })(lchs)))(function () {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (v) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v1) {
                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v);
                          });
                      });
                  });
              });
          });
      };
  };
  var fresh = function (f) {
      return function (ref) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                  return {
                      state: i + 1 | 0,
                      value: f(i)
                  };
              })(v.fresh));
          });
      };
  };
  var evalQ = function (render) {
      return function (ref) {
          return function (q) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                  return evalM(render)(ref)(v["component"]["eval"](new Halogen_Query_HalogenQ.Query(Data_Functor.map(Data_Coyoneda.functorCoyoneda)(Data_Maybe.Just.create)(Data_Coyoneda.liftCoyoneda(q)), Data_Function["const"](Data_Maybe.Nothing.value))));
              });
          };
      };
  };
  var evalM = function (render) {
      return function (initRef) {
          return function (v) {
              var evalChildQuery = function (ref) {
                  return function (cqb) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                          return Halogen_Query_ChildQuery.unChildQueryBox(function (v2) {
                              var evalChild = function (v3) {
                                  return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v3)))(function (v4) {
                                      return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                                          return evalQ(render)(ds.selfRef)(v2.value1);
                                      })(v4);
                                  }));
                              };
                              return Data_Functor.map(Effect_Aff.functorAff)(v2.value2)(Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(v2.value0(Effect_Aff.applicativeParAff)(evalChild)(v1.children)));
                          })(cqb);
                      });
                  };
              };
              var go = function (ref) {
                  return function (v1) {
                      if (v1 instanceof Halogen_Query_HalogenM.State) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              var v3 = v1.value0(v2.state);
                              if (Unsafe_Reference.unsafeRefEq(v2.state)(v3.value1)) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                              };
                              if (Data_Boolean.otherwise) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                                      component: v2.component,
                                      state: v3.value1,
                                      refs: v2.refs,
                                      children: v2.children,
                                      childrenIn: v2.childrenIn,
                                      childrenOut: v2.childrenOut,
                                      selfRef: v2.selfRef,
                                      handlerRef: v2.handlerRef,
                                      pendingQueries: v2.pendingQueries,
                                      pendingOuts: v2.pendingOuts,
                                      pendingHandlers: v2.pendingHandlers,
                                      rendering: v2.rendering,
                                      fresh: v2.fresh,
                                      subscriptions: v2.subscriptions,
                                      forks: v2.forks,
                                      lifecycleHandlers: v2.lifecycleHandlers
                                  })(ref)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v2.lifecycleHandlers)(render(v2.lifecycleHandlers)(ref)))(function () {
                                          return Control_Applicative.pure(Effect_Aff.applicativeAff)(v3.value0);
                                      });
                                  });
                              };
                              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 85, column 7 - line 91, column 21): " + [ v3.constructor.name ]);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Subscribe) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.SubscriptionId)(ref))(function (v2) {
                              var v3 = v1.value0(v2);
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v4) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(v3)(function (v5) {
                                      var done = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v4.subscriptions)))(function (v6) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordSubscriptionId)(v2)))(v4.subscriptions)))(function () {
                                              return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(v2))(v6))(Halogen_Query_EventSource.finalize(v5.finalizer));
                                          });
                                      });
                                      var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v6) {
                                          return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v4.subscriptions))))(function (v7) {
                                              return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqBoolean))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.member(Halogen_Query_HalogenM.ordSubscriptionId)(v2))(v7))(new Data_Maybe.Just(true)))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalF(render)(ref)(new Halogen_Query_Input.Action(v6)))))(function (v8) {
                                                  return consumer;
                                              }));
                                          });
                                      });
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordSubscriptionId)(v2)(done)))(v4.subscriptions)))(function () {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v5.producer)))(function () {
                                              return Halogen_Query_EventSource.finalize(done);
                                          });
                                      });
                                  })))(function (v5) {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(v2));
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Unsubscribe) {
                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(unsubscribe(v1.value0)(ref))(function () {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Lift) {
                          return v1.value0;
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.ChildQuery) {
                          return evalChildQuery(ref)(v1.value0);
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Raise) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.handlerRef)))(function (v3) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queueOrRun(v2.pendingOuts)(v3(v1.value0)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Par) {
                          return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($111) {
                              return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(evalM(render)(ref)($111));
                          })(v1.value0)));
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Fork) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(fresh(Halogen_Query_HalogenM.ForkId)(ref))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v3) {
                                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (v4) {
                                      return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Effect_Aff["finally"](Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                          Effect_Ref.modify_(Data_Map_Internal["delete"](Halogen_Query_HalogenM.ordForkId)(v2))(v3.forks)();
                                          return Effect_Ref.write(true)(v4)();
                                      }))(evalM(render)(ref)(v1.value0))))(function (v5) {
                                          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad.unlessM(Effect.monadEffect)(Effect_Ref.read(v4))(Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Query_HalogenM.ordForkId)(v2)(v5))(v3.forks))))(function () {
                                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(v2));
                                          });
                                      });
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.Kill) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v2.forks)))(function (v3) {
                                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(Effect_Aff.killFiber(Effect_Exception.error("Cancelled")))(Data_Map_Internal.lookup(Halogen_Query_HalogenM.ordForkId)(v1.value0)(v3)))(function () {
                                      return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1);
                                  });
                              });
                          });
                      };
                      if (v1 instanceof Halogen_Query_HalogenM.GetRef) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v2) {
                              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v1.value0)(v2.refs)));
                          });
                      };
                      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 82, column 12 - line 146, column 33): " + [ v1.constructor.name ]);
                  };
              };
              return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(initRef))(v);
          };
      };
  };
  var evalF = function (render) {
      return function (ref) {
          return function (v) {
              if (v instanceof Halogen_Query_Input.RefUpdate) {
                  return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Function.flip(Effect_Ref.modify_)(ref)(Halogen_Aff_Driver_State.mapDriverState(function (st) {
                      return {
                          component: st.component,
                          state: st.state,
                          refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(st.refs),
                          children: st.children,
                          childrenIn: st.childrenIn,
                          childrenOut: st.childrenOut,
                          selfRef: st.selfRef,
                          handlerRef: st.handlerRef,
                          pendingQueries: st.pendingQueries,
                          pendingOuts: st.pendingOuts,
                          pendingHandlers: st.pendingHandlers,
                          rendering: st.rendering,
                          fresh: st.fresh,
                          subscriptions: st.subscriptions,
                          forks: st.forks,
                          lifecycleHandlers: st.lifecycleHandlers
                      };
                  })));
              };
              if (v instanceof Halogen_Query_Input.Action) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
                      return evalM(render)(ref)(v1["component"]["eval"](new Halogen_Query_HalogenQ.Action(v.value0, Data_Unit.unit)));
                  });
              };
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 51, column 20 - line 57, column 62): " + [ v.constructor.name ]);
          };
      };
  };
  exports["evalF"] = evalF;
  exports["evalQ"] = evalQ;
  exports["evalM"] = evalM;
  exports["handleLifecycle"] = handleLifecycle;
  exports["queueOrRun"] = queueOrRun;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {};
  var exports = $PS["Halogen.Aff.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Data_Slot = $PS["Halogen.Data.Slot"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_HalogenQ = $PS["Halogen.Query.HalogenQ"];
  var Halogen_Query_Input = $PS["Halogen.Query.Input"];                
  var newLifecycleHandlers = Effect_Ref["new"]({
      initializers: Data_List_Types.Nil.value,
      finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var handlePending = function (ref) {
      return function __do() {
          var v = Effect_Ref.read(ref)();
          Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v)(function ($78) {
              return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($78)));
          })();
      };
  };
  var cleanupSubscriptionsAndForks = function (v) {
      return function __do() {
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($79) {
              return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(function ($80) {
                  return Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Halogen_Query_EventSource.finalize($80));
              })($79));
          }))(Effect_Ref.read(v.subscriptions))();
          Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
          Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function ($81) {
              return handleAff(Effect_Aff.killFiber(Effect_Exception.error("finalized"))($81));
          }))(Effect_Ref.read(v.forks))();
          return Effect_Ref.write(Data_Map_Internal.empty)(v.forks)();
      };
  };
  var runUI = function (renderSpec) {
      return function (component) {
          return function (i) {
              var subscribe = function (fresh) {
                  return function (ref) {
                      return function (consumer) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
                              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                  var v1 = Effect_Ref.read(fresh)();
                                  Effect_Ref.modify_(function (v2) {
                                      return v2 + 1 | 0;
                                  })(fresh)();
                                  Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(v1)(v))(ref)();
                                  return v1;
                              }))(function (v1) {
                                  var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.either(Data_Function["const"](new Data_Either.Right(Data_Unit.unit)))(Data_Either.Left.create))(Control_Monad_Error_Class["try"](Effect_Aff.monadErrorAff)(Effect_Aff_AVar.take(v))));
                                  return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(v1))(ref)))(function () {
                                          return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(v);
                                      });
                                  })));
                              });
                          });
                      };
                  };
              };
              var rootHandler = function (ref) {
                  return function (message) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                          return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(v));
                      });
                  };
              };
              var squashChildInitializers = function (lchs) {
                  return function (preInits) {
                      return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                          var parentInitializer = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Initialize(Data_Unit.unit)));
                          return Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                                      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(parentInitializer)(function () {
                                          return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                                              handlePending(st.pendingQueries)();
                                              return handlePending(st.pendingOuts)();
                                          });
                                      });
                                  }), preInits),
                                  finalizers: handlers.finalizers
                              };
                          })(lchs);
                      });
                  };
              };
              var runComponent = function (lchs) {
                  return function (handler) {
                      return function (j) {
                          return Halogen_Component.unComponent(function (c) {
                              return function __do() {
                                  var v = newLifecycleHandlers();
                                  var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(v)();
                                  var v2 = Effect_Ref.read(lchs)();
                                  Effect_Ref.write({
                                      initializers: Data_List_Types.Nil.value,
                                      finalizers: v2.finalizers
                                  })(lchs)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function ($82) {
                                      return render(lchs)((function (v3) {
                                          return v3.selfRef;
                                      })($82));
                                  }))(Effect_Ref.read(v1))();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(v2.initializers))(Effect_Ref.read(v1))();
                                  return v1;
                              };
                          });
                      };
                  };
              };
              var renderChild = function (lchs) {
                  return function (handler) {
                      return function (childrenInRef) {
                          return function (childrenOutRef) {
                              return Halogen_Component.unComponentSlot(function (slot) {
                                  return function __do() {
                                      var v = Data_Functor.map(Effect.functorEffect)(slot.pop)(Effect_Ref.read(childrenInRef))();
                                      var v1 = (function () {
                                          if (v instanceof Data_Maybe.Just) {
                                              Effect_Ref.write(v.value0.value1)(childrenInRef)();
                                              var v1 = Effect_Ref.read(v.value0.value0)();
                                              Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                                  return function __do() {
                                                      Data_Function.flip(Effect_Ref.write)(st.handlerRef)(function ($83) {
                                                          return Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler)(slot.output($83));
                                                      })();
                                                      return handleAff(Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](slot.input)))();
                                                  };
                                              })(v1)();
                                              return v.value0.value0;
                                          };
                                          if (v instanceof Data_Maybe.Nothing) {
                                              if (slot.input instanceof Halogen_Query_HalogenQ.Receive) {
                                                  return runComponent(lchs)(function ($84) {
                                                      return Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler)(slot.output($84));
                                                  })(slot.input.value0)(slot.component)();
                                              };
                                              return Effect_Exception["throw"]("Halogen internal error: slot input was not a Receive query")();
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 236, column 14 - line 250, column 7): " + [ v.constructor.name ]);
                                      })();
                                      var v2 = Data_Functor.map(Effect.functorEffect)(function ($85) {
                                          return Data_Maybe.isJust(slot.get($85));
                                      })(Effect_Ref.read(childrenOutRef))();
                                      Control_Applicative.when(Effect.applicativeEffect)(v2)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                      Effect_Ref.modify_(slot.set(v1))(childrenOutRef)();
                                      return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v3) {
                                          if (v3 instanceof Data_Maybe.Nothing) {
                                              return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                          };
                                          if (v3 instanceof Data_Maybe.Just) {
                                              return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v3.value0));
                                          };
                                          throw new Error("Failed pattern match at Halogen.Aff.Driver (line 254, column 37 - line 256, column 50): " + [ v3.constructor.name ]);
                                      }))();
                                  };
                              });
                          };
                      };
                  };
              };
              var render = function (lchs) {
                  return function ($$var) {
                      return function __do() {
                          var v = Effect_Ref.read($$var)();
                          var v1 = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
                          Control_Applicative.when(Effect.applicativeEffect)(v1)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
                          Effect_Ref.write(Halogen_Data_Slot.empty)(v.childrenOut)();
                          Effect_Ref.write(v.children)(v.childrenIn)();
                          var selfRef = Control_Category.identity(Control_Category.categoryFn)(v.selfRef);
                          var pendingQueries = Control_Category.identity(Control_Category.categoryFn)(v.pendingQueries);
                          var pendingHandlers = Control_Category.identity(Control_Category.categoryFn)(v.pendingHandlers);
                          var handler = function ($86) {
                              return Halogen_Aff_Driver_Eval.queueOrRun(pendingHandlers)(Data_Functor["void"](Effect_Aff.functorAff)(Halogen_Aff_Driver_Eval.evalF(render)(selfRef)($86)));
                          };
                          var childHandler = function ($87) {
                              return Halogen_Aff_Driver_Eval.queueOrRun(pendingQueries)(handler(Halogen_Query_Input.Action.create($87)));
                          };
                          var v2 = renderSpec.render(function ($88) {
                              return handleAff(handler($88));
                          })(renderChild(lchs)(childHandler)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
                          var v3 = Effect_Ref.read(v.childrenOut)();
                          var v4 = Effect_Ref.read(v.childrenIn)();
                          Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(v4)(function (v5) {
                              return function __do() {
                                  var v6 = Effect_Ref.read(v5)();
                                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(v6)();
                                  return finalize(lchs)(v6)();
                              };
                          })();
                          Data_Function.flip(Effect_Ref.modify_)(v.selfRef)(Halogen_Aff_Driver_State.mapDriverState(function (ds$prime) {
                              return {
                                  component: ds$prime.component,
                                  state: ds$prime.state,
                                  refs: ds$prime.refs,
                                  children: v3,
                                  childrenIn: ds$prime.childrenIn,
                                  childrenOut: ds$prime.childrenOut,
                                  selfRef: ds$prime.selfRef,
                                  handlerRef: ds$prime.handlerRef,
                                  pendingQueries: ds$prime.pendingQueries,
                                  pendingOuts: ds$prime.pendingOuts,
                                  pendingHandlers: ds$prime.pendingHandlers,
                                  rendering: new Data_Maybe.Just(v2),
                                  fresh: ds$prime.fresh,
                                  subscriptions: ds$prime.subscriptions,
                                  forks: ds$prime.forks,
                                  lifecycleHandlers: ds$prime.lifecycleHandlers
                              };
                          }))();
                          return Control_Applicative.when(Effect.applicativeEffect)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v5) {
                              return function __do() {
                                  var v6 = Effect_Ref.read(pendingHandlers)();
                                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(pendingHandlers)();
                                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($89) {
                                      return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($89)));
                                  })(v6)();
                                  var v7 = Effect_Ref.read(pendingHandlers)();
                                  var $68 = Data_Maybe.maybe(false)(Data_List["null"])(v7);
                                  if ($68) {
                                      return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                                  };
                                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                              };
                          }))();
                      };
                  };
              };
              var finalize = function (lchs) {
                  return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                      return function __do() {
                          cleanupSubscriptionsAndForks(st)();
                          var f = Halogen_Aff_Driver_Eval.evalM(render)(st.selfRef)(st["component"]["eval"](new Halogen_Query_HalogenQ.Finalize(Data_Unit.unit)));
                          Effect_Ref.modify_(function (handlers) {
                              return {
                                  initializers: handlers.initializers,
                                  finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                              };
                          })(lchs)();
                          return Halogen_Data_Slot.foreachSlot(Effect.applicativeEffect)(st.children)(function (v) {
                              return function __do() {
                                  var v1 = Effect_Ref.read(v)();
                                  return finalize(lchs)(v1)();
                              };
                          })();
                      };
                  });
              };
              var evalDriver = function (disposed) {
                  return function (ref) {
                      return function (q) {
                          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(disposed)))(function (v) {
                              if (v) {
                                  return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                              };
                              return Halogen_Aff_Driver_Eval.evalQ(render)(ref)(q);
                          });
                      };
                  };
              };
              var dispose = function (disposed) {
                  return function (lchs) {
                      return function (dsx) {
                          return function (subsRef) {
                              return Halogen_Aff_Driver_Eval.handleLifecycle(lchs)(function __do() {
                                  var v = Effect_Ref.read(disposed)();
                                  if (v) {
                                      return Data_Unit.unit;
                                  };
                                  Effect_Ref.write(true)(disposed)();
                                  Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function ($90) {
                                      return Effect_Aff.launchAff_(Effect_Aff_AVar.kill(Effect_Exception.error("disposed"))($90));
                                  }))(Effect_Ref.read(subsRef))();
                                  finalize(lchs)(dsx)();
                                  return Halogen_Aff_Driver_State.unDriverStateX(function ($91) {
                                      return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(renderSpec.dispose)((function (v1) {
                                          return v1.rendering;
                                      })($91));
                                  })(dsx)();
                              });
                          };
                      };
                  };
              };
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (v) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (v1) {
                      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](false)))(function (v2) {
                          return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
                              var v3 = Effect_Ref["new"](Data_Map_Internal.empty)();
                              var v4 = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref.read)(runComponent(v)(rootHandler(v3))(i)(component))();
                              return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                  return Control_Applicative.pure(Effect.applicativeEffect)({
                                      query: evalDriver(v2)(st.selfRef),
                                      subscribe: subscribe(v1)(v3),
                                      dispose: dispose(v2)(v)(v4)(v3)
                                  });
                              })(v4)();
                          });
                      });
                  });
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function(exports) {
  "use strict";                                               

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var querySelector = function (qs) {
      return function ($3) {
          return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_querySelector"](qs)($3));
      };
  };
  exports["querySelector"] = querySelector;
})(PS);
(function(exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);
(function(exports) {
  "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {};
  var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];              
  var Loading = (function () {
      function Loading() {

      };
      Loading.value = new Loading();
      return Loading;
  })();
  var Interactive = (function () {
      function Interactive() {

      };
      Interactive.value = new Interactive();
      return Interactive;
  })();
  var Complete = (function () {
      function Complete() {

      };
      Complete.value = new Complete();
      return Complete;
  })();
  var parse = function (v) {
      if (v === "loading") {
          return new Data_Maybe.Just(Loading.value);
      };
      if (v === "interactive") {
          return new Data_Maybe.Just(Interactive.value);
      };
      if (v === "complete") {
          return new Data_Maybe.Just(Complete.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["Loading"] = Loading;
  exports["Interactive"] = Interactive;
  exports["Complete"] = Complete;
  exports["parse"] = parse;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var toParentNode = Unsafe_Coerce.unsafeCoerce; 
  var toDocument = Unsafe_Coerce.unsafeCoerce;
  var readyState = function ($0) {
      return Data_Functor.map(Effect.functorEffect)(function ($1) {
          return Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value)(Web_HTML_HTMLDocument_ReadyState.parse($1));
      })($foreign["_readyState"]($0));
  };
  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["readyState"] = readyState;
})(PS);
(function(exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {};
  var exports = $PS["Halogen.Aff.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];                
  var selectElement = function (query) {
      return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function ($12) {
          return Web_DOM_ParentNode.querySelector(query)(Web_HTML_HTMLDocument.toParentNode($12));
      })(Web_HTML_Window.document))(Web_HTML.window)))(function (v) {
          return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v));
      });
  };
  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
      return function __do() {
          var v = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();
          if (v instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
              var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                  return callback(new Data_Either.Right(Data_Unit.unit));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1)();
              return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1));
          };
          callback(new Data_Either.Right(Data_Unit.unit))();
          return Effect_Aff.nonCanceler;
      };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
      return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (v) {
          return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v);
      });
  });
  exports["awaitLoad"] = awaitLoad;
  exports["awaitBody"] = awaitBody;
  exports["selectElement"] = selectElement;
  exports["runHalogenAff"] = runHalogenAff;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];                   
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];
  var haltWidget = function (v) {
      return Halogen_VDom_Machine.halt(v.widget);
  };
  var patchWidget = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchWidget(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Widget) {
          var v = Halogen_VDom_Machine.step(state.widget, vdom.value0);
          var res$prime = Halogen_VDom_Machine.unStep(function (v1) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1.value0, {
                  build: state.build,
                  widget: v
              }, patchWidget, haltWidget));
          })(v);
          return res$prime;
      };
      haltWidget(state);
      return state.build(vdom);
  };
  var haltText = function (v) {
      var v1 = Halogen_VDom_Util.parentNode(v.node);
      return Halogen_VDom_Util.removeChild(v.node, v1);
  };
  var patchText = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchText(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Text) {
          if (state.value === vdom.value0) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, state, patchText, haltText));
          };
          if (Data_Boolean.otherwise) {
              var nextState = {
                  build: state.build,
                  node: state.node,
                  value: vdom.value0
              };
              Halogen_VDom_Util.setTextContent(vdom.value0, state.node);
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchText, haltText));
          };
      };
      haltText(state);
      return state.build(vdom);
  };
  var haltKeyed = function (v) {
      var v1 = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, v1);
      Halogen_VDom_Util.forInE(v.children, function (v2, s) {
          return Halogen_VDom_Machine.halt(s);
      });
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var haltElem = function (v) {
      var v1 = Halogen_VDom_Util.parentNode(v.node);
      Halogen_VDom_Util.removeChild(v.node, v1);
      Halogen_VDom_Util.forEachE(v.children, Halogen_VDom_Machine.halt);
      return Halogen_VDom_Machine.halt(v.attrs);
  };
  var eqElemSpec = function (ns1, v, ns2, v1) {
      var $84 = v === v1;
      if ($84) {
          if (ns1 instanceof Data_Maybe.Just && (ns2 instanceof Data_Maybe.Just && ns1.value0 === ns2.value0)) {
              return true;
          };
          if (ns1 instanceof Data_Maybe.Nothing && ns2 instanceof Data_Maybe.Nothing) {
              return true;
          };
          return false;
      };
      return false;
  };
  var patchElem = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchElem(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Elem && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          var v1 = Data_Array.length(state.children);
          if (v1 === 0 && v === 0) {
              var v2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: v2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
          };
          var onThis = function (ix, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (ix, s, v2) {
              var v3 = Halogen_VDom_Machine.step(s, v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(v3), state.node);
              return v3;
          };
          var onThat = function (ix, v2) {
              var v3 = state.build(v2);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(v3), state.node);
              return v3;
          };
          var v2 = Halogen_VDom_Util.diffWithIxE(state.children, vdom.value3, onThese, onThis, onThat);
          var v3 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: v3,
              ns: vdom.value0,
              name: vdom.value1,
              children: v2
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchElem, haltElem));
      };
      haltElem(state);
      return state.build(vdom);
  };
  var patchKeyed = function (state, vdom) {
      if (vdom instanceof Halogen_VDom_Types.Grafted) {
          return patchKeyed(state, Halogen_VDom_Types.runGraft(vdom.value0));
      };
      if (vdom instanceof Halogen_VDom_Types.Keyed && eqElemSpec(state.ns, state.name, vdom.value0, vdom.value1)) {
          var v = Data_Array.length(vdom.value3);
          if (state.length === 0 && v === 0) {
              var v2 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
              var nextState = {
                  build: state.build,
                  node: state.node,
                  attrs: v2,
                  ns: vdom.value0,
                  name: vdom.value1,
                  children: state.children,
                  length: 0
              };
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
          };
          var onThis = function (v2, s) {
              return Halogen_VDom_Machine.halt(s);
          };
          var onThese = function (v2, ix$prime, s, v3) {
              var v5 = Halogen_VDom_Machine.step(s, v3.value1);
              Halogen_VDom_Util.insertChildIx(ix$prime, Halogen_VDom_Machine.extract(v5), state.node);
              return v5;
          };
          var onThat = function (v2, ix, v3) {
              var v5 = state.build(v3.value1);
              Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(v5), state.node);
              return v5;
          };
          var v2 = Halogen_VDom_Util.diffWithKeyAndIxE(state.children, vdom.value3, Data_Tuple.fst, onThese, onThis, onThat);
          var v3 = Halogen_VDom_Machine.step(state.attrs, vdom.value2);
          var nextState = {
              build: state.build,
              node: state.node,
              attrs: v3,
              ns: vdom.value0,
              name: vdom.value1,
              children: v2,
              length: v
          };
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(state.node, nextState, patchKeyed, haltKeyed));
      };
      haltKeyed(state);
      return state.build(vdom);
  };
  var buildWidget = function (v, build, w) {
      var v1 = v.buildWidget(v)(w);
      var res$prime = Halogen_VDom_Machine.unStep(function (v2) {
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v2.value0, {
              build: build,
              widget: v1
          }, patchWidget, haltWidget));
      })(v1);
      return res$prime;
  };
  var buildText = function (v, build, s) {
      var v1 = Halogen_VDom_Util.createTextNode(s, v.document);
      var state = {
          build: build,
          node: v1,
          value: s
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(v1, state, patchText, haltText));
  };
  var buildKeyed = function (v, build, ns1, name1, as1, ch1) {
      var v1 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(v1);
      var onChild = function (k, ix, v2) {
          var v3 = build(v2.value1);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(v3), node);
          return v3;
      };
      var v2 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var v3 = v.buildAttributes(v1)(as1);
      var state = {
          build: build,
          node: node,
          attrs: v3,
          ns: ns1,
          name: name1,
          children: v2,
          length: Data_Array.length(ch1)
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchKeyed, haltKeyed));
  };
  var buildElem = function (v, build, ns1, name1, as1, ch1) {
      var v1 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(ns1), name1, v.document);
      var node = Web_DOM_Element.toNode(v1);
      var onChild = function (ix, child) {
          var v2 = build(child);
          Halogen_VDom_Util.insertChildIx(ix, Halogen_VDom_Machine.extract(v2), node);
          return v2;
      };
      var v2 = Halogen_VDom_Util.forE(ch1, onChild);
      var v3 = v.buildAttributes(v1)(as1);
      var state = {
          build: build,
          node: node,
          attrs: v3,
          ns: ns1,
          name: name1,
          children: v2
      };
      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, state, patchElem, haltElem));
  };
  var buildVDom = function (spec) {
      var build = function (v) {
          if (v instanceof Halogen_VDom_Types.Text) {
              return buildText(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Elem) {
              return buildElem(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Keyed) {
              return buildKeyed(spec, build, v.value0, v.value1, v.value2, v.value3);
          };
          if (v instanceof Halogen_VDom_Types.Widget) {
              return buildWidget(spec, build, v.value0);
          };
          if (v instanceof Halogen_VDom_Types.Grafted) {
              return build(Halogen_VDom_Types.runGraft(v.value0));
          };
          throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [ v.constructor.name ]);
      };
      return build;
  };
  exports["buildVDom"] = buildVDom;
  exports["buildText"] = buildText;
  exports["buildElem"] = buildElem;
  exports["buildKeyed"] = buildKeyed;
  exports["buildWidget"] = buildWidget;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.Thunk"] = $PS["Halogen.VDom.Thunk"] || {};
  var exports = $PS["Halogen.VDom.Thunk"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];        
  var Thunk = (function () {
      function Thunk(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      Thunk.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new Thunk(value0, value1, value2, value3);
                  };
              };
          };
      };
      return Thunk;
  })();                                          
  var unsafeEqThunk = function (v, v1) {
      return Halogen_VDom_Util.refEq(v.value0, v1.value0) && (Halogen_VDom_Util.refEq(v.value1, v1.value1) && Halogen_VDom_Util.refEq(v.value3, v1.value3));
  };
  var thunk = function (tid, eqFn, f, a) {
      return new Thunk(tid, eqFn, f, a);
  };
  var runThunk = function (v) {
      return v.value2(v.value3);
  };
  var buildThunk = function (toVDom) {
      var haltThunk = function (state) {
          return Halogen_VDom_Machine.halt(state.vdom);
      };
      var patchThunk = function (state, t2) {
          var $45 = unsafeEqThunk(state.thunk, t2);
          if ($45) {
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(state.vdom), state, patchThunk, haltThunk));
          };
          var v = Halogen_VDom_Machine.step(state.vdom, toVDom(runThunk(t2)));
          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(v), {
              vdom: v,
              thunk: t2
          }, patchThunk, haltThunk));
      };
      var renderThunk = function (spec) {
          return function (t) {
              var v = Halogen_VDom_DOM.buildVDom(spec)(toVDom(runThunk(t)));
              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(v), {
                  thunk: t,
                  vdom: v
              }, patchThunk, haltThunk));
          };
      };
      return renderThunk;
  };
  exports["buildThunk"] = buildThunk;
  exports["runThunk"] = runThunk;
})(PS);
(function(exports) {
  "use strict";

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                   

  exports._parentNode = getEffProp("parentNode");          

  exports._nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];
  var parentNode = function ($2) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_parentNode"]($2));
  };
  var nextSibling = function ($7) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_nextSibling"]($7));
  };
  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {};
  var exports = $PS["Halogen.VDom.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Thunk = $PS["Halogen.VDom.Thunk"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var substInParent = function (v) {
      return function (v1) {
          return function (v2) {
              if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
              };
              if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
                  return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
              };
              return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          };
      };
  };
  var removeChild = function (v) {
      return function __do() {
          var v1 = Web_DOM_Node.parentNode(v.node)();
          return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
              return Web_DOM_Node.removeChild(v.node)(pn);
          })(v1)();
      };
  };
  var mkSpec = function (handler) {
      return function (renderChildRef) {
          return function (document) {
              var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
                  return v.node;
              });
              var done = function (st) {
                  if (st instanceof Data_Maybe.Just) {
                      return Halogen_VDom_Machine.halt(st.value0);
                  };
                  return Data_Unit.unit;
              };
              var buildWidget = function (spec) {
                  var buildThunk = Halogen_VDom_Thunk.buildThunk(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeHTML))(spec);
                  var renderComponentSlot = function (cs) {
                      var v = Effect_Ref.read(renderChildRef)();
                      var v1 = v(cs)();
                      var node = getNode(v1);
                      return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(node, Data_Maybe.Nothing.value, patch, done));
                  };
                  var render = function (slot) {
                      if (slot instanceof Halogen_Component.ComponentSlot) {
                          return renderComponentSlot(slot.value0);
                      };
                      if (slot instanceof Halogen_Component.ThunkSlot) {
                          var v = buildThunk(slot.value0);
                          return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(v), new Data_Maybe.Just(v), patch, done));
                      };
                      throw new Error("Failed pattern match at Halogen.VDom.Driver (line 85, column 7 - line 90, column 75): " + [ slot.constructor.name ]);
                  };
                  var patch = function (st, slot) {
                      if (st instanceof Data_Maybe.Just) {
                          if (slot instanceof Halogen_Component.ComponentSlot) {
                              Halogen_VDom_Machine.halt(st.value0);
                              return renderComponentSlot(slot.value0);
                          };
                          if (slot instanceof Halogen_Component.ThunkSlot) {
                              var v = Halogen_VDom_Machine.step(st.value0, slot.value0);
                              return Halogen_VDom_Machine.mkStep(new Halogen_VDom_Machine.Step(Halogen_VDom_Machine.extract(v), new Data_Maybe.Just(v), patch, done));
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 98, column 22 - line 104, column 79): " + [ slot.constructor.name ]);
                      };
                      return render(slot);
                  };
                  return render;
              };
              var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
              return {
                  buildWidget: buildWidget,
                  buildAttributes: buildAttributes,
                  document: document
              };
          };
      };
  };
  var renderSpec = function (document) {
      return function (container) {
          var render = function (handler) {
              return function (child) {
                  return function (v) {
                      return function (v1) {
                          if (v1 instanceof Data_Maybe.Nothing) {
                              return function __do() {
                                  var v2 = Effect_Ref["new"](child)();
                                  var spec = mkSpec(handler)(v2)(document);
                                  var v3 = Halogen_VDom_DOM.buildVDom(spec)(v);
                                  var node = Halogen_VDom_Machine.extract(v3);
                                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                                  return {
                                      machine: v3,
                                      node: node,
                                      renderChildRef: v2
                                  };
                              };
                          };
                          if (v1 instanceof Data_Maybe.Just) {
                              return function __do() {
                                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                                  var v2 = Web_DOM_Node.parentNode(v1.value0.node)();
                                  var v3 = Web_DOM_Node.nextSibling(v1.value0.node)();
                                  var v4 = Halogen_VDom_Machine.step(v1.value0.machine, v);
                                  var newNode = Halogen_VDom_Machine.extract(v4);
                                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                                  return {
                                      machine: v4,
                                      node: newNode,
                                      renderChildRef: v1.value0.renderChildRef
                                  };
                              };
                          };
                          throw new Error("Failed pattern match at Halogen.VDom.Driver (line 159, column 5 - line 175, column 80): " + [ v1.constructor.name ]);
                      };
                  };
              };
          };
          return {
              render: render,
              renderChild: Control_Category.identity(Control_Category.categoryFn),
              removeChild: removeChild,
              dispose: removeChild
          };
      };
  };
  var runUI = function (component) {
      return function (i) {
          return function (element) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (v) {
                  return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
              });
          };
      };
  };
  exports["runUI"] = runUI;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var hashchange = "hashchange";
  exports["hashchange"] = hashchange;
})(PS);
(function(exports) {
  "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["hash"] = $foreign.hash;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Routing.Hash"] = $PS["Routing.Hash"] || {};
  var exports = $PS["Routing.Hash"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_HashChangeEvent_EventTypes = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];
  var getHash = function __do() {
      var $8 = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
      return Data_Functor.map(Effect.functorEffect)(function ($9) {
          return Data_Maybe.fromMaybe("")(Data_String_CodeUnits.stripPrefix("#")($9));
      })(Web_HTML_Location.hash($8))();
  };
  var foldHashes = function (cb) {
      return function (init) {
          return function __do() {
              var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
              var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
              var v2 = Web_Event_EventTarget.eventListener(function (v2) {
                  return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(v))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(v)))(getHash)));
              })();
              Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1)();
              return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1);
          };
      };
  };
  var matchesWith = function (dictFoldable) {
      return function (parser) {
          return function (cb) {
              var go = function (a) {
                  return function ($10) {
                      return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
                          return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
                      })(Data_Foldable.indexl(dictFoldable)(0)(parser($10)));
                  };
              };
              return foldHashes(go)(go(Data_Maybe.Nothing.value));
          };
      };
  };
  var hashes = matchesWith(Data_Foldable.foldableMaybe)(Data_Maybe.Just.create);
  exports["getHash"] = getHash;
  exports["foldHashes"] = foldHashes;
  exports["hashes"] = hashes;
  exports["matchesWith"] = matchesWith;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Storybook"] = $PS["Halogen.Storybook"] || {};
  var exports = $PS["Halogen.Storybook"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Void = $PS["Data.Void"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
  var Routing_Hash = $PS["Routing.Hash"];                
  var RouteChange = (function () {
      function RouteChange(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      RouteChange.create = function (value0) {
          return function (value1) {
              return new RouteChange(value0, value1);
          };
      };
      return RouteChange;
  })();
  var handleQuery = function (v) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Data_Functor["void"](Halogen_Query_HalogenM.functorHalogenM)(Control_Monad_State_Class.modify(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $14 = {};
          for (var $15 in state) {
              if ({}.hasOwnProperty.call(state, $15)) {
                  $14[$15] = state[$15];
              };
          };
          $14.route = v.value0;
          return $14;
      })))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(new Data_Maybe.Just(v.value1));
      });
  };
  var class_ = function ($42) {
      return Halogen_HTML_Properties.class_(Halogen_HTML_Core.ClassName($42));
  };
  var renderStoryNames = function (v) {
      return function (items) {
          var linkActiveClass = "Storybook-link" + " is-active";
          return Halogen_HTML_Elements.ul([ class_("Storybook-nav-list") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(Data_Array.sortWith(Data_Ord.ordString)(function (v1) {
              return v1.name;
          })(items))(function (item) {
              return Halogen_HTML_Elements.li_([ Halogen_HTML_Elements.a([ class_((function () {
                  var $21 = v.route === item.path;
                  if ($21) {
                      return linkActiveClass;
                  };
                  return "Storybook-link";
              })()), Halogen_HTML_Properties.href("#" + Global_Unsafe.unsafeEncodeURI(item.path)) ])([ Halogen_HTML_Core.text(item.name) ]) ]);
          }));
      };
  };
  var renderSidebar = function (stories) {
      return function (state) {
          var nameObj = Data_Foldable.foldMapDefaultL(Data_Foldable.foldableArray)(Foreign_Object.monoidObject(Data_Semigroup.semigroupArray))(function (v) {
              if (v === "") {
                  return Foreign_Object.empty;
              };
              var v1 = Data_String_CodePoints.indexOf("|")(v);
              if (v1 instanceof Data_Maybe.Nothing) {
                  return Foreign_Object.singleton("")([ {
                      name: v,
                      path: v
                  } ]);
              };
              if (v1 instanceof Data_Maybe.Just) {
                  var v2 = Data_String_CodePoints.splitAt(v1.value0)(v);
                  return Foreign_Object.singleton(v2.before)([ {
                      name: Data_String_CodePoints.drop(1)(v2.after),
                      path: v
                  } ]);
              };
              throw new Error("Failed pattern match at Halogen.Storybook (line 103, column 7 - line 109, column 50): " + [ v1.constructor.name ]);
          })(Foreign_Object.keys(stories));
          var sorted = Data_Array.sortWith(Data_Ord.ordString)(Data_Tuple.fst)(Foreign_Object.toUnfoldable(Data_Unfoldable.unfoldableArray)(nameObj));
          return Halogen_HTML_Elements.div([ class_("Storybook-nav") ])(Data_Functor.mapFlipped(Data_Functor.functorArray)(sorted)(function (v) {
              if (v.value0 === "") {
                  return Halogen_HTML_Elements.div([ class_("Storybook-nav-section") ])([ renderStoryNames(state)(v.value1) ]);
              };
              return Halogen_HTML_Elements.div([ class_("Storybook-nav-section") ])([ Halogen_HTML_Elements.div([ class_("Storybook-nav-section-title") ])([ Halogen_HTML_Core.text(v.value0) ]), renderStoryNames(state)(v.value1) ]);
          }));
      };
  };
  var _child = Data_Symbol.SProxy.value;
  var renderMain = function (stories) {
      return function (state) {
          var v = Foreign_Object.lookup(state.route)(stories);
          if (v instanceof Data_Maybe.Just) {
              return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
                  return "child";
              }))(Data_Ord.ordString)(_child)(state.route)(v.value0)(Data_Unit.unit)(Data_Void.absurd);
          };
          return Halogen_HTML_Elements.div_([ Halogen_HTML_Elements.h2_([ Halogen_HTML_Core.text("Hello world") ]), Halogen_HTML_Elements.p_([ Halogen_HTML_Core.text("This site is powered by "), Halogen_HTML_Elements.a([ Halogen_HTML_Properties.href("https://github.com/rnons/purescript-halogen-storybook") ])([ Halogen_HTML_Core.text("halogen-storybook") ]), Halogen_HTML_Core.text(".") ]) ]);
      };
  };
  var render = function (v) {
      return function (state) {
          return Halogen_HTML_Elements.div([ class_("Storybook") ])([ Halogen_HTML_Elements.a([ class_("Storybook-logo"), Halogen_HTML_Properties.href("#") ])([ (function () {
              if (v.logo instanceof Data_Maybe.Nothing) {
                  return Halogen_HTML_Core.text("Halogen Storybook");
              };
              if (v.logo instanceof Data_Maybe.Just) {
                  return Halogen_HTML.fromPlainHTML(v.logo.value0);
              };
              throw new Error("Failed pattern match at Halogen.Storybook (line 135, column 7 - line 137, column 45): " + [ v.logo.constructor.name ]);
          })() ]), renderSidebar(v.stories)(state), Halogen_HTML_Elements.div([ class_("Storybook-main") ])([ renderMain(v.stories)(state) ]) ]);
      };
  };
  var app = function (config) {
      var initialState = {
          route: ""
      };
      return Halogen_Component.mkComponent({
          initialState: Data_Function["const"](initialState),
          render: render(config),
          "eval": Halogen_Component.mkEval({
              handleAction: Halogen_Component.defaultEval.handleAction,
              handleQuery: handleQuery,
              receive: Halogen_Component.defaultEval.receive,
              initialize: Halogen_Component.defaultEval.initialize,
              finalize: Halogen_Component.defaultEval.finalize
          })
      });
  };
  var runStorybook = function (config) {
      return function (body) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(app(config))(Data_Unit.unit)(body))(function (v) {
              return Data_Functor["void"](Effect_Aff.functorAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.hashes(function (v1) {
                  return function (next) {
                      return Effect_Aff.launchAff_(v.query(Halogen_Query.tell(RouteChange.create(Global_Unsafe.unsafeDecodeURI(next)))));
                  };
              })));
          });
      };
  };
  exports["runStorybook"] = runStorybook;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Halogen.Storybook.Proxy"] = $PS["Halogen.Storybook.Proxy"] || {};
  var exports = $PS["Halogen.Storybook.Proxy"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Symbol = $PS["Data.Symbol"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];                
  var _child = Data_Symbol.SProxy.value;
  var render = function (innerComponent) {
      return function (state) {
          return Halogen_HTML.slot()(new Data_Symbol.IsSymbol(function () {
              return "child";
          }))(Data_Ord.ordUnit)(_child)(Data_Unit.unit)(innerComponent)(state)(Data_Function["const"](Data_Maybe.Nothing.value));
      };
  };
  var proxy = function (innerComponent) {
      return Halogen_Component.mkComponent({
          initialState: Control_Category.identity(Control_Category.categoryFn),
          render: render(innerComponent),
          "eval": Halogen_Component.mkEval(Halogen_Component.defaultEval)
      });
  };
  exports["proxy"] = proxy;
})(PS);
(function($PS) {
  // Generated by purs version 0.12.5
  "use strict";
  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Example_App_Home = $PS["Example.App.Home"];
  var Example_Async_Component = $PS["Example.Async.Component"];
  var Example_Basic_Component = $PS["Example.Basic.Component"];
  var Example_ExternalComponents_Page = $PS["Example.ExternalComponents.Page"];
  var Example_Nested_Page = $PS["Example.Nested.Page"];
  var Example_RealWorld_Page = $PS["Example.RealWorld.Page"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Storybook = $PS["Halogen.Storybook"];
  var Halogen_Storybook_Proxy = $PS["Halogen.Storybook.Proxy"];                
  var stories = Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ Data_Tuple.Tuple.create("")(Halogen_Storybook_Proxy.proxy(Example_App_Home.component)), Data_Tuple.Tuple.create("basic")(Halogen_Storybook_Proxy.proxy(Example_Basic_Component.component)), Data_Tuple.Tuple.create("external-components")(Halogen_Storybook_Proxy.proxy(Example_ExternalComponents_Page.component)), Data_Tuple.Tuple.create("async")(Halogen_Storybook_Proxy.proxy(Example_Async_Component.component)), Data_Tuple.Tuple.create("nested")(Halogen_Storybook_Proxy.proxy(Example_Nested_Page.component)), Data_Tuple.Tuple.create("real-world")(Halogen_Storybook_Proxy.proxy(Example_RealWorld_Page.component)) ]);
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
      return Halogen_Storybook.runStorybook({
          stories: stories,
          logo: Data_Maybe.Just.create(Halogen_HTML_Core.text("Formless"))
      })(v);
  }));
  exports["stories"] = stories;
  exports["main"] = main;
})(PS);
PS["Main"].main();